[project]
name = "llm_fingerprint"
version = "0.5.2"
description = "Identify LLMs by their response fingerprints"
readme = "README.md"
license = "MIT"
authors = [{ name = "S1M0N38", email = "bertolottosimone@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
  "aiofiles>=24.1.0",
  "chromadb>=0.6.3",
  "httpx>=0.28.1",
  "openai>=1.66.3",
  "pydantic>=2.10.6",
  "qdrant-client>=1.13.3",
  "tqdm>=4.67.1",
]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Development Status :: 1 - Planning",
]

[project.urls]
Repository = "https://github.com/S1M0N38/llm-fingerprint.git"
Issues = "https://github.com/S1M0N38/llm-fingerprint/issues"
Changelog = "https://github.com/S1M0N38/llm-fingerprint/blob/main/CHANGELOG.md"

[project.scripts]
llm-fingerprint = "llm_fingerprint.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = "-v"
testpaths = ["tests"]
markers = [
  "llm: mark test as requiring LLM API access",
  "emb: mark test as requiring EMB API access",
  "db: mark test as requiring database access",
]
[tool.ruff.lint]
extend-select = ["I"]
task-tags = ["FIXME", "TODO", "HACK", "WARN", "PERF", "NOTE", "TEST"]

[tool.pyright]
typeCheckingMode = "basic"

[dependency-groups]
dev = [
  "basedpyright>=1.28.2",
  "commitizen>=4.4.1",
  "pre-commit>=4.1.0",
  "pytest>=8.3.5",
  "pytest-asyncio>=0.25.3",
  "ruff>=0.10.0",
]
