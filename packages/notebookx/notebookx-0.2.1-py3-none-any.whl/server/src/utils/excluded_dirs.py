import os

EXCLUDE_DIRS = {
    "node_modules",
    "venv",
    "__pycache__",
    ".git",
    ".idea",
    ".vscode",
    ".virtual_documents",
    ".ipynb_checkpoints",
    ".venv",
    "venv",
    "env",
    ".DS_Store",
}


class FileTypeMappings:
    """Centralized mapping of file types and their descriptions."""

    TYPES = {
        ".py": "Python Script",
        ".js": "JavaScript File",
        ".ts": "TypeScript File",
        ".java": "Java Source File",
        ".cpp": "C++ Source File",
        ".c": "C Source File",
        ".cs": "C# Source File",
        ".go": "Go Source File",
        ".rb": "Ruby Script",
        ".php": "PHP Script",
        ".sh": "Shell Script",
        ".bash": "Bash Script",
        ".html": "HTML Document",
        ".htm": "HTML Document",
        ".css": "CSS File",
        ".scss": "SCSS File",
        ".less": "LESS File",
        ".xml": "XML File",
        ".md": "Markdown Document",
        ".json": "JSON File",
        ".yaml": "YAML File",
        ".yml": "YAML File",
        ".toml": "TOML File",
        ".ini": "Configuration File",
        ".cfg": "Configuration File",
        ".csv": "CSV File",
        ".tsv": "TSV File",
        ".dockerfile": "Docker Configuration",
        "dockerfile": "Docker Configuration",
        "docker-compose.yml": "Docker Compose File",
        "docker-compose.yaml": "Docker Compose File",
        ".makefile": "Makefile",
        "makefile": "Makefile",
        ".cmake": "CMake File",
        ".pre-commit-config.yaml": "Pre-commit Config",
        ".gitignore": "Git Ignore File",
        ".gitattributes": "Git Attributes File",
        ".txt": "Text Document",
        ".log": "Log File",
        ".rst": "reStructuredText File",
        ".ipynb": "Jupyter Notebook",
        ".r": "R Script",
        ".sql": "SQL Script",
        ".bat": "Batch File",
        ".ps1": "PowerShell Script",
        ".env": "Environment File",
        ".jpg": "JPEG Image",
        ".jpeg": "JPEG Image",
        ".png": "PNG Image",
        ".gif": "GIF Image",
        ".bmp": "Bitmap Image",
        ".tiff": "TIFF Image",
        ".tif": "TIFF Image",
        ".webp": "WebP Image",
        ".svg": "SVG Vector Image",
        ".ico": "Icon File",
        ".raw": "Raw Image",
        ".mp3": "MP3 Audio",
        ".wav": "WAV Audio",
        ".ogg": "OGG Audio",
        ".flac": "FLAC Audio",
        ".aac": "AAC Audio",
        ".m4a": "M4A Audio",
        ".mp4": "MP4 Video",
        ".avi": "AVI Video",
        ".mkv": "MKV Video",
        ".mov": "MOV Video",
        ".wmv": "WMV Video",
        ".flv": "FLV Video",
        ".pdf": "PDF Document",
        ".doc": "Microsoft Word Document",
        ".docx": "Microsoft Word Document",
        ".xls": "Microsoft Excel Spreadsheet",
        ".xlsx": "Microsoft Excel Spreadsheet",
        ".ppt": "Microsoft PowerPoint Presentation",
        ".pptx": "Microsoft PowerPoint Presentation",
        ".zip": "ZIP Archive",
        ".rar": "RAR Archive",
        ".7z": "7z Archive",
        ".tar": "TAR Archive",
        ".gz": "GZIP Archive",
        ".bz2": "BZIP2 Archive",
        ".xz": "XZ Archive",
        ".dmg": "Disk Image",
        ".iso": "ISO Disk Image",
        ".exe": "Executable File",
        ".dll": "Dynamic Link Library",
        ".so": "Shared Object Library",
        ".a": "Static Library",
        ".lib": "Library File",
        ".jar": "Java Archive",
        ".war": "Web Application Archive",
        ".ear": "Enterprise Archive",
        ".apk": "Android Package",
        ".ipa": "iOS App Package",
        ".swift": "Swift Source File",
        ".kt": "Kotlin Source File",
        ".dart": "Dart Source File",
        ".lua": "Lua Script",
        ".perl": "Perl Script",
        ".asm": "Assembly Language File",
        ".h": "C/C++ Header File",
        ".hpp": "C++ Header File",
        ".hxx": "C++ Header File",
        ".hh": "C++ Header File",
        ".proto": "Protocol Buffer",
        ".graphql": "GraphQL Schema",
        ".vue": "Vue.js Component",
        ".jsx": "React JSX File",
        ".tsx": "React TSX File",
        ".svelte": "Svelte Component",
        ".coffee": "CoffeeScript File",
        ".vb": "Visual Basic File",
        ".vbs": "VBScript File",
        ".f": "Fortran Source File",
        ".for": "Fortran Source File",
        ".f90": "Fortran 90 Source File",
        ".rs": "Rust Source File",
        ".hs": "Haskell Source File",
        ".clj": "Clojure Source File",
        ".scala": "Scala Source File",
        ".groovy": "Groovy Source File",
        ".pl": "Perl Script",
        ".m": "Objective-C Source File",
        ".mm": "Objective-C++ Source File",
        ".ada": "Ada Source File",
        ".lisp": "Lisp Source File",
        ".scm": "Scheme Source File",
        ".diff": "Diff File",
        ".patch": "Patch File",
        ".db": "Database File",
        ".sqlite": "SQLite Database",
        ".sqlite3": "SQLite Database",
        ".mdb": "Microsoft Access Database",
        ".accdb": "Microsoft Access Database",
        ".psd": "Adobe Photoshop Document",
        ".ai": "Adobe Illustrator File",
        ".indd": "Adobe InDesign Document",
        ".dwg": "AutoCAD Drawing",
        ".dxf": "AutoCAD Drawing Exchange",
        ".obj": "3D Object File",
        ".stl": "3D Stereolithography File",
        ".unitypackage": "Unity Package",
        ".blend": "Blender File",
        ".pdb": "Program Database",
        ".map": "Map File",
        ".ttf": "TrueType Font",
        ".otf": "OpenType Font",
        ".woff": "Web Open Font Format",
        ".woff2": "Web Open Font Format 2",
        ".eot": "Embedded OpenType Font",
        ".pem": "PEM Certificate",
        ".crt": "Certificate File",
        ".cer": "Certificate File",
        ".key": "Private Key File",
        ".pub": "Public Key File",
        ".pfx": "Personal Information Exchange",
        ".jks": "Java KeyStore",
        ".keystore": "KeyStore File",
        ".properties": "Properties File",
        ".resx": "Resource File",
        ".vsdx": "Visio Drawing",
        ".msg": "Outlook Message",
        ".pst": "Outlook Personal Folders File",
    }

    @staticmethod
    def get_type(filename):
        """Get file type based on filename/extension."""
        filename_lower = filename.lower()
        for key in FileTypeMappings.TYPES:
            if filename_lower == key.lower():
                return FileTypeMappings.TYPES[key]

        # Then check extensions
        ext = os.path.splitext(filename)[-1].lower()
        return FileTypeMappings.TYPES.get(ext, "-")
