"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from amds.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import NotRequired, TypedDict


class CreateServerRequestBodyTypedDict(TypedDict):
    environment: NotRequired[str]
    port: NotRequired[float]
    server_name: NotRequired[str]
    server_request: NotRequired[str]


class CreateServerRequestBody(BaseModel):
    environment: Optional[str] = None

    port: Optional[float] = None

    server_name: Optional[str] = None

    server_request: Optional[str] = None


class CreateServerResponseBodyTypedDict(TypedDict):
    r"""Create Server"""

    alph_editor_url: NotRequired[str]
    environment: NotRequired[str]
    hourly_rate: NotRequired[float]
    port: NotRequired[float]
    port_forward_url: NotRequired[str]
    server_name: NotRequired[str]
    server_request: NotRequired[str]
    status: NotRequired[str]
    url: NotRequired[str]


class CreateServerResponseBody(BaseModel):
    r"""Create Server"""

    alph_editor_url: Optional[str] = None

    environment: Optional[str] = None

    hourly_rate: Optional[float] = None

    port: Optional[float] = None

    port_forward_url: Optional[str] = None

    server_name: Optional[str] = None

    server_request: Optional[str] = None

    status: Optional[str] = None

    url: Optional[str] = None


class CreateServerResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: CreateServerResponseBodyTypedDict


class CreateServerResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: CreateServerResponseBody
