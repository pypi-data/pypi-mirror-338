Metadata-Version: 2.3
Name: tessproposaltool
Version: 0.1.4
Summary: 
Author: Christina Hedges
Author-email: christina.l.hedges@nasa.gov
Requires-Python: >=3.9,<4.0.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: astropy (>=6.0.1,<7.0.0)
Requires-Dist: astroquery (>0.4.7)
Requires-Dist: asyncio (>=3.4.3,<4.0.0)
Requires-Dist: lksearch (>=1.1.0)
Requires-Dist: lxml (>=5.2.1,<6.0.0)
Requires-Dist: numpy (>=1.26.4,<2.0.0)
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: rich (>=13.7.1,<14.0.0)
Requires-Dist: tqdm (>=4.66.2,<5.0.0)
Description-Content-Type: text/markdown

<a href="https://github.com/tessgi/tessproposaltool/actions/workflows/tests.yml"><img src="https://github.com/tessgi/tessproposaltool/workflows/pytest/badge.svg" alt="Test status"/></a> [!
[![PyPI version](https://badge.fury.io/py/tessproposaltool.svg)](https://badge.fury.io/py/tessproposaltool)

# TESS Proposal Tool

Under development tool to help create TESS proposals and target lists.

## Use Case 1: Filling in missing TICs in a target list

If you have a list of RAs, Decs, and optionally TESS magnitudes and you would like to crossmatch them against TIC, you can do this with the `tessproposaltool`. You can do this from the command line using:

```shell
tpt radec_file.csv -o output.csv
```

Which will result in a file `output.csv` that contains the corrected RA, Dec, TESS magnitude and TIC numbers.

Your file should have a structure that contains RAs, Decs, and optionally TESS magnitudes, e.g.:

```shell
ra,dec,tmag
40.2986,56.7305,9.39
110.093,-22.2673,13.51
116.243,-30.0918,9.5
152.633,-59.3549,10.05
163.437,-58.4871,9.91
165.091,-60.7688,12.974
```

To do this inside Python you can use

```python
from tessproposaltool import create_target_list

# read in your radecs, or convert them into a pandas dataframe
RA, Dec, Tmag = ..., ..., ...
df = pd.DataFrame(np.asarray([RA, Dec, Tmag]).T, columns=['ra', 'dec', 'tmag'])
new_df = create_target_list(df)
```

A tutorial demonstrating the above function can be found in <a href="https://github.com/tessgi/tessproposaltool/blob/main/tutorials/CreateProposalTargetList.ipynb">tutorials/CreateProposalTargetList.ipynb</a>. 
