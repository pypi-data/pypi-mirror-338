name: Python package

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Run tests
      run: |
        pytest

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && 
      (startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads/main')
    permissions:
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        
    - name: Set version for main branch
      if: github.ref == 'refs/heads/main'
      run: |
        # Get the short SHA of the commit
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        # Get current date in YYYYMMDD format
        DATE=$(date +'%Y%m%d')
        # Update version in pyproject.toml or setup.py to include dev suffix
        # This assumes you're using a dynamic version from your VCS tags
        echo "PACKAGE_VERSION=0.0.0.dev${DATE}${SHORT_SHA}" >> $GITHUB_ENV
        
    - name: Build package
      run: python -m build
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1