{
    "pathway_id": "llm_completion_001",
    "name": "Simple LLM Completion",
    "description": "A simple pathway for LLM text completion with preprocessing and postprocessing. This pathway has two posts: the first post takes a prompt as input and preprocesses it, and the second post takes the preprocessed text as input and completes it.\n\nSpecify the model and prompt in the input variables.\n\nExample input variables: {\"completion_model\": \"qwen2.5:32b\", \"prompt\": \"What is the capital of France?\", \"translate_model\": \"qwen2.5:32b\"}",
    "entrance_post": {
        "post_id": "post_1",
        "name": "Preprocess Input",
        "practice": "Chat",
        "parameters": {
            "model": "{completion_model}",
            "prompt": "{prompt}"
        },
        "inputs": {
            "completion_model": {
                "type": "string",
                "description": "The model to be used for the LLM completion"
            },
            "prompt": {
                "type": "string",
                "description": "The prompt to be used for the LLM completion"
            }
        },
        "outputs": {
            "post_2": {
                "field_mapping": {
                    "complete_text": "original_text"
                }
            }
        },
        "post_group": "generation"
    },
    "exit_posts": ["post_2"],
    "posts": [
        {
            "post_id": "post_2",
            "name": "Translate to Chinese",
            "practice": "Chat",
            "parameters": {
                "model": "{translate_model}",
                "prompt": "Translate the following text to Chinese: {original_text}"
            },
            "inputs": {
                "translate_model": {
                    "type": "string",
                    "description": "The model to be used for the translation"
                },
                "original_text": {
                    "type": "string",
                    "description": "The prompt to be used for the LLM completion"
                }
            },
            "outputs": {
                "exit": {
                    "field_mapping": {
                        "complete_text": "result"
                    }   
                }
            },
            "post_group": "generation"
        }
    ],
    "execution_plan": {
        "concurrency_limit": 1,
        "post_groups": {
            "generation": {
                "concurrency": 1
            }
        }
    }
}