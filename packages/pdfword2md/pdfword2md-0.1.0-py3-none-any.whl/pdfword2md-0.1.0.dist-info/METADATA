Metadata-Version: 2.1
Name: pdfword2md
Version: 0.1.0
Summary: A tool to convert between PDF, DOCX and Markdown formats
Home-page: https://github.com/yourusername/pdfword2md
Author: Your Name
Author-email: your.email@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: pypdf2
Requires-Dist: python-docx
Requires-Dist: markdown
Requires-Dist: pdf2docx
Requires-Dist: pandoc
Requires-Dist: weasyprint

# 格式转换工具

这是一个支持Word/PDF/MD等格式互转的工具，特别优化了MD格式转换，确保输出符合标准且能被大模型高效识别。

## 功能

- PDF转Markdown
- DOCX转Markdown
- Markdown转PDF
- Markdown转DOCX
- 批量转换功能

## 安装

1. 确保已安装Python 3.6+
2. 安装方法（任选其一）：
   - 从源码安装依赖：
     ```
     pip install -r requirements.txt
     ```
   - 直接安装依赖：
     ```
     pip install PyPDF2 python-docx markdown weasyprint
     ```
   - 从whl包安装（推荐）：
     ```
     pip install dist/pdfword2md-0.1.0-py3-none-any.whl
     ```

## 使用
安装完成后，可以直接在命令行中使用：
```
pdfword2md input.pdf output.md
```

## 使用

导入`converter.py`中的`FormatConverter`类，或直接运行脚本进行转换。

## 版本发布

### v1.0
- 初始稳定版本
- 支持PDF/DOCX/MD格式互转
- 包含批量转换功能
- 完善的错误处理和日志记录

### 方法详细说明

1. **pdf_to_md(pdf_path, output_path)**
   - 参数:
     - pdf_path: PDF文件路径
     - output_path: 输出的Markdown文件路径
   - 返回值: 成功返回True，失败返回False
   - 功能: 将PDF文件转换为Markdown格式，自动识别标题和列表格式

2. **docx_to_md(docx_path, output_path)**
   - 参数:
     - docx_path: Word文档路径
     - output_path: 输出的Markdown文件路径
   - 返回值: 成功返回True，失败返回False
   - 功能: 将Word文档转换为Markdown格式，保留标题样式和列表

3. **md_to_pdf(md_path, output_path)**
   - 参数:
     - md_path: Markdown文件路径
     - output_path: 输出的PDF文件路径
   - 返回值: 成功返回True，失败返回False
   - 功能: 将Markdown转换为PDF格式

4. **md_to_docx(md_path, output_path)**
   - 参数:
     - md_path: Markdown文件路径
     - output_path: 输出的Word文档路径
   - 返回值: 成功返回True，失败返回False
   - 功能: 将Markdown转换为Word文档格式

5. **batch_convert(file_list, output_dir, convert_type)**
   - 参数:
     - file_list: 要转换的文件路径列表
     - output_dir: 输出目录
     - convert_type: 转换类型 ('pdf_to_md', 'docx_to_md', 'md_to_pdf', 'md_to_docx')
   - 返回值: 成功转换的文件数量
   - 功能: 批量转换多个文件

### 基本使用示例
```python
from converter import FormatConverter

converter = FormatConverter()

# PDF转Markdown
converter.pdf_to_md("input.pdf", "output.md")

# DOCX转Markdown
converter.docx_to_md("input.docx", "output.md")

# Markdown转PDF
converter.md_to_pdf("input.md", "output.pdf")

# Markdown转DOCX
converter.md_to_docx("input.md", "output.docx")
```

### 批量转换示例
```python
from converter import FormatConverter

converter = FormatConverter()

# 准备文件列表
files = ["file1.pdf", "file2.docx", "file3.md"]

# 批量转换为Markdown
converter.batch_convert(files, "output_dir", "pdf_to_md")
converter.batch_convert(files, "output_dir", "docx_to_md")

# 批量转换为PDF/DOCX
converter.batch_convert(files, "output_dir", "md_to_pdf")
converter.batch_convert(files, "output_dir", "md_to_docx")
```

## 注意事项

- 确保输入文件路径正确
- 输出文件需要有写入权限
- MD转换特别优化了结构清晰度和元数据完整性
- 批量转换时，输出目录会自动创建
- 转换过程中会生成日志文件`converter.log`，可用于排查问题
- 对于大文件转换，建议分批处理以避免内存问题

## 常见问题

1. **转换后的Markdown格式不正确**
   - 检查输入文件是否包含特殊格式
   - 确保使用最新版本的转换工具

2. **批量转换部分文件失败**
   - 检查日志文件`converter.log`获取详细错误信息
   - 确保所有输入文件路径正确且有读取权限

3. **内存不足错误**
   - 对于大文件，建议分批处理
   - 增加系统可用内存

4. **输出文件权限问题**
   - 确保输出目录有写入权限
   - 检查文件是否被其他程序占用
