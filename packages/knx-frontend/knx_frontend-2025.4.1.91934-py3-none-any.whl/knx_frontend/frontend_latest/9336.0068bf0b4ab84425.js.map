{"version":3,"file":"9336.0068bf0b4ab84425.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-hls-player.ts","webpack://knx-frontend/./homeassistant-frontend/src/dialogs/config-flow/previews/flow-preview-generic.ts","webpack://knx-frontend/./homeassistant-frontend/src/dialogs/config-flow/previews/flow-preview-generic_camera.ts"],"sourcesContent":["import type HlsType from \"hls.js\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { nextRender } from \"../common/util/render-status\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-alert\";\nimport { fetchStreamUrl } from \"../data/camera\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\n\ntype HlsLite = Omit<\n  HlsType,\n  \"subtitleTrackController\" | \"audioTrackController\" | \"emeController\"\n>;\n\n@customElement(\"ha-hls-player\")\nclass HaHLSPlayer extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public entityid?: string;\n\n  @property() public url?: string;\n\n  @property({ attribute: \"poster-url\" }) public posterUrl?: string;\n\n  @property({ type: Boolean, attribute: \"controls\" })\n  public controls = false;\n\n  @property({ type: Boolean, attribute: \"muted\" })\n  public muted = false;\n\n  @property({ type: Boolean, attribute: \"autoplay\" })\n  public autoPlay = false;\n\n  @property({ type: Boolean, attribute: \"playsinline\" })\n  public playsInline = false;\n\n  @property({ type: Boolean, attribute: \"allow-exoplayer\" })\n  public allowExoPlayer = false;\n\n  // don't cache this, as we remove it on disconnects\n  @query(\"video\") private _videoEl!: HTMLVideoElement;\n\n  @state() private _error?: string;\n\n  @state() private _errorIsFatal = false;\n\n  @state() private _url!: string;\n\n  private _hlsPolyfillInstance?: HlsLite;\n\n  private _exoPlayer = false;\n\n  private static streamCount = 0;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    HaHLSPlayer.streamCount += 1;\n    if (this.hasUpdated) {\n      this._resetError();\n      this._startHls();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    HaHLSPlayer.streamCount -= 1;\n    this._cleanUp();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._error\n        ? html`<ha-alert\n            alert-type=\"error\"\n            class=${this._errorIsFatal ? \"fatal\" : \"retry\"}\n          >\n            ${this._error}\n          </ha-alert>`\n        : \"\"}\n      ${!this._errorIsFatal\n        ? html`<video\n            .poster=${this.posterUrl}\n            ?autoplay=${this.autoPlay}\n            .muted=${this.muted}\n            ?playsinline=${this.playsInline}\n            ?controls=${this.controls}\n            @loadeddata=${this._loadedData}\n          ></video>`\n        : \"\"}\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    const entityChanged = changedProps.has(\"entityid\");\n    const urlChanged = changedProps.has(\"url\");\n\n    if (entityChanged) {\n      this._getStreamUrlFromEntityId();\n    } else if (urlChanged && this.url) {\n      this._cleanUp();\n      this._resetError();\n      this._url = this.url;\n      this._startHls();\n    }\n  }\n\n  private async _getStreamUrlFromEntityId(): Promise<void> {\n    this._cleanUp();\n    this._resetError();\n\n    if (!isComponentLoaded(this.hass!, \"stream\")) {\n      this._setFatalError(\"Streaming component is not loaded.\");\n      return;\n    }\n\n    if (!this.entityid) {\n      return;\n    }\n    try {\n      const { url } = await fetchStreamUrl(this.hass!, this.entityid);\n\n      this._url = this.hass.hassUrl(url);\n      this._cleanUp();\n      this._resetError();\n      this._startHls();\n    } catch (err: any) {\n      // Fails if we were unable to get a stream\n      // eslint-disable-next-line\n      console.error(err);\n\n      fireEvent(this, \"streams\", { hasAudio: false, hasVideo: false });\n    }\n  }\n\n  private async _startHls(): Promise<void> {\n    const masterPlaylistPromise = fetch(this._url);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const Hls: typeof HlsType = (await import(\"hls.js/dist/hls.light.mjs\"))\n      .default;\n\n    if (!this.isConnected) {\n      return;\n    }\n\n    let hlsSupported = Hls.isSupported();\n\n    if (!hlsSupported) {\n      hlsSupported =\n        this._videoEl.canPlayType(\"application/vnd.apple.mpegurl\") !== \"\";\n    }\n\n    if (!hlsSupported) {\n      this._setFatalError(\n        this.hass.localize(\"ui.components.media-browser.video_not_supported\")\n      );\n      return;\n    }\n\n    const useExoPlayer =\n      this.allowExoPlayer && this.hass.auth.external?.config.hasExoPlayer;\n    const masterPlaylist = await (await masterPlaylistPromise).text();\n\n    if (!this.isConnected) {\n      return;\n    }\n\n    // Parse playlist assuming it is a master playlist. Match group 1 and 2 are codec, match group 3 is regular playlist url\n    // See https://tools.ietf.org/html/rfc8216 for HLS spec details\n    const playlistRegexp =\n      /#EXT-X-STREAM-INF:.*?(?:CODECS=\".*?([^.]*)?\\..*?,([^.]*)?\\..*?\".*?)?(?:\\n|\\r\\n)(.+)/g;\n    const match = playlistRegexp.exec(masterPlaylist);\n    const matchTwice = playlistRegexp.exec(masterPlaylist);\n\n    // Get the regular playlist url from the input (master) playlist, falling back to the input playlist if necessary\n    // This avoids the player having to load and parse the master playlist again before loading the regular playlist\n    let playlist_url: string;\n    if (match !== null && matchTwice === null) {\n      // Only send the regular playlist url if we match exactly once\n      playlist_url = new URL(match[3], this._url).href;\n    } else {\n      playlist_url = this._url;\n    }\n\n    const codecs = match ? `${match[1]},${match[2]}` : undefined;\n\n    this._reportStreams(codecs);\n\n    // If codec is HEVC and ExoPlayer is supported, use ExoPlayer.\n    if (\n      useExoPlayer &&\n      (codecs?.includes(\"hevc\") || codecs?.includes(\"hev1\"))\n    ) {\n      this._renderHLSExoPlayer(playlist_url);\n    } else if (Hls.isSupported()) {\n      this._renderHLSPolyfill(this._videoEl, Hls, playlist_url);\n    } else {\n      this._renderHLSNative(this._videoEl, playlist_url);\n    }\n  }\n\n  private async _renderHLSExoPlayer(url: string) {\n    this._exoPlayer = true;\n    window.addEventListener(\"resize\", this._resizeExoPlayer);\n    this.updateComplete.then(() => nextRender()).then(this._resizeExoPlayer);\n    this._videoEl.style.visibility = \"hidden\";\n    await this.hass!.auth.external!.fireMessage({\n      type: \"exoplayer/play_hls\",\n      payload: {\n        url,\n        muted: this.muted,\n      },\n    });\n  }\n\n  private _resizeExoPlayer = () => {\n    if (!this._videoEl) {\n      return;\n    }\n    const rect = this._videoEl.getBoundingClientRect();\n    this.hass!.auth.external!.fireMessage({\n      type: \"exoplayer/resize\",\n      payload: {\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n      },\n    });\n  };\n\n  private _isLLHLSSupported(): boolean {\n    // LL-HLS keeps multiple requests in flight, which can run into browser limitations without\n    // an http/2 proxy to pipeline requests. However, a small number of streams active at\n    // once should be OK.\n    // The stream count may be incremented multiple times before this function is called to check\n    // the count e.g. when loading a page with many streams on it. The race can work in our favor\n    // so we now have a better idea on if we'll use too many browser connections later.\n    if (HaHLSPlayer.streamCount <= 2) {\n      return true;\n    }\n    if (\n      !(\"performance\" in window) ||\n      performance.getEntriesByType(\"resource\").length === 0\n    ) {\n      return false;\n    }\n    const perfEntry = performance.getEntriesByType(\n      \"resource\"\n    )[0] as PerformanceResourceTiming;\n    return \"nextHopProtocol\" in perfEntry && perfEntry.nextHopProtocol === \"h2\";\n  }\n\n  private async _renderHLSPolyfill(\n    videoEl: HTMLVideoElement,\n    Hls: typeof HlsType,\n    url: string\n  ) {\n    const hls = new Hls({\n      backBufferLength: 60,\n      fragLoadingTimeOut: 30000,\n      manifestLoadingTimeOut: 30000,\n      levelLoadingTimeOut: 30000,\n      maxLiveSyncPlaybackRate: 2,\n      lowLatencyMode: this._isLLHLSSupported(),\n    });\n    this._hlsPolyfillInstance = hls;\n    hls.attachMedia(videoEl);\n    hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n      this._resetError();\n      hls.loadSource(url);\n    });\n    hls.on(Hls.Events.FRAG_LOADED, (_event, _data: any) => {\n      this._resetError();\n    });\n    hls.on(Hls.Events.ERROR, (_event, data: any) => {\n      // Some errors are recovered automatically by the hls player itself, and the others handled\n      // in this function require special actions to recover. Errors retried in this function\n      // are done with backoff to not cause unnecessary failures.\n      if (!data.fatal) {\n        return;\n      }\n      if (data.type === Hls.ErrorTypes.NETWORK_ERROR) {\n        switch (data.details) {\n          case Hls.ErrorDetails.MANIFEST_LOAD_ERROR: {\n            let error = \"Error starting stream, see logs for details\";\n            if (\n              data.response !== undefined &&\n              data.response.code !== undefined\n            ) {\n              if (data.response.code >= 500) {\n                error += \" (Server failure)\";\n              } else if (data.response.code >= 400) {\n                error += \" (Stream never started)\";\n              } else {\n                error += \" (\" + data.response.code + \")\";\n              }\n            }\n            this._setRetryableError(error);\n            break;\n          }\n          case Hls.ErrorDetails.MANIFEST_LOAD_TIMEOUT:\n            this._setRetryableError(\"Timeout while starting stream\");\n            break;\n          default:\n            this._setRetryableError(\"Stream network error\");\n            break;\n        }\n        hls.startLoad();\n      } else if (data.type === Hls.ErrorTypes.MEDIA_ERROR) {\n        this._setRetryableError(\"Error with media stream contents\");\n        hls.recoverMediaError();\n      } else {\n        this._setFatalError(\"Error playing stream\");\n      }\n    });\n  }\n\n  private async _renderHLSNative(videoEl: HTMLVideoElement, url: string) {\n    videoEl.src = url;\n    videoEl.addEventListener(\"loadedmetadata\", () => {\n      videoEl.play();\n    });\n  }\n\n  private _cleanUp() {\n    if (this._hlsPolyfillInstance) {\n      this._hlsPolyfillInstance.destroy();\n      this._hlsPolyfillInstance = undefined;\n    }\n    if (this._exoPlayer) {\n      window.removeEventListener(\"resize\", this._resizeExoPlayer);\n      this.hass!.auth.external!.fireMessage({ type: \"exoplayer/stop\" });\n      this._exoPlayer = false;\n    }\n    if (this._videoEl) {\n      this._videoEl.removeAttribute(\"src\");\n      this._videoEl.load();\n    }\n  }\n\n  private _resetError() {\n    this._error = undefined;\n    this._errorIsFatal = false;\n  }\n\n  private _setFatalError(errorMessage: string) {\n    this._error = errorMessage;\n    this._errorIsFatal = true;\n    fireEvent(this, \"streams\", { hasAudio: false, hasVideo: false });\n  }\n\n  private _setRetryableError(errorMessage: string) {\n    this._error = errorMessage;\n    this._errorIsFatal = false;\n    fireEvent(this, \"streams\", { hasAudio: false, hasVideo: false });\n  }\n\n  private _reportStreams(codecs?: string) {\n    const codec = codecs?.split(\",\");\n    fireEvent(this, \"streams\", {\n      hasAudio: codec?.includes(\"mp4a\") ?? false,\n      hasVideo: codec?.includes(\"mp4a\")\n        ? codec?.length > 1\n        : Boolean(codec?.length),\n    });\n  }\n\n  private _loadedData() {\n    fireEvent(this, \"load\");\n  }\n\n  static styles = css`\n    :host,\n    video {\n      display: block;\n    }\n\n    video {\n      width: 100%;\n      max-height: var(--video-max-height, calc(100vh - 97px));\n    }\n\n    .fatal {\n      display: block;\n      padding: 100px 16px;\n    }\n\n    .retry {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-hls-player\": HaHLSPlayer;\n  }\n}\n","import type { HassEntity, UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { LitElement, html } from \"lit\";\nimport type { nothing, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport type { FlowType } from \"../../../data/data_entry_flow\";\nimport type { GenericPreview } from \"../../../data/preview\";\nimport { subscribePreviewGeneric } from \"../../../data/preview\";\nimport type { HomeAssistant } from \"../../../types\";\nimport \"./entity-preview-row\";\nimport { debounce } from \"../../../common/util/debounce\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-alert\";\n\n@customElement(\"flow-preview-generic\")\nexport class FlowPreviewGeneric extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public flowType!: FlowType;\n\n  public handler!: string;\n\n  @property() public domain!: string;\n\n  @property({ attribute: false }) public stepId!: string;\n\n  @property({ attribute: false }) public flowId!: string;\n\n  @property({ attribute: false }) public stepData!: Record<string, any>;\n\n  @state() protected _preview?: HassEntity;\n\n  @state() protected _error?: string;\n\n  private _unsub?: Promise<UnsubscribeFunc>;\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    if (this._unsub) {\n      this._unsub.then((unsub) => unsub());\n      this._unsub = undefined;\n    }\n  }\n\n  willUpdate(changedProps) {\n    if (changedProps.has(\"stepData\")) {\n      this._debouncedSubscribePreview();\n    }\n  }\n\n  protected render(): TemplateResult | typeof nothing {\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n    return html`<entity-preview-row\n      .hass=${this.hass}\n      .stateObj=${this._preview}\n    ></entity-preview-row>`;\n  }\n\n  private _setPreview = (preview: GenericPreview) => {\n    const now = new Date().toISOString();\n    this._preview = {\n      entity_id: `${this.stepId}.___flow_preview___`,\n      last_changed: now,\n      last_updated: now,\n      context: { id: \"\", parent_id: null, user_id: null },\n      ...preview,\n    };\n  };\n\n  private _debouncedSubscribePreview = debounce(() => {\n    this._subscribePreview();\n  }, 250);\n\n  private async _subscribePreview() {\n    if (this._unsub) {\n      (await this._unsub)();\n      this._unsub = undefined;\n    }\n    if (this.flowType !== \"config_flow\" && this.flowType !== \"options_flow\") {\n      return;\n    }\n    try {\n      this._unsub = subscribePreviewGeneric(\n        this.hass,\n        this.domain,\n        this.flowId,\n        this.flowType,\n        this.stepData,\n        this._setPreview\n      );\n      fireEvent(this, \"set-flow-errors\", { errors: {} });\n    } catch (err: any) {\n      if (typeof err.message === \"string\") {\n        this._error = err.message;\n      } else {\n        this._error = undefined;\n        fireEvent(this, \"set-flow-errors\", err.message);\n      }\n      this._unsub = undefined;\n      this._preview = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"flow-preview-generic\": FlowPreviewGeneric;\n  }\n}\n","import { html, nothing } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { FlowPreviewGeneric } from \"./flow-preview-generic\";\nimport \"../../../components/ha-hls-player\";\nimport \"../../../components/ha-spinner\";\n\n@customElement(\"flow-preview-generic_camera\")\nclass FlowPreviewGenericCamera extends FlowPreviewGeneric {\n  protected override render() {\n    if (!this._preview) {\n      return nothing;\n    }\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n\n    const stillUrl = this._preview.attributes.still_url;\n    const streamUrl = this._preview.attributes.stream_url;\n\n    return html` ${stillUrl\n      ? html`<p>Still image:</p>\n          <p>\n            <img src=${stillUrl} alt=\"Still preview\" />\n          </p>`\n      : \"\"}\n    ${streamUrl\n      ? html`<p>Stream:</p>\n          <ha-spinner\n            class=\"render-spinner\"\n            id=\"hls-load-spinner\"\n            size=\"large\"\n          ></ha-spinner>\n          <ha-hls-player\n            autoplay\n            playsinline\n            .hass=${this.hass}\n            .url=${streamUrl}\n            @load=${this._videoLoaded}\n          ></ha-hls-player>`\n      : \"\"}`;\n  }\n\n  private _videoLoaded() {\n    this.shadowRoot!.getElementById(\"hls-load-spinner\")?.remove();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"flow-preview-generic_camera\": FlowPreviewGenericCamera;\n  }\n}\n"],"names":["_decorate","customElement","_initialize","_LitElement","HaHLSPlayer","constructor","args","F","d","kind","decorators","property","attribute","key","value","type","Boolean","query","state","static","_superPropGet","streamCount","this","hasUpdated","_resetError","_startHls","_cleanUp","html","_error","_errorIsFatal","posterUrl","autoPlay","muted","playsInline","controls","_loadedData","changedProps","entityChanged","has","urlChanged","_getStreamUrlFromEntityId","url","_url","isComponentLoaded","hass","entityid","fetchStreamUrl","hassUrl","err","console","error","fireEvent","hasAudio","hasVideo","_setFatalError","masterPlaylistPromise","fetch","Hls","default","isConnected","hlsSupported","isSupported","_videoEl","canPlayType","localize","useExoPlayer","allowExoPlayer","auth","external","config","hasExoPlayer","masterPlaylist","text","playlistRegexp","match","exec","matchTwice","playlist_url","URL","href","codecs","undefined","_reportStreams","includes","_renderHLSExoPlayer","_renderHLSPolyfill","_renderHLSNative","_exoPlayer","window","addEventListener","_resizeExoPlayer","updateComplete","then","nextRender","style","visibility","fireMessage","payload","rect","getBoundingClientRect","left","top","right","bottom","performance","getEntriesByType","length","perfEntry","nextHopProtocol","videoEl","hls","backBufferLength","fragLoadingTimeOut","manifestLoadingTimeOut","levelLoadingTimeOut","maxLiveSyncPlaybackRate","lowLatencyMode","_isLLHLSSupported","_hlsPolyfillInstance","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","FRAG_LOADED","_event","_data","ERROR","data","fatal","ErrorTypes","NETWORK_ERROR","details","ErrorDetails","MANIFEST_LOAD_ERROR","response","code","_setRetryableError","MANIFEST_LOAD_TIMEOUT","startLoad","MEDIA_ERROR","recoverMediaError","src","play","destroy","removeEventListener","removeAttribute","load","errorMessage","codec","split","css","LitElement","FlowPreviewGeneric","_unsub","unsub","_debouncedSubscribePreview","_preview","preview","now","Date","toISOString","entity_id","stepId","last_changed","last_updated","context","id","parent_id","user_id","debounce","_subscribePreview","flowType","subscribePreviewGeneric","domain","flowId","stepData","_setPreview","errors","message","_FlowPreviewGeneric","nothing","stillUrl","attributes","still_url","streamUrl","stream_url","_videoLoaded","shadowRoot","getElementById","remove"],"mappings":"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"}