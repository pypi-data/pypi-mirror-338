{"version":3,"file":"8586.72da4e4a00cad346.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/string/title-case.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-navigation-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/lovelace/config/types.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-navigation.ts"],"sourcesContent":["export const titleCase = (s) =>\n  s.replace(/^_*(.)|_+(.)/g, (_s, c, d) =>\n    c ? c.toUpperCase() : \" \" + d.toUpperCase()\n  );\n","import \"@material/mwc-list/mwc-list-item\";\nimport type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { titleCase } from \"../common/string/title-case\";\nimport { fetchConfig } from \"../data/lovelace/config/types\";\nimport type { LovelaceViewRawConfig } from \"../data/lovelace/config/view\";\nimport type { HomeAssistant, PanelInfo, ValueChangedEvent } from \"../types\";\nimport \"./ha-combo-box\";\nimport type { HaComboBox } from \"./ha-combo-box\";\nimport \"./ha-icon\";\n\ninterface NavigationItem {\n  path: string;\n  icon: string;\n  title: string;\n}\n\nconst DEFAULT_ITEMS: NavigationItem[] = [];\n\nconst rowRenderer: ComboBoxLitRenderer<NavigationItem> = (item) => html`\n  <mwc-list-item graphic=\"icon\" .twoline=${!!item.title}>\n    <ha-icon .icon=${item.icon} slot=\"graphic\"></ha-icon>\n    <span>${item.title || item.path}</span>\n    <span slot=\"secondary\">${item.path}</span>\n  </mwc-list-item>\n`;\n\nconst createViewNavigationItem = (\n  prefix: string,\n  view: LovelaceViewRawConfig,\n  index: number\n) => ({\n  path: `/${prefix}/${view.path ?? index}`,\n  icon: view.icon ?? \"mdi:view-compact\",\n  title: view.title ?? (view.path ? titleCase(view.path) : `${index}`),\n});\n\nconst createPanelNavigationItem = (hass: HomeAssistant, panel: PanelInfo) => ({\n  path: `/${panel.url_path}`,\n  icon: panel.icon ?? \"mdi:view-dashboard\",\n  title:\n    panel.url_path === hass.defaultPanel\n      ? hass.localize(\"panel.states\")\n      : hass.localize(`panel.${panel.title}`) ||\n        panel.title ||\n        (panel.url_path ? titleCase(panel.url_path) : \"\"),\n});\n\n@customElement(\"ha-navigation-picker\")\nexport class HaNavigationPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() private _opened = false;\n\n  private navigationItemsLoaded = false;\n\n  private navigationItems: NavigationItem[] = DEFAULT_ITEMS;\n\n  @query(\"ha-combo-box\", true) private comboBox!: HaComboBox;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        item-value-path=\"path\"\n        item-label-path=\"path\"\n        .value=${this._value}\n        allow-custom-value\n        .filteredItems=${this.navigationItems}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n        @filter-changed=${this._filterChanged}\n      >\n      </ha-combo-box>\n    `;\n  }\n\n  private async _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n    if (this._opened && !this.navigationItemsLoaded) {\n      this._loadNavigationItems();\n    }\n  }\n\n  private async _loadNavigationItems() {\n    this.navigationItemsLoaded = true;\n\n    const panels = Object.entries(this.hass!.panels).map(([id, panel]) => ({\n      id,\n      ...panel,\n    }));\n    const lovelacePanels = panels.filter(\n      (panel) => panel.component_name === \"lovelace\"\n    );\n\n    const viewConfigs = await Promise.all(\n      lovelacePanels.map((panel) =>\n        fetchConfig(\n          this.hass!.connection,\n          // path should be null to fetch default lovelace panel\n          panel.url_path === \"lovelace\" ? null : panel.url_path,\n          true\n        )\n          .then((config) => [panel.id, config] as [string, typeof config])\n          .catch((_) => [panel.id, undefined] as [string, undefined])\n      )\n    );\n\n    const panelViewConfig = new Map(viewConfigs);\n\n    this.navigationItems = [];\n\n    for (const panel of panels) {\n      this.navigationItems.push(createPanelNavigationItem(this.hass!, panel));\n\n      const config = panelViewConfig.get(panel.id);\n\n      if (!config || !(\"views\" in config)) continue;\n\n      config.views.forEach((view, index) =>\n        this.navigationItems.push(\n          createViewNavigationItem(panel.url_path, view, index)\n        )\n      );\n    }\n\n    this.comboBox.filteredItems = this.navigationItems;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues) {\n    return !this._opened || changedProps.has(\"_opened\");\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    this._setValue(ev.detail.value);\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: this._value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  private _filterChanged(ev: CustomEvent): void {\n    const filterString = ev.detail.value.toLowerCase();\n    const characterCount = filterString.length;\n    if (characterCount >= 2) {\n      const filteredItems: NavigationItem[] = [];\n\n      this.navigationItems.forEach((item) => {\n        if (\n          item.path.toLowerCase().includes(filterString) ||\n          item.title.toLowerCase().includes(filterString)\n        ) {\n          filteredItems.push(item);\n        }\n      });\n\n      if (filteredItems.length > 0) {\n        this.comboBox.filteredItems = filteredItems;\n      } else {\n        this.comboBox.filteredItems = [];\n      }\n    } else {\n      this.comboBox.filteredItems = this.navigationItems;\n    }\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  static styles = css`\n    ha-icon,\n    ha-svg-icon {\n      color: var(--primary-text-color);\n      position: relative;\n      bottom: 0px;\n    }\n    *[slot=\"prefix\"] {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-navigation-picker\": HaNavigationPicker;\n  }\n}\n","import type { Connection } from \"home-assistant-js-websocket\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { LovelaceResource } from \"../resource\";\nimport type { LovelaceStrategyConfig } from \"./strategy\";\nimport type { LovelaceViewRawConfig } from \"./view\";\n\nexport interface LovelaceDashboardBaseConfig {}\n\nexport interface LovelaceConfig extends LovelaceDashboardBaseConfig {\n  background?: string;\n  views: LovelaceViewRawConfig[];\n}\n\nexport interface LovelaceDashboardStrategyConfig\n  extends LovelaceDashboardBaseConfig {\n  strategy: LovelaceStrategyConfig;\n}\n\nexport interface LegacyLovelaceConfig extends LovelaceConfig {\n  resources?: LovelaceResource[];\n}\n\nexport type LovelaceRawConfig =\n  | LovelaceConfig\n  | LovelaceDashboardStrategyConfig;\n\nexport function isStrategyDashboard(\n  config: LovelaceRawConfig\n): config is LovelaceDashboardStrategyConfig {\n  return \"strategy\" in config;\n}\n\nexport const fetchConfig = (\n  conn: Connection,\n  urlPath: string | null,\n  force: boolean\n): Promise<LovelaceRawConfig> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/config\",\n    url_path: urlPath,\n    force,\n  });\n\nexport const saveConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null,\n  config: LovelaceRawConfig\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/save\",\n    url_path: urlPath,\n    config,\n  });\n\nexport const deleteConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/delete\",\n    url_path: urlPath,\n  });\n","import { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { NavigationSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-navigation-picker\";\n\n@customElement(\"ha-selector-navigation\")\nexport class HaNavigationSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: NavigationSelector;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  protected render() {\n    return html`\n      <ha-navigation-picker\n        .hass=${this.hass}\n        .label=${this.label}\n        .value=${this.value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        .helper=${this.helper}\n        @value-changed=${this._valueChanged}\n      ></ha-navigation-picker>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    fireEvent(this, \"value-changed\", { value: ev.detail.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-navigation\": HaNavigationSelector;\n  }\n}\n"],"names":["titleCase","s","replace","_s","c","d","toUpperCase","DEFAULT_ITEMS","rowRenderer","item","html","title","icon","path","createViewNavigationItem","prefix","view","index","createPanelNavigationItem","hass","panel","url_path","defaultPanel","localize","_decorate","customElement","_initialize","_LitElement","F","constructor","args","kind","decorators","property","attribute","key","value","type","Boolean","state","query","this","_value","navigationItems","label","helper","disabled","required","_openedChanged","_valueChanged","_filterChanged","ev","_opened","detail","navigationItemsLoaded","_loadNavigationItems","panels","Object","entries","map","id","lovelacePanels","filter","component_name","viewConfigs","Promise","all","fetchConfig","conn","connection","urlPath","force","sendMessagePromise","then","config","catch","_","undefined","panelViewConfig","Map","push","get","views","forEach","comboBox","filteredItems","changedProps","has","stopPropagation","_setValue","fireEvent","bubbles","composed","filterString","toLowerCase","length","includes","static","css","LitElement","HaNavigationSelector","reflect"],"mappings":"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"}