{"version":3,"file":"3037.1dbc4ccd0ccd663d.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_boolean-form.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputBoolean } from \"../../../../data/input_boolean\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_boolean-form\")\nclass HaInputBooleanForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputBoolean;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  set item(item: InputBoolean) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_boolean-form\": HaInputBooleanForm;\n  }\n}\n"],"names":["_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","state","item","this","_item","_name","name","_icon","icon","updateComplete","then","shadowRoot","querySelector","focus","hass","html","_valueChanged","localize","nothing","ev","new","stopPropagation","configValue","target","detail","newValue","fireEvent","static","haStyle","css","LitElement"],"mappings":"4KAWwBA,EAAAA,EAAAA,GAAA,EADvBC,EAAAA,EAAAA,IAAc,2BAAwB,SAAAC,EAAAC,GAuGtC,OAAAC,EAvGD,cACwBD,EAAoBE,WAAAA,IAAAC,GAAA,SAAAA,GAAAJ,EAAA,QAApBK,EAAA,EAAAC,KAAA,QAAAC,WAAA,EACrBC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,OAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,MAAAC,KAAAA,GAAA,OAAc,CAAK,IAAAL,KAAA,QAAAI,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAI9CO,EAAAA,EAAAA,OAAOJ,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEPO,EAAAA,EAAAA,OAAOJ,IAAA,QAAAC,WAAA,IAAAL,KAAA,MAAAI,IAAA,OAAAC,MAER,SAASI,GACPC,KAAKC,MAAQF,EACTA,GACFC,KAAKE,MAAQH,EAAKI,MAAQ,GAC1BH,KAAKI,MAAQL,EAAKM,MAAQ,KAE1BL,KAAKE,MAAQ,GACbF,KAAKI,MAAQ,GAEjB,GAAC,CAAAd,KAAA,SAAAI,IAAA,QAAAC,MAED,WACEK,KAAKM,eAAeC,MAAK,IAErBP,KAAKQ,YAAYC,cAAc,yBAC9BC,SAEP,GAAC,CAAApB,KAAA,SAAAI,IAAA,SAAAC,MAED,WACE,OAAKK,KAAKW,KAIHC,EAAAA,EAAI;;;mBAGIZ,KAAKE;yBACC;mBACNF,KAAKa;mBACLb,KAAKW,KAAMG,SAClB;;;+BAImBd,KAAKW,KAAMG,SAC9B;;;;kBAKMd,KAAKW;mBACJX,KAAKI;yBACC;2BACEJ,KAAKa;mBACbb,KAAKW,KAAMG,SAClB;;;MAzBCC,EAAAA,EA8BX,GAAC,CAAAzB,KAAA,SAAAI,IAAA,gBAAAC,MAED,SAAsBqB,GACpB,IAAKhB,KAAKiB,MAAQjB,KAAKC,MACrB,OAEFe,EAAGE,kBACH,MAAMC,EAAeH,EAAGI,OAAeD,YACjCxB,EAAQqB,EAAGK,QAAQ1B,OAAUqB,EAAGI,OAAezB,MACrD,GAAIK,KAAK,IAAImB,OAAmBxB,EAC9B,OAEF,MAAM2B,EAAW,IAAKtB,KAAKC,OACtBN,EAGH2B,EAASH,GAAexB,SAFjB2B,EAASH,IAIlBI,EAAAA,EAAAA,GAAUvB,KAAM,gBAAiB,CAC/BL,MAAO2B,GAEX,GAAC,CAAAhC,KAAA,MAAAkC,QAAA,EAAA9B,IAAA,SAAAC,MAED,WACE,MAAO,CACL8B,EAAAA,GACAC,EAAAA,EAAG;;;;;;;;;;;QAaP,IAAC,GArG8BC,EAAAA,G"}