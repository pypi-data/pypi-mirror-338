{"version":3,"file":"5864.2ddb896eddd9975d.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/first_weekday.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/format_time.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/resolve-time-zone.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/use_am_pm.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-schedule-form.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/show-dialog-schedule-block-info.ts"],"sourcesContent":["import { getWeekStartByLocale } from \"weekstart\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\nimport { FirstWeekday } from \"../../data/translation\";\n\nexport const weekdays = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\",\n] as const;\n\ntype WeekdayIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport const firstWeekdayIndex = (locale: FrontendLocaleData): WeekdayIndex => {\n  if (locale.first_weekday === FirstWeekday.language) {\n    // @ts-ignore\n    if (\"weekInfo\" in Intl.Locale.prototype) {\n      // @ts-ignore\n      return new Intl.Locale(locale.language).weekInfo.firstDay % 7;\n    }\n    return (getWeekStartByLocale(locale.language) % 7) as WeekdayIndex;\n  }\n  return weekdays.includes(locale.first_weekday)\n    ? (weekdays.indexOf(locale.first_weekday) as WeekdayIndex)\n    : 1;\n};\n\nexport const firstWeekday = (locale: FrontendLocaleData) => {\n  const index = firstWeekdayIndex(locale);\n  return weekdays[index];\n};\n","import type { HassConfig } from \"home-assistant-js-websocket\";\nimport memoizeOne from \"memoize-one\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\nimport { resolveTimeZone } from \"./resolve-time-zone\";\nimport { useAmPm } from \"./use_am_pm\";\n\n// 9:15 PM || 21:15\nexport const formatTime = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatTimeMem(locale, config.time_zone).format(dateObj);\n\nconst formatTimeMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      hour: \"numeric\",\n      minute: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// 9:15:24 PM || 21:15:24\nexport const formatTimeWithSeconds = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatTimeWithSecondsMem(locale, config.time_zone).format(dateObj);\n\nconst formatTimeWithSecondsMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// Tuesday 7:00 PM || Tuesday 19:00\nexport const formatTimeWeekday = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatTimeWeekdayMem(locale, config.time_zone).format(dateObj);\n\nconst formatTimeWeekdayMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    new Intl.DateTimeFormat(locale.language, {\n      weekday: \"long\",\n      hour: useAmPm(locale) ? \"numeric\" : \"2-digit\",\n      minute: \"2-digit\",\n      hourCycle: useAmPm(locale) ? \"h12\" : \"h23\",\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n\n// 21:15\nexport const formatTime24h = (\n  dateObj: Date,\n  locale: FrontendLocaleData,\n  config: HassConfig\n) => formatTime24hMem(locale, config.time_zone).format(dateObj);\n\nconst formatTime24hMem = memoizeOne(\n  (locale: FrontendLocaleData, serverTimeZone: string) =>\n    // en-GB to fix Chrome 24:59 to 0:59 https://stackoverflow.com/a/60898146\n    new Intl.DateTimeFormat(\"en-GB\", {\n      hour: \"numeric\",\n      minute: \"2-digit\",\n      hour12: false,\n      timeZone: resolveTimeZone(locale.time_zone, serverTimeZone),\n    })\n);\n","import { TimeZone } from \"../../data/translation\";\n\nconst RESOLVED_TIME_ZONE = Intl.DateTimeFormat?.().resolvedOptions?.().timeZone;\n\n// Browser time zone can be determined from Intl, with fallback to UTC for polyfill or no support.\nexport const LOCAL_TIME_ZONE = RESOLVED_TIME_ZONE ?? \"UTC\";\n\n// Pick time zone based on user profile option.  Core zone is used when local cannot be determined.\nexport const resolveTimeZone = (option: TimeZone, serverTimeZone: string) =>\n  option === TimeZone.local && RESOLVED_TIME_ZONE\n    ? LOCAL_TIME_ZONE\n    : serverTimeZone;\n","import memoizeOne from \"memoize-one\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\nimport { TimeFormat } from \"../../data/translation\";\n\nexport const useAmPm = memoizeOne((locale: FrontendLocaleData): boolean => {\n  if (\n    locale.time_format === TimeFormat.language ||\n    locale.time_format === TimeFormat.system\n  ) {\n    const testLanguage =\n      locale.time_format === TimeFormat.language ? locale.language : undefined;\n    const test = new Date(\"January 1, 2023 22:00:00\").toLocaleString(\n      testLanguage\n    );\n    return test.includes(\"10\");\n  }\n\n  return locale.time_format === TimeFormat.am_pm;\n});\n","import type { CalendarOptions } from \"@fullcalendar/core\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport allLocales from \"@fullcalendar/core/locales-all\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport type { Day } from \"date-fns\";\nimport { addDays, isSameDay, isSameWeek, nextDay } from \"date-fns\";\nimport type { CSSResultGroup, PropertyValues } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { firstWeekdayIndex } from \"../../../../common/datetime/first_weekday\";\nimport { formatTime24h } from \"../../../../common/datetime/format_time\";\nimport { useAmPm } from \"../../../../common/datetime/use_am_pm\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-textfield\";\nimport type { Schedule, ScheduleDay } from \"../../../../data/schedule\";\nimport { weekdays } from \"../../../../data/schedule\";\nimport { TimeZone } from \"../../../../data/translation\";\nimport { showScheduleBlockInfoDialog } from \"./show-dialog-schedule-block-info\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\nconst defaultFullCalendarConfig: CalendarOptions = {\n  plugins: [timeGridPlugin, interactionPlugin],\n  headerToolbar: false,\n  initialView: \"timeGridWeek\",\n  editable: true,\n  selectable: true,\n  selectMirror: true,\n  selectOverlap: false,\n  eventOverlap: false,\n  allDaySlot: false,\n  height: \"parent\",\n  locales: allLocales,\n  firstDay: 1,\n  dayHeaderFormat: { weekday: \"short\", month: undefined, day: undefined },\n};\n\n@customElement(\"ha-schedule-form\")\nclass HaScheduleForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _monday!: ScheduleDay[];\n\n  @state() private _tuesday!: ScheduleDay[];\n\n  @state() private _wednesday!: ScheduleDay[];\n\n  @state() private _thursday!: ScheduleDay[];\n\n  @state() private _friday!: ScheduleDay[];\n\n  @state() private _saturday!: ScheduleDay[];\n\n  @state() private _sunday!: ScheduleDay[];\n\n  @state() private calendar?: Calendar;\n\n  private _item?: Schedule;\n\n  set item(item: Schedule) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._monday = item.monday || [];\n      this._tuesday = item.tuesday || [];\n      this._wednesday = item.wednesday || [];\n      this._thursday = item.thursday || [];\n      this._friday = item.friday || [];\n      this._saturday = item.saturday || [];\n      this._sunday = item.sunday || [];\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._monday = [];\n      this._tuesday = [];\n      this._wednesday = [];\n      this._thursday = [];\n      this._friday = [];\n      this._saturday = [];\n      this._sunday = [];\n    }\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.calendar?.destroy();\n    this.calendar = undefined;\n    this.renderRoot.querySelector(\"style[data-fullcalendar]\")?.remove();\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hasUpdated && !this.calendar) {\n      this._setupCalendar();\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <div id=\"calendar\"></div>\n      </div>\n    `;\n  }\n\n  public willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n    if (!this.calendar) {\n      return;\n    }\n\n    if (\n      changedProps.has(\"_sunday\") ||\n      changedProps.has(\"_monday\") ||\n      changedProps.has(\"_tuesday\") ||\n      changedProps.has(\"_wednesday\") ||\n      changedProps.has(\"_thursday\") ||\n      changedProps.has(\"_friday\") ||\n      changedProps.has(\"_saturday\") ||\n      changedProps.has(\"calendar\")\n    ) {\n      this.calendar.removeAllEventSources();\n      this.calendar.addEventSource(this._events);\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant;\n\n    if (oldHass && oldHass.language !== this.hass.language) {\n      this.calendar.setOption(\"locale\", this.hass.language);\n    }\n  }\n\n  protected firstUpdated(): void {\n    this._setupCalendar();\n  }\n\n  private _setupCalendar(): void {\n    const config: CalendarOptions = {\n      ...defaultFullCalendarConfig,\n      locale: this.hass.language,\n      firstDay: firstWeekdayIndex(this.hass.locale),\n      slotLabelFormat: {\n        hour: \"numeric\",\n        minute: undefined,\n        hour12: useAmPm(this.hass.locale),\n        meridiem: useAmPm(this.hass.locale) ? \"narrow\" : false,\n      },\n      eventTimeFormat: {\n        hour: useAmPm(this.hass.locale) ? \"numeric\" : \"2-digit\",\n        minute: useAmPm(this.hass.locale) ? \"numeric\" : \"2-digit\",\n        hour12: useAmPm(this.hass.locale),\n        meridiem: useAmPm(this.hass.locale) ? \"narrow\" : false,\n      },\n    };\n\n    config.eventClick = (info) => this._handleEventClick(info);\n    config.select = (info) => this._handleSelect(info);\n    config.eventResize = (info) => this._handleEventResize(info);\n    config.eventDrop = (info) => this._handleEventDrop(info);\n\n    this.calendar = new Calendar(\n      this.shadowRoot!.getElementById(\"calendar\")!,\n      config\n    );\n\n    this.calendar!.render();\n  }\n\n  private get _events() {\n    const events: any[] = [];\n\n    for (const [i, day] of weekdays.entries()) {\n      if (!this[`_${day}`].length) {\n        continue;\n      }\n\n      this[`_${day}`].forEach((item: ScheduleDay, index: number) => {\n        let date = nextDay(new Date(), i as Day);\n        if (\n          !isSameWeek(date, new Date(), {\n            weekStartsOn: firstWeekdayIndex(this.hass.locale),\n          })\n        ) {\n          date = addDays(date, -7);\n        }\n        const start = new Date(date);\n        const start_tokens = item.from.split(\":\");\n        start.setHours(\n          parseInt(start_tokens[0]),\n          parseInt(start_tokens[1]),\n          0,\n          0\n        );\n\n        const end = new Date(date);\n        const end_tokens = item.to.split(\":\");\n        end.setHours(parseInt(end_tokens[0]), parseInt(end_tokens[1]), 0, 0);\n\n        events.push({\n          id: `${day}-${index}`,\n          start: start.toISOString(),\n          end: end.toISOString(),\n        });\n      });\n    }\n\n    return events;\n  }\n\n  private _handleSelect(info: { start: Date; end: Date }) {\n    const { start, end } = info;\n\n    const day = weekdays[start.getDay()];\n    const value = [...this[`_${day}`]];\n    const newValue = { ...this._item };\n\n    // Schedule is timezone unaware, we need to format it in local time\n    const endFormatted = formatTime24h(\n      end,\n      { ...this.hass.locale, time_zone: TimeZone.local },\n      this.hass.config\n    );\n    value.push({\n      from: formatTime24h(\n        start,\n        { ...this.hass.locale, time_zone: TimeZone.local },\n        this.hass.config\n      ),\n      to:\n        !isSameDay(start, end) || endFormatted === \"0:00\"\n          ? \"24:00\"\n          : endFormatted,\n    });\n\n    newValue[day] = value;\n\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n\n    if (!isSameDay(start, end)) {\n      this.calendar!.unselect();\n    }\n  }\n\n  private _handleEventResize(info: any) {\n    const { id, start, end } = info.event;\n\n    const [day, index] = id.split(\"-\");\n    const value = this[`_${day}`][parseInt(index)];\n    const newValue = { ...this._item };\n\n    const endFormatted = formatTime24h(end, this.hass.locale, this.hass.config);\n    newValue[day][index] = {\n      ...newValue[day][index],\n      from: value.from,\n      to:\n        !isSameDay(start, end) || endFormatted === \"0:00\"\n          ? \"24:00\"\n          : endFormatted,\n    };\n\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n\n    if (!isSameDay(start, end)) {\n      this.requestUpdate(`_${day}`);\n      info.revert();\n    }\n  }\n\n  private _handleEventDrop(info: any) {\n    const { id, start, end } = info.event;\n\n    const [day, index] = id.split(\"-\");\n    const newDay = weekdays[start.getDay()];\n    const newValue = { ...this._item };\n\n    const endFormatted = formatTime24h(end, this.hass.locale, this.hass.config);\n    const event = {\n      ...newValue[day][index],\n      from: formatTime24h(start, this.hass.locale, this.hass.config),\n      to:\n        !isSameDay(start, end) || endFormatted === \"0:00\"\n          ? \"24:00\"\n          : endFormatted,\n    };\n\n    if (newDay === day) {\n      newValue[day][index] = event;\n    } else {\n      newValue[day].splice(index, 1);\n      const value = [...this[`_${newDay}`]];\n      value.push(event);\n      newValue[newDay] = value;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n\n    if (!isSameDay(start, end)) {\n      this.requestUpdate(`_${day}`);\n      info.revert();\n    }\n  }\n\n  private async _handleEventClick(info: any) {\n    const [day, index] = info.event.id.split(\"-\");\n    const item = [...this[`_${day}`]][index];\n    showScheduleBlockInfoDialog(this, {\n      block: item,\n      updateBlock: (newBlock) => this._updateBlock(day, index, newBlock),\n      deleteBlock: () => this._deleteBlock(day, index),\n    });\n  }\n\n  private _updateBlock(day, index, newBlock) {\n    const [fromH, fromM, _fromS] = newBlock.from.split(\":\");\n    newBlock.from = `${fromH}:${fromM}`;\n    const [toH, toM, _toS] = newBlock.to.split(\":\");\n    newBlock.to = `${toH}:${toM}`;\n    if (Number(toH) === 0 && Number(toM) === 0) {\n      newBlock.to = \"24:00\";\n    }\n    const newValue = { ...this._item };\n    newValue[day] = [...this._item![day]];\n    newValue[day][index] = newBlock;\n\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  private _deleteBlock(day, index) {\n    const value = [...this[`_${day}`]];\n    const newValue = { ...this._item };\n    value.splice(parseInt(index), 1);\n    newValue[day] = value;\n\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n\n        #calendar {\n          margin: 8px 0;\n          height: 450px;\n          width: 100%;\n          -webkit-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n          --fc-border-color: var(--divider-color);\n          --fc-event-border-color: var(--divider-color);\n        }\n\n        .fc-v-event .fc-event-time {\n          white-space: inherit;\n        }\n        .fc-theme-standard .fc-scrollgrid {\n          border: 1px solid var(--divider-color);\n          border-radius: var(--mdc-shape-small, 4px);\n        }\n\n        .fc-scrollgrid-section-header td {\n          border: none;\n        }\n        :host([narrow]) .fc-scrollgrid-sync-table {\n          overflow: hidden;\n        }\n        table.fc-scrollgrid-sync-table\n          tbody\n          tr:first-child\n          .fc-daygrid-day-top {\n          padding-top: 0;\n        }\n        .fc-scroller::-webkit-scrollbar {\n          width: 0.4rem;\n          height: 0.4rem;\n        }\n        .fc-scroller::-webkit-scrollbar-thumb {\n          -webkit-border-radius: 4px;\n          border-radius: 4px;\n          background: var(--scrollbar-thumb-color);\n        }\n        .fc-scroller {\n          overflow-y: auto;\n          scrollbar-color: var(--scrollbar-thumb-color) transparent;\n          scrollbar-width: thin;\n        }\n\n        .fc-timegrid-event-short .fc-event-time:after {\n          content: \"\"; /* prevent trailing dash in half hour events since we do not have event titles */\n        }\n\n        a {\n          color: inherit !important;\n        }\n\n        th.fc-col-header-cell.fc-day {\n          background-color: var(--table-header-background-color);\n          color: var(--primary-text-color);\n          font-size: 11px;\n          font-weight: bold;\n          text-transform: uppercase;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-schedule-form\": HaScheduleForm;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\n\nexport interface ScheduleBlockInfo {\n  from: string;\n  to: string;\n  data?: Record<string, any>;\n}\n\nexport interface ScheduleBlockInfoDialogParams {\n  block: ScheduleBlockInfo;\n  updateBlock?: (update: ScheduleBlockInfo) => void;\n  deleteBlock?: () => void;\n}\n\nexport const loadScheduleBlockInfoDialog = () =>\n  import(\"./dialog-schedule-block-info\");\n\nexport const showScheduleBlockInfoDialog = (\n  element: HTMLElement,\n  params: ScheduleBlockInfoDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-schedule-block-info\",\n    dialogImport: loadScheduleBlockInfoDialog,\n    dialogParams: params,\n  });\n};\n"],"names":["weekdays","firstWeekdayIndex","locale","first_weekday","FirstWeekday","Intl","Locale","prototype","language","weekInfo","firstDay","getWeekStartByLocale","includes","indexOf","formatTime","dateObj","config","formatTimeMem","time_zone","format","memoizeOne","serverTimeZone","DateTimeFormat","hour","minute","hourCycle","useAmPm","timeZone","resolveTimeZone","formatTimeWithSeconds","formatTimeWithSecondsMem","second","formatTimeWeekday","formatTimeWeekdayMem","weekday","formatTime24h","formatTime24hMem","hour12","RESOLVED_TIME_ZONE","resolvedOptions","LOCAL_TIME_ZONE","option","TimeZone","time_format","TimeFormat","testLanguage","undefined","Date","toLocaleString","defaultFullCalendarConfig","plugins","timeGridPlugin","interactionPlugin","headerToolbar","initialView","editable","selectable","selectMirror","selectOverlap","eventOverlap","allDaySlot","height","locales","allLocales","dayHeaderFormat","month","day","_decorate","customElement","_initialize","_LitElement","HaScheduleForm","constructor","args","F","d","kind","decorators","property","attribute","key","value","type","Boolean","state","item","this","_item","_name","name","_icon","icon","_monday","monday","_tuesday","tuesday","_wednesday","wednesday","_thursday","thursday","_friday","friday","_saturday","saturday","_sunday","sunday","_superPropGet","calendar","destroy","renderRoot","querySelector","remove","hasUpdated","_setupCalendar","updateComplete","then","shadowRoot","focus","hass","html","_valueChanged","localize","nothing","changedProps","has","removeAllEventSources","addEventSource","_events","oldHass","get","setOption","slotLabelFormat","meridiem","eventTimeFormat","eventClick","info","_handleEventClick","select","_handleSelect","eventResize","_handleEventResize","eventDrop","_handleEventDrop","Calendar","getElementById","render","events","i","length","forEach","index","date","nextDay","isSameWeek","weekStartsOn","addDays","start","start_tokens","from","split","setHours","parseInt","end","end_tokens","to","push","id","toISOString","getDay","newValue","endFormatted","isSameDay","fireEvent","unselect","event","requestUpdate","revert","newDay","splice","showScheduleBlockInfoDialog","block","updateBlock","newBlock","_updateBlock","deleteBlock","_deleteBlock","fromH","fromM","_fromS","toH","toM","_toS","Number","ev","new","stopPropagation","configValue","target","detail","static","haStyle","css","LitElement","loadScheduleBlockInfoDialog","element","params","dialogTag","dialogImport","dialogParams"],"mappings":"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"}