{"version":3,"file":"7232.d72c8d10ae181a8e.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/util/copy-clipboard.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-code-editor.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-yaml-editor.ts"],"sourcesContent":["export const copyToClipboard = async (str, rootEl?: HTMLElement) => {\n  if (navigator.clipboard) {\n    try {\n      await navigator.clipboard.writeText(str);\n      return;\n    } catch {\n      // just continue with the fallback coding below\n    }\n  }\n\n  const root = rootEl ?? document.body;\n\n  const el = document.createElement(\"textarea\");\n  el.value = str;\n  root.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  root.removeChild(el);\n};\n","import type {\n  Completion,\n  CompletionContext,\n  CompletionResult,\n  CompletionSource,\n} from \"@codemirror/autocomplete\";\nimport type { Extension, TransactionSpec } from \"@codemirror/state\";\nimport type { EditorView, KeyBinding, ViewUpdate } from \"@codemirror/view\";\nimport type { HassEntities } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { css, ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\nconst saveKeyBinding: KeyBinding = {\n  key: \"Mod-s\",\n  run: (view: EditorView) => {\n    fireEvent(view.dom, \"editor-save\");\n    return true;\n  },\n};\n\nconst renderIcon = (completion: Completion) => {\n  const icon = document.createElement(\"ha-icon\");\n  icon.icon = completion.label;\n  return icon;\n};\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends ReactiveElement {\n  public codemirror?: EditorView;\n\n  @property() public mode = \"yaml\";\n\n  public hass?: HomeAssistant;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ attribute: \"read-only\", type: Boolean }) public readOnly = false;\n\n  @property({ type: Boolean }) public linewrap = false;\n\n  @property({ type: Boolean, attribute: \"autocomplete-entities\" })\n  public autocompleteEntities = false;\n\n  @property({ type: Boolean, attribute: \"autocomplete-icons\" })\n  public autocompleteIcons = false;\n\n  @property({ type: Boolean }) public error = false;\n\n  @state() private _value = \"\";\n\n  // eslint-disable-next-line @typescript-eslint/consistent-type-imports\n  private _loadedCodeMirror?: typeof import(\"../resources/codemirror\");\n\n  private _iconList?: Completion[];\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.state.doc.toString() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    if (!this.codemirror || !this._loadedCodeMirror) {\n      return false;\n    }\n    const className = this._loadedCodeMirror.highlightingFor(\n      this.codemirror.state,\n      [this._loadedCodeMirror.tags.comment]\n    );\n    return !!this.renderRoot.querySelector(`span.${className}`);\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    // Force update on reconnection so editor is recreated\n    if (this.hasUpdated) {\n      this.requestUpdate();\n    }\n    this.addEventListener(\"keydown\", stopPropagation);\n    // This is unreachable as editor will not exist yet,\n    // but focus should not behave like this for good a11y.\n    // (@steverep to fix in autofocus PR)\n    if (!this.codemirror) {\n      return;\n    }\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener(\"keydown\", stopPropagation);\n    this.updateComplete.then(() => {\n      this.codemirror!.destroy();\n      delete this.codemirror;\n    });\n  }\n\n  // Ensure CodeMirror module is loaded before any update\n  protected override async scheduleUpdate() {\n    this._loadedCodeMirror ??= await import(\"../resources/codemirror\");\n    super.scheduleUpdate();\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n    if (!this.codemirror) {\n      this._createCodeMirror();\n      return;\n    }\n    const transactions: TransactionSpec[] = [];\n    if (changedProps.has(\"mode\")) {\n      transactions.push({\n        effects: [\n          this._loadedCodeMirror!.langCompartment!.reconfigure(this._mode),\n          this._loadedCodeMirror!.foldingCompartment.reconfigure(\n            this._getFoldingExtensions()\n          ),\n        ],\n      });\n    }\n    if (changedProps.has(\"readOnly\")) {\n      transactions.push({\n        effects: this._loadedCodeMirror!.readonlyCompartment!.reconfigure(\n          this._loadedCodeMirror!.EditorView!.editable.of(!this.readOnly)\n        ),\n      });\n    }\n    if (changedProps.has(\"linewrap\")) {\n      transactions.push({\n        effects: this._loadedCodeMirror!.linewrapCompartment!.reconfigure(\n          this.linewrap ? this._loadedCodeMirror!.EditorView.lineWrapping : []\n        ),\n      });\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      transactions.push({\n        changes: {\n          from: 0,\n          to: this.codemirror.state.doc.length,\n          insert: this._value,\n        },\n      });\n    }\n    if (transactions.length > 0) {\n      this.codemirror.dispatch(...transactions);\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  private get _mode() {\n    return this._loadedCodeMirror!.langs[this.mode];\n  }\n\n  private _createCodeMirror() {\n    if (!this._loadedCodeMirror) {\n      throw new Error(\"Cannot create editor before CodeMirror is loaded\");\n    }\n    const extensions: Extension[] = [\n      this._loadedCodeMirror.lineNumbers(),\n      this._loadedCodeMirror.history(),\n      this._loadedCodeMirror.drawSelection(),\n      this._loadedCodeMirror.EditorState.allowMultipleSelections.of(true),\n      this._loadedCodeMirror.rectangularSelection(),\n      this._loadedCodeMirror.crosshairCursor(),\n      this._loadedCodeMirror.highlightSelectionMatches(),\n      this._loadedCodeMirror.highlightActiveLine(),\n      this._loadedCodeMirror.indentationMarkers({\n        thickness: 0,\n        activeThickness: 1,\n        colors: {\n          activeLight: \"var(--secondary-text-color)\",\n          activeDark: \"var(--secondary-text-color)\",\n        },\n      }),\n      this._loadedCodeMirror.keymap.of([\n        ...this._loadedCodeMirror.defaultKeymap,\n        ...this._loadedCodeMirror.searchKeymap,\n        ...this._loadedCodeMirror.historyKeymap,\n        ...this._loadedCodeMirror.tabKeyBindings,\n        saveKeyBinding,\n      ]),\n      this._loadedCodeMirror.langCompartment.of(this._mode),\n      this._loadedCodeMirror.haTheme,\n      this._loadedCodeMirror.haSyntaxHighlighting,\n      this._loadedCodeMirror.readonlyCompartment.of(\n        this._loadedCodeMirror.EditorView.editable.of(!this.readOnly)\n      ),\n      this._loadedCodeMirror.linewrapCompartment.of(\n        this.linewrap ? this._loadedCodeMirror.EditorView.lineWrapping : []\n      ),\n      this._loadedCodeMirror.EditorView.updateListener.of(this._onUpdate),\n      this._loadedCodeMirror.foldingCompartment.of(\n        this._getFoldingExtensions()\n      ),\n    ];\n\n    if (!this.readOnly) {\n      const completionSources: CompletionSource[] = [];\n      if (this.autocompleteEntities && this.hass) {\n        completionSources.push(this._entityCompletions.bind(this));\n      }\n      if (this.autocompleteIcons) {\n        completionSources.push(this._mdiCompletions.bind(this));\n      }\n      if (completionSources.length > 0) {\n        extensions.push(\n          this._loadedCodeMirror.autocompletion({\n            override: completionSources,\n            maxRenderedOptions: 10,\n          })\n        );\n      }\n    }\n\n    this.codemirror = new this._loadedCodeMirror.EditorView({\n      state: this._loadedCodeMirror.EditorState.create({\n        doc: this._value,\n        extensions,\n      }),\n      parent: this.renderRoot,\n    });\n  }\n\n  private _getStates = memoizeOne((states: HassEntities): Completion[] => {\n    if (!states) {\n      return [];\n    }\n    const options = Object.keys(states).map((key) => ({\n      type: \"variable\",\n      label: key,\n      detail: states[key].attributes.friendly_name,\n      info: `State: ${states[key].state}`,\n    }));\n\n    return options;\n  });\n\n  private _entityCompletions(\n    context: CompletionContext\n  ): CompletionResult | null | Promise<CompletionResult | null> {\n    const entityWord = context.matchBefore(/[a-z_]{3,}\\.\\w*/);\n\n    if (\n      !entityWord ||\n      (entityWord.from === entityWord.to && !context.explicit)\n    ) {\n      return null;\n    }\n\n    const states = this._getStates(this.hass!.states);\n\n    if (!states || !states.length) {\n      return null;\n    }\n\n    return {\n      from: Number(entityWord.from),\n      options: states,\n      validFor: /^[a-z_]{3,}\\.\\w*$/,\n    };\n  }\n\n  private _getIconItems = async (): Promise<Completion[]> => {\n    if (!this._iconList) {\n      let iconList: {\n        name: string;\n        keywords: string[];\n      }[];\n      if (__SUPERVISOR__) {\n        iconList = [];\n      } else {\n        iconList = (await import(\"../../build/mdi/iconList.json\")).default;\n      }\n\n      this._iconList = iconList.map((icon) => ({\n        type: \"variable\",\n        label: `mdi:${icon.name}`,\n        detail: icon.keywords.join(\", \"),\n        info: renderIcon,\n      }));\n    }\n\n    return this._iconList;\n  };\n\n  private async _mdiCompletions(\n    context: CompletionContext\n  ): Promise<CompletionResult | null> {\n    const match = context.matchBefore(/mdi:\\S*/);\n\n    if (!match || (match.from === match.to && !context.explicit)) {\n      return null;\n    }\n\n    const iconItems = await this._getIconItems();\n\n    return {\n      from: Number(match.from),\n      options: iconItems,\n      validFor: /^mdi:\\S*$/,\n    };\n  }\n\n  private _onUpdate = (update: ViewUpdate): void => {\n    if (!update.docChanged) {\n      return;\n    }\n    this._value = update.state.doc.toString();\n    fireEvent(this, \"value-changed\", { value: this._value });\n  };\n\n  private _getFoldingExtensions = (): Extension => {\n    if (this.mode === \"yaml\") {\n      return [\n        this._loadedCodeMirror!.foldGutter(),\n        this._loadedCodeMirror!.foldingOnIndent,\n      ];\n    }\n\n    return [];\n  };\n\n  static styles = css`\n    :host(.error-state) .cm-gutters {\n      border-color: var(--error-state-color, red);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n","import type { Schema } from \"js-yaml\";\nimport { DEFAULT_SCHEMA, dump, load } from \"js-yaml\";\nimport type { CSSResultGroup, PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../types\";\nimport { haStyle } from \"../resources/styles\";\nimport \"./ha-code-editor\";\nimport { showToast } from \"../util/toast\";\nimport { copyToClipboard } from \"../common/util/copy-clipboard\";\nimport type { HaCodeEditor } from \"./ha-code-editor\";\nimport \"./ha-button\";\n\nconst isEmpty = (obj: Record<string, unknown>): boolean => {\n  if (typeof obj !== \"object\" || obj === null) {\n    return false;\n  }\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n@customElement(\"ha-yaml-editor\")\nexport class HaYamlEditor extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: any;\n\n  @property({ attribute: false }) public yamlSchema: Schema = DEFAULT_SCHEMA;\n\n  @property({ attribute: false }) public defaultValue?: any;\n\n  @property({ attribute: \"is-valid\", type: Boolean }) public isValid = true;\n\n  @property() public label?: string;\n\n  @property({ attribute: \"auto-update\", type: Boolean }) public autoUpdate =\n    false;\n\n  @property({ attribute: \"read-only\", type: Boolean }) public readOnly = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ attribute: \"copy-clipboard\", type: Boolean })\n  public copyClipboard = false;\n\n  @property({ attribute: \"has-extra-actions\", type: Boolean })\n  public hasExtraActions = false;\n\n  @state() private _yaml = \"\";\n\n  @query(\"ha-code-editor\") _codeEditor?: HaCodeEditor;\n\n  public setValue(value): void {\n    try {\n      this._yaml = !isEmpty(value)\n        ? dump(value, {\n            schema: this.yamlSchema,\n            quotingType: '\"',\n            noRefs: true,\n          })\n        : \"\";\n    } catch (err: any) {\n      // eslint-disable-next-line no-console\n      console.error(err, value);\n      alert(`There was an error converting to YAML: ${err}`);\n    }\n  }\n\n  protected firstUpdated(): void {\n    if (this.defaultValue !== undefined) {\n      this.setValue(this.defaultValue);\n    }\n  }\n\n  protected willUpdate(changedProperties: PropertyValues<this>): void {\n    super.willUpdate(changedProperties);\n    if (this.autoUpdate && changedProperties.has(\"value\")) {\n      this.setValue(this.value);\n    }\n  }\n\n  public focus(): void {\n    if (this._codeEditor?.codemirror) {\n      this._codeEditor?.codemirror.focus();\n    }\n  }\n\n  protected render() {\n    if (this._yaml === undefined) {\n      return nothing;\n    }\n    return html`\n      ${this.label\n        ? html`<p>${this.label}${this.required ? \" *\" : \"\"}</p>`\n        : nothing}\n      <ha-code-editor\n        .hass=${this.hass}\n        .value=${this._yaml}\n        .readOnly=${this.readOnly}\n        mode=\"yaml\"\n        autocomplete-entities\n        autocomplete-icons\n        .error=${this.isValid === false}\n        @value-changed=${this._onChange}\n        dir=\"ltr\"\n      ></ha-code-editor>\n      ${this.copyClipboard || this.hasExtraActions\n        ? html`\n            <div class=\"card-actions\">\n              ${this.copyClipboard\n                ? html`\n                    <ha-button @click=${this._copyYaml}>\n                      ${this.hass.localize(\n                        \"ui.components.yaml-editor.copy_to_clipboard\"\n                      )}\n                    </ha-button>\n                  `\n                : nothing}\n              <slot name=\"extra-actions\"></slot>\n            </div>\n          `\n        : nothing}\n    `;\n  }\n\n  private _onChange(ev: CustomEvent): void {\n    ev.stopPropagation();\n    this._yaml = ev.detail.value;\n    let parsed;\n    let isValid = true;\n    let errorMsg;\n\n    if (this._yaml) {\n      try {\n        parsed = load(this._yaml, { schema: this.yamlSchema });\n      } catch (err: any) {\n        // Invalid YAML\n        isValid = false;\n        errorMsg = `${this.hass.localize(\"ui.components.yaml-editor.error\", { reason: err.reason })}${err.mark ? ` (${this.hass.localize(\"ui.components.yaml-editor.error_location\", { line: err.mark.line + 1, column: err.mark.column + 1 })})` : \"\"}`;\n      }\n    } else {\n      parsed = {};\n    }\n\n    this.value = parsed;\n    this.isValid = isValid;\n\n    fireEvent(this, \"value-changed\", {\n      value: parsed,\n      isValid,\n      errorMsg,\n    } as any);\n  }\n\n  get yaml() {\n    return this._yaml;\n  }\n\n  private async _copyYaml(): Promise<void> {\n    if (this.yaml) {\n      await copyToClipboard(this.yaml);\n      showToast(this, {\n        message: this.hass.localize(\"ui.common.copied_clipboard\"),\n      });\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .card-actions {\n          border-radius: var(\n            --actions-border-radius,\n            0px 0px var(--ha-card-border-radius, 12px)\n              var(--ha-card-border-radius, 12px)\n          );\n          border: 1px solid var(--divider-color);\n          padding: 5px 16px;\n        }\n        ha-code-editor {\n          flex-grow: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-yaml-editor\": HaYamlEditor;\n  }\n}\n"],"names":["copyToClipboard","async","str","rootEl","navigator","clipboard","writeText","_unused","root","document","body","el","createElement","value","appendChild","select","execCommand","removeChild","saveKeyBinding","key","run","view","fireEvent","dom","renderIcon","completion","icon","label","_decorate","customElement","_initialize","_ReactiveElement","HaCodeEditor","constructor","args","F","d","kind","decorators","property","type","Boolean","attribute","state","this","_value","codemirror","doc","toString","_loadedCodeMirror","className","highlightingFor","tags","comment","renderRoot","querySelector","_superPropGet","hasUpdated","requestUpdate","addEventListener","stopPropagation","autofocus","focus","removeEventListener","updateComplete","then","destroy","_this$_loadedCodeMirr","changedProps","_createCodeMirror","transactions","has","push","effects","langCompartment","reconfigure","_mode","foldingCompartment","_getFoldingExtensions","readonlyCompartment","EditorView","editable","of","readOnly","linewrapCompartment","linewrap","lineWrapping","changes","from","to","length","insert","dispatch","classList","toggle","error","langs","mode","Error","extensions","lineNumbers","history","drawSelection","EditorState","allowMultipleSelections","rectangularSelection","crosshairCursor","highlightSelectionMatches","highlightActiveLine","indentationMarkers","thickness","activeThickness","colors","activeLight","activeDark","keymap","defaultKeymap","searchKeymap","historyKeymap","tabKeyBindings","haTheme","haSyntaxHighlighting","updateListener","_onUpdate","completionSources","autocompleteEntities","hass","_entityCompletions","bind","autocompleteIcons","_mdiCompletions","autocompletion","override","maxRenderedOptions","create","parent","memoizeOne","states","Object","keys","map","detail","attributes","friendly_name","info","context","entityWord","matchBefore","explicit","_getStates","Number","options","validFor","_iconList","iconList","default","name","keywords","join","match","iconItems","_getIconItems","update","docChanged","foldGutter","foldingOnIndent","static","css","_t","_","ReactiveElement","_LitElement","HaYamlEditor","DEFAULT_SCHEMA","query","_yaml","obj","prototype","hasOwnProperty","call","isEmpty","dump","schema","yamlSchema","quotingType","noRefs","err","console","alert","undefined","defaultValue","setValue","changedProperties","autoUpdate","_this$_codeEditor","_this$_codeEditor2","_codeEditor","nothing","html","_t2","required","isValid","_onChange","copyClipboard","hasExtraActions","_t3","_t4","_copyYaml","localize","ev","parsed","errorMsg","load","reason","mark","line","column","yaml","showToast","message","haStyle","_t5","LitElement"],"mappings":"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"}