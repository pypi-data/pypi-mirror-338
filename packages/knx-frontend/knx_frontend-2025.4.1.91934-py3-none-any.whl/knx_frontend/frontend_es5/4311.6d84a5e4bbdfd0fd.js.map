{"version":3,"file":"4311.6d84a5e4bbdfd0fd.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/language/format_language.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-dialog-header.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-language-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tts-voice-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/cloud.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/tts.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/brands-url.ts"],"sourcesContent":["import memoizeOne from \"memoize-one\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\n\nexport const formatLanguageCode = (\n  languageCode: string,\n  locale: FrontendLocaleData\n) => {\n  try {\n    return formatLanguageCodeMem(locale)?.of(languageCode) ?? languageCode;\n  } catch {\n    return languageCode;\n  }\n};\n\nconst formatLanguageCodeMem = memoizeOne(\n  (locale: FrontendLocaleData) =>\n    new Intl.DisplayNames(locale.language, {\n      type: \"language\",\n      fallback: \"code\",\n    })\n);\n","import { css, html, LitElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-dialog-header\")\nexport class HaDialogHeader extends LitElement {\n  protected render() {\n    return html`\n      <header class=\"header\">\n        <div class=\"header-bar\">\n          <section class=\"header-navigation-icon\">\n            <slot name=\"navigationIcon\"></slot>\n          </section>\n          <section class=\"header-content\">\n            <div class=\"header-title\">\n              <slot name=\"title\"></slot>\n            </div>\n            <div class=\"header-subtitle\">\n              <slot name=\"subtitle\"></slot>\n            </div>\n          </section>\n          <section class=\"header-action-items\">\n            <slot name=\"actionItems\"></slot>\n          </section>\n        </div>\n        <slot></slot>\n      </header>\n    `;\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        :host([show-border]) {\n          border-bottom: 1px solid\n            var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n        .header-bar {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-start;\n          padding: 4px;\n          box-sizing: border-box;\n        }\n        .header-content {\n          flex: 1;\n          padding: 10px 4px;\n          min-width: 0;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n        .header-title {\n          font-size: 22px;\n          line-height: 28px;\n          font-weight: 400;\n        }\n        .header-subtitle {\n          font-size: 14px;\n          line-height: 20px;\n          color: var(--secondary-text-color);\n        }\n        @media all and (min-width: 450px) and (min-height: 500px) {\n          .header-bar {\n            padding: 12px;\n          }\n        }\n        .header-navigation-icon {\n          flex: none;\n          min-width: 8px;\n          height: 100%;\n          display: flex;\n          flex-direction: row;\n        }\n        .header-action-items {\n          flex: none;\n          min-width: 8px;\n          height: 100%;\n          display: flex;\n          flex-direction: row;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog-header\": HaDialogHeader;\n  }\n}\n","import type { PropertyValues } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { formatLanguageCode } from \"../common/language/format_language\";\nimport { caseInsensitiveStringCompare } from \"../common/string/compare\";\nimport type { FrontendLocaleData } from \"../data/translation\";\nimport { translationMetadata } from \"../resources/translations-metadata\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nimport type { HaSelect } from \"./ha-select\";\n\nexport const getLanguageOptions = (\n  languages: string[],\n  nativeName: boolean,\n  noSort: boolean,\n  locale?: FrontendLocaleData\n) => {\n  let options: { label: string; value: string }[] = [];\n\n  if (nativeName) {\n    const translations = translationMetadata.translations;\n    options = languages.map((lang) => {\n      let label = translations[lang]?.nativeName;\n      if (!label) {\n        try {\n          // this will not work if Intl.DisplayNames is polyfilled, it will return in the language of the user\n          label = new Intl.DisplayNames(lang, {\n            type: \"language\",\n            fallback: \"code\",\n          }).of(lang)!;\n        } catch (_err) {\n          label = lang;\n        }\n      }\n      return {\n        value: lang,\n        label,\n      };\n    });\n  } else if (locale) {\n    options = languages.map((lang) => ({\n      value: lang,\n      label: formatLanguageCode(lang, locale),\n    }));\n  }\n\n  if (!noSort && locale) {\n    options.sort((a, b) =>\n      caseInsensitiveStringCompare(a.label, b.label, locale.language)\n    );\n  }\n  return options;\n};\n\n@customElement(\"ha-language-picker\")\nexport class HaLanguagePicker extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property({ type: Array }) public languages?: string[];\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ attribute: \"native-name\", type: Boolean })\n  public nativeName = false;\n\n  @property({ attribute: \"no-sort\", type: Boolean }) public noSort = false;\n\n  @property({ attribute: \"inline-arrow\", type: Boolean })\n  public inlineArrow = false;\n\n  @state() _defaultLanguages: string[] = [];\n\n  @query(\"ha-select\") private _select!: HaSelect;\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._computeDefaultLanguageOptions();\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n\n    const localeChanged =\n      changedProperties.has(\"hass\") &&\n      this.hass &&\n      changedProperties.get(\"hass\") &&\n      changedProperties.get(\"hass\").locale.language !==\n        this.hass.locale.language;\n    if (\n      changedProperties.has(\"languages\") ||\n      changedProperties.has(\"value\") ||\n      localeChanged\n    ) {\n      this._select.layoutOptions();\n      if (this._select.value !== this.value) {\n        fireEvent(this, \"value-changed\", { value: this._select.value });\n      }\n      if (!this.value) {\n        return;\n      }\n      const languageOptions = this._getLanguagesOptions(\n        this.languages ?? this._defaultLanguages,\n        this.nativeName,\n        this.noSort,\n        this.hass?.locale\n      );\n      const selectedItemIndex = languageOptions.findIndex(\n        (option) => option.value === this.value\n      );\n      if (selectedItemIndex === -1) {\n        this.value = undefined;\n      }\n      if (localeChanged) {\n        this._select.select(selectedItemIndex);\n      }\n    }\n  }\n\n  private _getLanguagesOptions = memoizeOne(getLanguageOptions);\n\n  private _computeDefaultLanguageOptions() {\n    this._defaultLanguages = Object.keys(translationMetadata.translations);\n  }\n\n  protected render() {\n    const languageOptions = this._getLanguagesOptions(\n      this.languages ?? this._defaultLanguages,\n      this.nativeName,\n      this.noSort,\n      this.hass?.locale\n    );\n\n    const value =\n      this.value ?? (this.required ? languageOptions[0]?.value : this.value);\n\n    return html`\n      <ha-select\n        .label=${this.label ??\n        (this.hass?.localize(\"ui.components.language-picker.language\") ||\n          \"Language\")}\n        .value=${value || \"\"}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n        .inlineArrow=${this.inlineArrow}\n      >\n        ${languageOptions.length === 0\n          ? html`<ha-list-item value=\"\"\n              >${this.hass?.localize(\n                \"ui.components.language-picker.no_languages\"\n              ) || \"No languages\"}</ha-list-item\n            >`\n          : languageOptions.map(\n              (option) => html`\n                <ha-list-item .value=${option.value}\n                  >${option.label}</ha-list-item\n                >\n              `\n            )}\n      </ha-select>\n    `;\n  }\n\n  static styles = css`\n    ha-select {\n      width: 100%;\n    }\n  `;\n\n  private _changed(ev): void {\n    const target = ev.target as HaSelect;\n    if (target.value === \"\" || target.value === this.value) {\n      return;\n    }\n    this.value = target.value;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-language-picker\": HaLanguagePicker;\n  }\n}\n","import type { PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { debounce } from \"../common/util/debounce\";\nimport type { TTSVoice } from \"../data/tts\";\nimport { listTTSVoices } from \"../data/tts\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nimport type { HaSelect } from \"./ha-select\";\n\nconst NONE = \"__NONE_OPTION__\";\n\n@customElement(\"ha-tts-voice-picker\")\nexport class HaTTSVoicePicker extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property({ attribute: false }) public engineId?: string;\n\n  @property() public language?: string;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() _voices?: TTSVoice[] | null;\n\n  @query(\"ha-select\") private _select?: HaSelect;\n\n  protected render() {\n    if (!this._voices) {\n      return nothing;\n    }\n    const value =\n      this.value ?? (this.required ? this._voices[0]?.voice_id : NONE);\n    return html`\n      <ha-select\n        .label=${this.label ||\n        this.hass!.localize(\"ui.components.tts-voice-picker.voice\")}\n        .value=${value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n      >\n        ${!this.required\n          ? html`<ha-list-item .value=${NONE}>\n              ${this.hass!.localize(\"ui.components.tts-voice-picker.none\")}\n            </ha-list-item>`\n          : nothing}\n        ${this._voices.map(\n          (voice) =>\n            html`<ha-list-item .value=${voice.voice_id}>\n              ${voice.name}\n            </ha-list-item>`\n        )}\n      </ha-select>\n    `;\n  }\n\n  protected willUpdate(changedProperties: PropertyValues<this>): void {\n    super.willUpdate(changedProperties);\n    if (!this.hasUpdated) {\n      this._updateVoices();\n    } else if (\n      changedProperties.has(\"language\") ||\n      changedProperties.has(\"engineId\")\n    ) {\n      this._debouncedUpdateVoices();\n    }\n  }\n\n  private _debouncedUpdateVoices = debounce(() => this._updateVoices(), 500);\n\n  private async _updateVoices() {\n    if (!this.engineId || !this.language) {\n      this._voices = undefined;\n      return;\n    }\n    this._voices = (\n      await listTTSVoices(this.hass, this.engineId, this.language)\n    ).voices;\n\n    if (!this.value) {\n      return;\n    }\n\n    if (\n      !this._voices ||\n      !this._voices.find((voice) => voice.voice_id === this.value)\n    ) {\n      this.value = undefined;\n      fireEvent(this, \"value-changed\", { value: this.value });\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues<this>) {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has(\"_voices\") &&\n      this._select?.value !== this.value\n    ) {\n      this._select?.layoutOptions();\n      fireEvent(this, \"value-changed\", { value: this._select?.value });\n    }\n  }\n\n  static styles = css`\n    ha-select {\n      width: 100%;\n    }\n  `;\n\n  private _changed(ev): void {\n    const target = ev.target as HaSelect;\n    if (\n      !this.hass ||\n      target.value === \"\" ||\n      target.value === this.value ||\n      (this.value === undefined && target.value === NONE)\n    ) {\n      return;\n    }\n    this.value = target.value === NONE ? undefined : target.value;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tts-voice-picker\": HaTTSVoicePicker;\n  }\n}\n","import type { EntityDomainFilter } from \"../common/entity/entity_domain_filter\";\nimport type { HomeAssistant } from \"../types\";\n\ntype StrictConnectionMode = \"disabled\" | \"guard_page\" | \"drop_connection\";\n\ninterface CloudStatusNotLoggedIn {\n  logged_in: false;\n  cloud: \"disconnected\" | \"connecting\" | \"connected\";\n  http_use_ssl: boolean;\n}\n\nexport interface CertificateInformation {\n  common_name: string;\n  expire_date: string;\n  fingerprint: string;\n  alternative_names: string[];\n}\n\nexport interface CloudPreferences {\n  google_enabled: boolean;\n  alexa_enabled: boolean;\n  remote_enabled: boolean;\n  remote_allow_remote_enable: boolean;\n  strict_connection: StrictConnectionMode;\n  google_secure_devices_pin: string | undefined;\n  cloudhooks: Record<string, CloudWebhook>;\n  alexa_report_state: boolean;\n  google_report_state: boolean;\n  tts_default_voice: [string, string];\n  cloud_ice_servers_enabled: boolean;\n}\n\nexport interface CloudStatusLoggedIn {\n  logged_in: true;\n  cloud: \"disconnected\" | \"connecting\" | \"connected\";\n  cloud_last_disconnect_reason: { clean: boolean; reason: string } | null;\n  email: string;\n  google_registered: boolean;\n  google_entities: EntityDomainFilter;\n  google_domains: string[];\n  alexa_registered: boolean;\n  alexa_entities: EntityDomainFilter;\n  prefs: CloudPreferences;\n  remote_domain: string | undefined;\n  remote_connected: boolean;\n  remote_certificate: undefined | CertificateInformation;\n  remote_certificate_status:\n    | null\n    | \"error\"\n    | \"generating\"\n    | \"loaded\"\n    | \"loading\"\n    | \"ready\";\n  http_use_ssl: boolean;\n  active_subscription: boolean;\n}\n\nexport type CloudStatus = CloudStatusNotLoggedIn | CloudStatusLoggedIn;\n\nexport interface SubscriptionInfo {\n  human_description: string;\n  provider: string;\n  plan_renewal_date?: number;\n}\n\nexport interface CloudWebhook {\n  webhook_id: string;\n  cloudhook_id: string;\n  cloudhook_url: string;\n  managed?: boolean;\n}\n\ninterface CloudLoginBase {\n  hass: HomeAssistant;\n  email: string;\n  check_connection?: boolean;\n}\n\nexport interface CloudLoginPassword extends CloudLoginBase {\n  password: string;\n}\n\nexport interface CloudLoginMFA extends CloudLoginBase {\n  code: string;\n}\n\nexport const cloudLogin = ({\n  hass,\n  ...rest\n}: CloudLoginPassword | CloudLoginMFA) =>\n  hass.callApi<{ success: boolean; cloud_pipeline?: string }>(\n    \"POST\",\n    \"cloud/login\",\n    rest\n  );\n\nexport const cloudLogout = (hass: HomeAssistant) =>\n  hass.callApi(\"POST\", \"cloud/logout\");\n\nexport const cloudForgotPassword = (hass: HomeAssistant, email: string) =>\n  hass.callApi(\"POST\", \"cloud/forgot_password\", {\n    email,\n  });\n\nexport const cloudRegister = (\n  hass: HomeAssistant,\n  email: string,\n  password: string\n) =>\n  hass.callApi(\"POST\", \"cloud/register\", {\n    email,\n    password,\n  });\n\nexport const cloudResendVerification = (hass: HomeAssistant, email: string) =>\n  hass.callApi(\"POST\", \"cloud/resend_confirm\", {\n    email,\n  });\n\nexport const fetchCloudStatus = (hass: HomeAssistant) =>\n  hass.callWS<CloudStatus>({ type: \"cloud/status\" });\n\nexport const createCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS<CloudWebhook>({\n    type: \"cloud/cloudhook/create\",\n    webhook_id: webhookId,\n  });\n\nexport const deleteCloudhook = (hass: HomeAssistant, webhookId: string) =>\n  hass.callWS({\n    type: \"cloud/cloudhook/delete\",\n    webhook_id: webhookId,\n  });\n\nexport const connectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/connect\",\n  });\n\nexport const disconnectCloudRemote = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remote/disconnect\",\n  });\n\nexport const fetchCloudSubscriptionInfo = (hass: HomeAssistant) =>\n  hass.callWS<SubscriptionInfo>({ type: \"cloud/subscription\" });\n\nexport const updateCloudPref = (\n  hass: HomeAssistant,\n  prefs: {\n    google_enabled?: CloudPreferences[\"google_enabled\"];\n    alexa_enabled?: CloudPreferences[\"alexa_enabled\"];\n    alexa_report_state?: CloudPreferences[\"alexa_report_state\"];\n    google_report_state?: CloudPreferences[\"google_report_state\"];\n    google_secure_devices_pin?: CloudPreferences[\"google_secure_devices_pin\"];\n    tts_default_voice?: CloudPreferences[\"tts_default_voice\"];\n    remote_allow_remote_enable?: CloudPreferences[\"remote_allow_remote_enable\"];\n    strict_connection?: CloudPreferences[\"strict_connection\"];\n    cloud_ice_servers_enabled?: CloudPreferences[\"cloud_ice_servers_enabled\"];\n  }\n) =>\n  hass.callWS({\n    type: \"cloud/update_prefs\",\n    ...prefs,\n  });\n\nexport const removeCloudData = (hass: HomeAssistant) =>\n  hass.callWS({\n    type: \"cloud/remove_data\",\n  });\n\nexport const updateCloudGoogleEntityConfig = (\n  hass: HomeAssistant,\n  entity_id: string,\n  disable_2fa: boolean\n) =>\n  hass.callWS({\n    type: \"cloud/google_assistant/entities/update\",\n    entity_id,\n    disable_2fa,\n  });\n\nexport const cloudSyncGoogleAssistant = (hass: HomeAssistant) =>\n  hass.callApi(\"POST\", \"cloud/google_actions/sync\");\n\nexport const fetchSupportPackage = (hass: HomeAssistant) =>\n  hass.callApi<string>(\"GET\", \"cloud/support_package\");\n","import type { HomeAssistant } from \"../types\";\n\nexport interface TTSEngine {\n  engine_id: string;\n  supported_languages?: string[];\n  name?: string;\n  deprecated: boolean;\n}\n\nexport interface TTSVoice {\n  voice_id: string;\n  name: string;\n}\n\nexport const convertTextToSpeech = (\n  hass: HomeAssistant,\n  data: {\n    platform: string;\n    message: string;\n    cache?: boolean;\n    language?: string;\n    options?: Record<string, unknown>;\n  }\n) => hass.callApi<{ url: string; path: string }>(\"POST\", \"tts_get_url\", data);\n\nconst TTS_MEDIA_SOURCE_PREFIX = \"media-source://tts/\";\n\nexport const isTTSMediaSource = (mediaContentId: string) =>\n  mediaContentId.startsWith(TTS_MEDIA_SOURCE_PREFIX);\n\nexport const getProviderFromTTSMediaSource = (mediaContentId: string) =>\n  mediaContentId.substring(TTS_MEDIA_SOURCE_PREFIX.length);\n\nexport const listTTSEngines = (\n  hass: HomeAssistant,\n  language?: string,\n  country?: string\n): Promise<{ providers: TTSEngine[] }> =>\n  hass.callWS({\n    type: \"tts/engine/list\",\n    language,\n    country,\n  });\n\nexport const getTTSEngine = (\n  hass: HomeAssistant,\n  engine_id: string\n): Promise<{ provider: TTSEngine }> =>\n  hass.callWS({\n    type: \"tts/engine/get\",\n    engine_id,\n  });\n\nexport const listTTSVoices = (\n  hass: HomeAssistant,\n  engine_id: string,\n  language: string\n): Promise<{ voices: TTSVoice[] | null }> =>\n  hass.callWS({\n    type: \"tts/engine/voices\",\n    engine_id,\n    language,\n  });\n","export interface BrandsOptions {\n  domain: string;\n  type: \"icon\" | \"logo\" | \"icon@2x\" | \"logo@2x\";\n  useFallback?: boolean;\n  darkOptimized?: boolean;\n  brand?: boolean;\n}\n\nexport interface HardwareBrandsOptions {\n  category: string;\n  model?: string;\n  manufacturer: string;\n  darkOptimized?: boolean;\n}\n\nexport const brandsUrl = (options: BrandsOptions): string =>\n  `https://brands.home-assistant.io/${options.brand ? \"brands/\" : \"\"}${\n    options.useFallback ? \"_/\" : \"\"\n  }${options.domain}/${options.darkOptimized ? \"dark_\" : \"\"}${\n    options.type\n  }.png`;\n\nexport const hardwareBrandsUrl = (options: HardwareBrandsOptions): string =>\n  `https://brands.home-assistant.io/hardware/${options.category}/${\n    options.darkOptimized ? \"dark_\" : \"\"\n  }${options.manufacturer}${options.model ? `_${options.model}` : \"\"}.png`;\n\nexport const extractDomainFromBrandUrl = (url: string) => url.split(\"/\")[4];\n\nexport const isBrandUrl = (thumbnail: string | \"\"): boolean =>\n  thumbnail.startsWith(\"https://brands.home-assistant.io/\");\n"],"names":["formatLanguageCode","languageCode","locale","_formatLanguageCodeMe","_formatLanguageCodeMe2","formatLanguageCodeMem","of","_unused","memoizeOne","Intl","DisplayNames","language","type","fallback","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","key","value","html","_t","_","static","css","_t2","LitElement","getLanguageOptions","languages","nativeName","noSort","options","translations","translationMetadata","map","lang","_translations$lang","label","_err","sort","a","b","caseInsensitiveStringCompare","HaLanguagePicker","decorators","property","Array","attribute","Boolean","reflect","state","query","changedProps","_superPropGet","this","_computeDefaultLanguageOptions","changedProperties","localeChanged","has","hass","get","_this$languages","_this$hass","_select","layoutOptions","fireEvent","selectedItemIndex","_getLanguagesOptions","_defaultLanguages","findIndex","option","undefined","select","Object","keys","_this$languages2","_this$hass2","_this$value","_languageOptions$","_this$label","_this$hass3","_this$hass4","languageOptions","required","localize","disabled","_changed","stopPropagation","inlineArrow","length","_t3","_t4","ev","target","NONE","HaTTSVoicePicker","_this$_voices$","_voices","nothing","voice_id","voice","name","hasUpdated","_debouncedUpdateVoices","_updateVoices","debounce","engineId","listTTSVoices","voices","find","_this$_select","_this$_select2","_this$_select3","cloudLogin","_ref","rest","_objectWithoutProperties","_excluded","callApi","cloudRegister","email","password","cloudResendVerification","fetchCloudStatus","callWS","convertTextToSpeech","data","TTS_MEDIA_SOURCE_PREFIX","isTTSMediaSource","mediaContentId","startsWith","getProviderFromTTSMediaSource","substring","listTTSEngines","country","getTTSEngine","engine_id","brandsUrl","brand","useFallback","domain","darkOptimized","extractDomainFromBrandUrl","url","split","isBrandUrl","thumbnail"],"mappings":"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"}