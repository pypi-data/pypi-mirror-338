{"version":3,"file":"9456.08762355901514fe.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-integer.ts"],"sourcesContent":["import type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HaCheckbox } from \"../ha-checkbox\";\nimport \"../ha-slider\";\nimport \"../ha-checkbox\";\nimport \"../ha-input-helper-text\";\nimport \"../ha-textfield\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport type {\n  HaFormElement,\n  HaFormIntegerData,\n  HaFormIntegerSchema,\n} from \"./types\";\nimport type { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-integer\")\nexport class HaFormInteger extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormIntegerSchema;\n\n  @property({ attribute: false }) public data?: HaFormIntegerData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield ha-slider\") private _input?:\n    | HaTextField\n    | HTMLInputElement;\n\n  private _lastValue?: HaFormIntegerData;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      this.schema.valueMin !== undefined &&\n      this.schema.valueMax !== undefined &&\n      this.schema.valueMax - this.schema.valueMin < 256\n    ) {\n      return html`\n        <div>\n          ${this.label}\n          <div class=\"flex\">\n            ${!this.schema.required\n              ? html`\n                  <ha-checkbox\n                    @change=${this._handleCheckboxChange}\n                    .checked=${this.data !== undefined}\n                    .disabled=${this.disabled}\n                  ></ha-checkbox>\n                `\n              : \"\"}\n            <ha-slider\n              labeled\n              .value=${this._value}\n              .min=${this.schema.valueMin}\n              .max=${this.schema.valueMax}\n              .disabled=${this.disabled ||\n              (this.data === undefined && !this.schema.required)}\n              @change=${this._valueChanged}\n            ></ha-slider>\n          </div>\n          ${this.helper\n            ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>`\n            : \"\"}\n        </div>\n      `;\n    }\n\n    return html`\n      <ha-textfield\n        type=\"number\"\n        inputMode=\"numeric\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\n        \"own-margin\",\n        !(\"valueMin\" in this.schema && \"valueMax\" in this.schema) &&\n          !!this.schema.required\n      );\n    }\n  }\n\n  private get _value() {\n    if (this.data !== undefined) {\n      return this.data;\n    }\n\n    if (!this.schema.required) {\n      return this.schema.valueMin || 0;\n    }\n\n    return (\n      (this.schema.description?.suggested_value !== undefined &&\n        this.schema.description?.suggested_value !== null) ||\n      this.schema.default ||\n      this.schema.valueMin ||\n      0\n    );\n  }\n\n  private _handleCheckboxChange(ev: Event) {\n    const checked = (ev.target as HaCheckbox).checked;\n    let value: HaFormIntegerData | undefined;\n    if (checked) {\n      for (const candidate of [\n        this._lastValue,\n        this.schema.description?.suggested_value as HaFormIntegerData,\n        this.schema.default,\n        0,\n      ]) {\n        if (candidate !== undefined) {\n          value = candidate;\n          break;\n        }\n      }\n    } else {\n      // We track last value so user can disable and enable a field without losing\n      // their value.\n      this._lastValue = this.data;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField | HTMLInputElement;\n    const rawValue = source.value;\n\n    let value: number | undefined;\n\n    if (rawValue !== \"\") {\n      value = parseInt(String(rawValue));\n    }\n\n    if (this.data === value) {\n      // parseInt will drop invalid text at the end, in that case update textfield\n      const newRawValue = value === undefined ? \"\" : String(value);\n      if (source.value !== newRawValue) {\n        source.value = newRawValue;\n      }\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static styles = css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    .flex {\n      display: flex;\n    }\n    ha-slider {\n      flex: 1;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-integer\": HaFormInteger;\n  }\n}\n"],"names":["HaFormInteger","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","query","this","_input","focus","_this$schema$descript","_this$localize","undefined","schema","valueMin","valueMax","html","_t","_","label","required","_t2","_handleCheckboxChange","data","disabled","_value","_valueChanged","helper","_t3","_t4","description","suffix","localize","call","changedProps","has","toggleAttribute","_this$schema$descript2","_this$schema$descript3","suggested_value","default","ev","target","checked","candidate","_lastValue","_this$schema$descript4","fireEvent","source","rawValue","parseInt","String","newRawValue","static","css","_t5","LitElement"],"mappings":"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"}