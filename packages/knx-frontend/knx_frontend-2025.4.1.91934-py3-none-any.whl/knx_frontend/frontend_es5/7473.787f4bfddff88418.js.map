{"version":3,"file":"7473.787f4bfddff88418.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-background.ts"],"sourcesContent":["import { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { BackgroundSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-picture-upload\";\nimport \"../ha-alert\";\nimport type { HaPictureUpload } from \"../ha-picture-upload\";\nimport { URL_PREFIX } from \"../../data/image_upload\";\n\n@customElement(\"ha-selector-background\")\nexport class HaBackgroundSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: any;\n\n  @property({ attribute: false }) public selector!: BackgroundSelector;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @state() private yamlBackground = false;\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"value\")) {\n      this.yamlBackground = !!this.value && !this.value.startsWith(URL_PREFIX);\n    }\n  }\n\n  protected render() {\n    return html`\n      <div>\n        ${this.yamlBackground\n          ? html`\n              <div class=\"value\">\n                <img\n                  src=${this.value}\n                  alt=${this.hass.localize(\n                    \"ui.components.picture-upload.current_image_alt\"\n                  )}\n                />\n              </div>\n              <ha-alert alert-type=\"info\">\n                ${this.hass.localize(\n                  `ui.components.selectors.background.yaml_info`\n                )}\n                <ha-button slot=\"action\" @click=${this._clearValue}>\n                  ${this.hass.localize(\n                    `ui.components.picture-upload.clear_picture`\n                  )}\n                </ha-button>\n              </ha-alert>\n            `\n          : html`\n              <ha-picture-upload\n                .hass=${this.hass}\n                .value=${this.value?.startsWith(URL_PREFIX) ? this.value : null}\n                .original=${!!this.selector.background?.original}\n                .cropOptions=${this.selector.background?.crop}\n                select-media\n                @change=${this._pictureChanged}\n              ></ha-picture-upload>\n            `}\n      </div>\n    `;\n  }\n\n  private _pictureChanged(ev) {\n    const value = (ev.target as HaPictureUpload).value;\n\n    fireEvent(this, \"value-changed\", { value: value ?? undefined });\n  }\n\n  private _clearValue() {\n    fireEvent(this, \"value-changed\", { value: undefined });\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      position: relative;\n    }\n    div {\n      display: flex;\n      flex-direction: column;\n    }\n    ha-button {\n      white-space: nowrap;\n      --mdc-theme-primary: var(--primary-color);\n    }\n    .value {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n    img {\n      max-width: 100%;\n      max-height: 200px;\n      margin-bottom: 4px;\n      border-radius: var(--file-upload-image-border-radius);\n      transition: opacity 0.3s;\n      opacity: var(--picture-opacity, 1);\n    }\n    img:hover {\n      opacity: 1;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-background\": HaBackgroundSelector;\n  }\n}\n"],"names":["HaBackgroundSelector","_decorate","customElement","_initialize","_LitElement","constructor","args","F","d","kind","decorators","property","attribute","key","value","type","Boolean","state","changedProps","_superPropGet","has","this","yamlBackground","startsWith","URL_PREFIX","_this$value","_this$selector$backgr","_this$selector$backgr2","html","_t","_","_t2","hass","localize","_clearValue","_t3","selector","background","original","crop","_pictureChanged","ev","target","fireEvent","undefined","static","css","_t4","LitElement"],"mappings":"gXAWaA,GAAoBC,EAAAA,EAAAA,GAAA,EADhCC,EAAAA,EAAAA,IAAc,4BAAyB,SAAAC,EAAAC,GAAxC,MACaJ,UAAoBI,EAAoBC,WAAAA,IAAAC,GAAA,SAAAA,GAAAH,EAAA,OAoGpD,OAAAI,EApGYP,EAAoBQ,EAAA,EAAAC,KAAA,QAAAC,WAAA,EAC9BC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,OAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,WAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAK,IAAAL,KAAA,QAAAC,WAAA,EAEnDC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAI,IAAAL,KAAA,QAAAC,WAAA,EAElDO,EAAAA,EAAAA,OAAOJ,IAAA,iBAAAC,KAAAA,GAAA,OAA0B,CAAK,IAAAL,KAAA,SAAAI,IAAA,UAAAC,MAEvC,SAAkBI,IAChBC,EAAAA,EAAAA,GAdSnB,EAAoB,iBAc7BmB,CAd6B,CAcfD,IAEVA,EAAaE,IAAI,WACnBC,KAAKC,iBAAmBD,KAAKP,QAAUO,KAAKP,MAAMS,WAAWC,EAAAA,IAEjE,GAAC,CAAAf,KAAA,SAAAI,IAAA,SAAAC,MAED,WAAmB,IAAAW,EAAAC,EAAAC,EACjB,OAAOC,EAAAA,EAAAA,IAAIC,IAAAA,EAAAC,CAAA;;UAAA;;OAELT,KAAKC,gBACHM,EAAAA,EAAAA,IAAIG,IAAAA,EAAAD,CAAA;;;wBAAA;wBAAA;;;;kBAAA;kDAAA;oBAAA;;;eAGQT,KAAKP,MACLO,KAAKW,KAAKC,SACd,kDAKFZ,KAAKW,KAAKC,SACV,gDAEgCZ,KAAKa,YACnCb,KAAKW,KAAKC,SACV,gDAKRL,EAAAA,EAAAA,IAAIO,IAAAA,EAAAL,CAAA;;wBAAA;yBAAA;4BAAA;+BAAA;;0BAAA;;eAEQT,KAAKW,KACM,QAAVP,EAAAJ,KAAKP,aAAK,IAAAW,GAAVA,EAAYF,WAAWC,EAAAA,IAAcH,KAAKP,MAAQ,OACrB,QAAzBY,EAACL,KAAKe,SAASC,kBAAU,IAAAX,IAAxBA,EAA0BY,UACD,QADSX,EACjCN,KAAKe,SAASC,kBAAU,IAAAV,OAAA,EAAxBA,EAA0BY,KAE/BlB,KAAKmB,iBAK7B,GAAC,CAAA/B,KAAA,SAAAI,IAAA,kBAAAC,MAED,SAAwB2B,GACtB,MAAM3B,EAAS2B,EAAGC,OAA2B5B,OAE7C6B,EAAAA,EAAAA,GAAUtB,KAAM,gBAAiB,CAAEP,MAAOA,QAAAA,OAAS8B,GACrD,GAAC,CAAAnC,KAAA,SAAAI,IAAA,cAAAC,MAED,YACE6B,EAAAA,EAAAA,GAAUtB,KAAM,gBAAiB,CAAEP,WAAO8B,GAC5C,GAAC,CAAAnC,KAAA,QAAAoC,QAAA,EAAAhC,IAAA,SAAAC,KAAAA,GAAA,OAEegC,EAAAA,EAAAA,IAAGC,IAAAA,EAAAjB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAAA,OArEqBkB,EAAAA,I"}