{"version":3,"file":"9708.9399d50b1530854d.js","sources":["webpack://knx-frontend/mwc-checkbox.ts","webpack://knx-frontend/mwc-check-list-item-base.ts","webpack://knx-frontend/mwc-control-list-item.css.ts","webpack://knx-frontend/src/animate-controller.ts","webpack://knx-frontend/src/animate.ts","webpack://knx-frontend/src/position.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {CheckboxBase} from './mwc-checkbox-base.js';\nimport {styles} from './mwc-checkbox.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-checkbox': Checkbox;\n  }\n}\n\n/** @soyCompatible */\n@customElement('mwc-checkbox')\nexport class Checkbox extends CheckboxBase {\n  static override styles = [styles];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport '@material/mwc-checkbox/mwc-checkbox.js';\n\nimport {Checkbox} from '@material/mwc-checkbox/mwc-checkbox.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {GraphicType, ListItemBase} from './mwc-list-item-base.js';\n\nexport class CheckListItemBase extends ListItemBase {\n  @query('slot') protected override slotElement!: HTMLSlotElement|null;\n  @query('mwc-checkbox') protected checkboxElement!: Checkbox;\n\n  @property({type: Boolean}) left = false;\n  @property({type: String, reflect: true})\n  override graphic: GraphicType = 'control';\n\n  override render() {\n    const checkboxClasses = {\n      'mdc-deprecated-list-item__graphic': this.left,\n      'mdc-deprecated-list-item__meta': !this.left,\n    };\n\n    const text = this.renderText();\n    const graphic = this.graphic && this.graphic !== 'control' && !this.left ?\n        this.renderGraphic() :\n        html``;\n    const meta = this.hasMeta && this.left ? this.renderMeta() : html``;\n    const ripple = this.renderRipple();\n\n    return html`\n      ${ripple}\n      ${graphic}\n      ${this.left ? '' : text}\n      <span class=${classMap(checkboxClasses)}>\n        <mwc-checkbox\n            reducedTouchTarget\n            tabindex=${this.tabindex}\n            .checked=${this.selected}\n            ?disabled=${this.disabled}\n            @change=${this.onChange}>\n        </mwc-checkbox>\n      </span>\n      ${this.left ? text : ''}\n      ${meta}`;\n  }\n\n  protected async onChange(evt: Event) {\n    const checkbox = evt.target as Checkbox;\n    const changeFromProp = this.selected === checkbox.checked;\n\n    if (!changeFromProp) {\n      this._skipPropRequest = true;\n      this.selected = checkbox.checked;\n      await this.updateComplete;\n      this._skipPropRequest = false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`:host(:not([twoline])){height:56px}:host(:not([left])) .mdc-deprecated-list-item__meta{height:40px;width:40px}`;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ReactiveControllerHost} from 'lit';\nimport {Animate, Options} from './animate.js';\n\nexport const controllerMap = new WeakMap<\n  ReactiveControllerHost,\n  AnimateController\n>();\n\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport class AnimateController {\n  host: ReactiveControllerHost;\n  defaultOptions: Options;\n  startPaused = false;\n  disabled = false;\n  onComplete?: () => void;\n\n  constructor(\n    host: ReactiveControllerHost,\n    options: {\n      defaultOptions?: Options;\n      startPaused?: boolean;\n      disabled?: boolean;\n      onComplete?: () => void;\n    }\n  ) {\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n\n  /**\n   * Set of active `animate()` directives in the host component\n   */\n  clients = new Set<Animate>();\n\n  protected pendingComplete = false;\n\n  async add(animate: Animate) {\n    this.clients.add(animate);\n    if (this.startPaused) {\n      animate.webAnimation?.pause();\n    }\n    this.pendingComplete = true;\n    await animate.finished;\n    if (this.pendingComplete && !this.isAnimating) {\n      this.pendingComplete = false;\n      this.onComplete?.();\n    }\n  }\n\n  remove(animate: Animate) {\n    this.clients.delete(animate);\n  }\n\n  /**\n   * Pauses all animations running in the host component.\n   */\n  pause() {\n    this.clients.forEach((f) => f.webAnimation?.pause());\n  }\n\n  /**\n   * Plays all active animations in the host component.\n   */\n  play() {\n    this.clients.forEach((f) => f.webAnimation?.play());\n  }\n\n  cancel() {\n    this.clients.forEach((f) => f.webAnimation?.cancel());\n    this.clients.clear();\n  }\n\n  finish() {\n    this.clients.forEach((f) => f.webAnimation?.finish());\n    this.clients.clear();\n  }\n\n  /**\n   * Toggles the play/pause state of all active `animate()` animations in the host component.\n   */\n  togglePlay() {\n    if (this.isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Returns true if the host component has any active `animate()` animations.\n   */\n  get isAnimating() {\n    return this.clients.size > 0;\n  }\n\n  /**\n   * Returns true if the host component has any playing `animate()` animations.\n   */\n  get isPlaying() {\n    return Array.from(this.clients).some(\n      (a) => a.webAnimation?.playState === 'running'\n    );\n  }\n\n  async finished() {\n    await Promise.all(Array.from(this.clients).map((f) => f.finished));\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ReactiveControllerHost} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {controllerMap} from './animate-controller.js';\nexport {AnimateController} from './animate-controller.js';\n\nexport type CSSValues = {\n  [index: string]: string | number;\n};\n\nexport type CSSPropertiesList = string[];\n\n// zIndex for \"in\" animations\nlet z = 0;\n\nconst disconnectedProps = new Map<unknown, CSSValues>();\nconst renderedHosts = new WeakSet<ReactiveControllerHost>();\n\nexport type Options = {\n  // Options used for the animation\n  keyframeOptions?: KeyframeAnimationOptions;\n  // List of css properties to animate\n  properties?: CSSPropertiesList;\n  // if `true`, the `animate` is disabled\n  disabled?: boolean;\n  // Callback run to produce a value which is dirty checked to determine if animation should run.\n  guard?: () => unknown;\n  // Id for this `animate`; used to link to other `animate`s via e.g. `inId`\n  id?: unknown;\n  // Set to the `animate` id to map to when rendering \"in\"\n  inId?: unknown;\n  // Keyframes to use when animating \"in\"\n  in?: Keyframe[];\n  // Keyframes to use when animating \"out\"\n  out?: Keyframe[];\n  // Set to true to match DOM position when animating \"out\"\n  stabilizeOut?: boolean;\n  // Skips animation when initially rendering\n  skipInitial?: boolean;\n  // Callback run when the `animate` animation starts\n  onStart?: (animate: Animate) => void;\n  // Callback run when the animation is complete\n  onComplete?: (animate: Animate) => void;\n  // Callback run to modify frames used to animate\n  onFrames?: (animate: Animate) => Keyframe[] | undefined;\n};\n\nexport const animationFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{transform: 'translateY(100%) scale(0)', opacity: 0}];\nexport const flyAbove = [{transform: 'translateY(-100%) scale(0)', opacity: 0}];\nexport const flyLeft = [{transform: 'translateX(-100%) scale(0)', opacity: 0}];\nexport const flyRight = [{transform: 'translateX(100%) scale(0)', opacity: 0}];\nexport const none = [{}];\nexport const fadeOut = [{opacity: 0}];\nexport const fade = fadeOut;\nexport const fadeIn = [{opacity: 0}, {opacity: 1}];\nexport const fadeInSlow = [\n  {opacity: 0},\n  {opacity: 0.25, offset: 0.75},\n  {opacity: 1},\n];\n\nconst diffOp = (a: number, b: number) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a: number, b: number) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n\n// Computes a transform given a before and after input for given properties.\nexport const transformProps: {\n  [p: string]: (\n    a: number,\n    b: number\n  ) => {\n    value?: number;\n    transform?: string;\n    overrideFrom?: {[k: string]: string};\n  };\n} = {\n  left: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `translateX(${value}px)`;\n    return {value, transform};\n  },\n  top: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `translateY(${value}px)`;\n    return {value, transform};\n  },\n  width: (a: number, b: number) => {\n    let override: {} | undefined = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of width.\n    if (b === 0) {\n      b = 1;\n      override = {width: '1px'};\n    }\n    const value = quotientOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `scaleX(${value})`;\n    return {value, overrideFrom: override, transform};\n  },\n  height: (a: number, b: number) => {\n    let override: {} | undefined = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of height.\n    if (b === 0) {\n      b = 1;\n      override = {height: '1px'};\n    }\n    const value = quotientOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `scaleY(${value})`;\n    return {value, overrideFrom: override, transform};\n  },\n};\n\nexport const defaultKeyframeOptions: KeyframeAnimationOptions = {\n  duration: 333,\n  easing: `ease-in-out`,\n};\n\nexport const defaultCssProperties: CSSPropertiesList = [\n  'left',\n  'top',\n  'width',\n  'height',\n  'opacity',\n  'color',\n  'background',\n];\n\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value: unknown, previous: unknown) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (\n      Array.isArray(previous) &&\n      previous.length === value.length &&\n      value.every((v, i) => v === (previous as Array<unknown>)[i])\n    ) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap = new WeakMap<Node, Animate>();\n\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  private _hostHasUpdated = false;\n  private _host?: ReactiveControllerHost;\n  private _fromValues?: CSSValues;\n  private _parentNode: Element | null = null;\n  private _nextSibling: Node | null = null;\n  private _shouldAnimate = true;\n  private _previousValue: unknown;\n  private _styles?: string | undefined | null;\n  element!: HTMLElement;\n\n  shouldLog = false;\n  animatingProperties?: CSSValues;\n  frames?: Keyframe[];\n  webAnimation?: Animation;\n  options!: Options;\n  optionsOrCallback?: (() => Options) | Options;\n\n  finished!: Promise<void>;\n  private _resolveFinished?: () => void;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type === PartType.CHILD) {\n      throw new Error(\n        'The `animate` directive must be used in attribute position.'\n      );\n    }\n    this.createFinished();\n  }\n\n  createFinished() {\n    this.resolveFinished?.();\n    this.finished = new Promise((r) => {\n      this._resolveFinished = r;\n    });\n  }\n\n  async resolveFinished() {\n    this._resolveFinished?.();\n    this._resolveFinished = undefined;\n  }\n\n  render(_options?: (() => Options) | Options) {\n    return nothing;\n  }\n\n  getController() {\n    return controllerMap.get(this._host!);\n  }\n\n  isDisabled() {\n    return this.options.disabled || this.getController()?.disabled;\n  }\n\n  override update(part: AttributePart, [options]: Parameters<this['render']>) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      this._host = part.options?.host as ReactiveControllerHost;\n      this._host.addController(this);\n      this._host.updateComplete.then((_) => (this._hostHasUpdated = true));\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options as Options);\n    }\n    return this.render(options);\n  }\n\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  private _setOptions(options?: Options) {\n    options = options ?? {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options,\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions,\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    options!.properties ??= defaultCssProperties;\n    this.options = options;\n  }\n\n  // Measures and returns metrics for the element's bounding box and styling\n  private _measure() {\n    const props: CSSValues = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties!.forEach((p) => {\n      const v =\n        bounds[p as keyof typeof bounds] ??\n        (!transformProps[p as keyof typeof transformProps]\n          ? computedStyle[p as keyof CSSStyleDeclaration]\n          : undefined);\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n\n  // Returns true if a `animate` should be started.\n  private _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate =\n      this._hostHasUpdated &&\n      !this.isDisabled() &&\n      !this.isAnimating() &&\n      dirty &&\n      this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode =\n        this._parentNode ?? (this.element.parentNode as Element);\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n\n  async hostUpdated() {\n    if (\n      !this._shouldAnimate ||\n      !this.element.isConnected ||\n      (this.options.skipInitial && !this.isHostRendered)\n    ) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames: Keyframe[] | undefined;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions,\n      ancestors\n    );\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {from, to} = this._applyAncestorAdjustments(\n        this._fromValues,\n        toValues,\n        ancestors\n      );\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {from, to} = this._applyAncestorAdjustments(\n          disconnected!,\n          toValues,\n          ancestors\n        );\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in\n          ? [\n              {...this.options.in[0], ...frames![0]},\n              ...this.options.in.slice(1),\n              frames![1],\n            ]\n          : frames;\n        // adjust z so always on top...\n        z++;\n        frames!.forEach((f) => (f['zIndex'] = z));\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    noAwait(this.animate(frames, animationOptions));\n  }\n\n  resetStyles() {\n    if (this._styles !== undefined) {\n      this.element.setAttribute('style', this._styles ?? '');\n      this._styles = undefined;\n    }\n  }\n\n  commitStyles() {\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.webAnimation as any)?.commitStyles();\n    this.webAnimation?.cancel();\n  }\n\n  override reconnected() {}\n\n  // Experimental animate out functionality.\n  override async disconnected() {\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues!);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if (this._parentNode?.isConnected) {\n      // put element back in DOM\n      const ref =\n        this._nextSibling && this._nextSibling.parentNode === this._parentNode\n          ? this._nextSibling\n          : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left =\n          (this._fromValues!['left'] as number) - (shifted['left'] as number);\n        const top =\n          (this._fromValues!['top'] as number) - (shifted['top'] as number);\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions\n    );\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n\n  prepare() {\n    this.createFinished();\n  }\n\n  start() {\n    this.options.onStart?.(this);\n  }\n\n  didFinish(didAnimate: boolean) {\n    if (didAnimate) {\n      this.options.onComplete?.(this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n\n  private _getAncestors() {\n    const ancestors = [];\n    for (\n      let p: Node | null | undefined = this.element.parentNode;\n      p;\n      p = p?.parentNode\n    ) {\n      const a = nodeToAnimateMap.get(p!);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n\n  protected get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host!);\n    if (!hostRendered) {\n      this._host!.updateComplete.then(() => {\n        renderedHosts.add(this._host!);\n      });\n    }\n    return hostRendered;\n  }\n\n  private _calculateKeyframeOptions(\n    options: KeyframeAnimationOptions | undefined,\n    ancestors: Animate[] = this._getAncestors()\n  ) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {...defaultKeyframeOptions};\n    ancestors.forEach((a) =>\n      Object.assign(keyframeOptions, a.options.keyframeOptions)\n    );\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n\n  // Adjust position based on ancestor scaling.\n  private _applyAncestorAdjustments(\n    from: CSSValues,\n    to: CSSValues,\n    ancestors: Animate[]\n  ) {\n    from = {...from};\n    to = {...to};\n    const ancestorProps = ancestors\n      .map((a) => a.animatingProperties)\n      .filter((a) => a !== undefined) as CSSValues[];\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps.length > 0) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach((a) => {\n        if (a['width']) {\n          dScaleX = dScaleX / (a['width'] as number);\n        }\n        if (a['height']) {\n          dScaleY = dScaleY / (a['height'] as number);\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from['left'] !== undefined && to['left'] !== undefined) {\n        from['left'] = dScaleX * (from['left'] as number);\n        to['left'] = dScaleX * (to['left'] as number);\n      }\n      if (from['top'] !== undefined && to['top'] !== undefined) {\n        from['top'] = dScaleY * (from['top'] as number);\n        to['top'] = dScaleY * (to['top'] as number);\n      }\n    }\n    return {from, to};\n  }\n\n  protected calculateKeyframes(from: CSSValues, to: CSSValues, center = false) {\n    const fromFrame: Keyframe = {};\n    const toFrame: Keyframe = {};\n    let hasFrames = false;\n    const props: CSSValues = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p as keyof typeof transformProps];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f as number, t as number);\n        if (op.transform !== undefined) {\n          props[p] = op.value!;\n          hasFrames = true;\n          fromFrame['transform'] = `${fromFrame['transform'] ?? ''} ${\n            op['transform']\n          }`;\n          if (op.overrideFrom !== undefined) {\n            Object.assign(fromFrame, op.overrideFrom);\n          }\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame['transformOrigin'] = toFrame['transformOrigin'] = center\n      ? 'center center'\n      : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n\n  protected async animate(\n    frames: Keyframe[] | undefined,\n    options = this.options.keyframeOptions\n  ) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        noAwait(controller?.add(this));\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller?.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n\n  protected isAnimating() {\n    return (\n      this.webAnimation?.playState === 'running' || this.webAnimation?.pending\n    );\n  }\n\n  log(message: string, data?: unknown) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n\n/**\n * Used in an async function to mark a promise that we're deliberately not\n * awaiting.\n */\nfunction noAwait(_p: null | undefined | Promise<unknown>) {}\n\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * keyframeOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {LitElement} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\n\ninterface Positionables {\n  readonly bottom: number;\n  readonly height: number;\n  readonly left: number;\n  readonly right: number;\n  readonly top: number;\n  readonly width: number;\n}\n\ntype Ref = {value: HTMLElement};\nexport type TargetCallbackOrRef = (() => HTMLElement) | Ref;\n\nexport type Positions = Array<keyof Positionables>;\n\nconst positionedPoints = ['top', 'right', 'bottom', 'left'];\n\nexport class Position extends AsyncDirective {\n  private _host?: LitElement;\n  private _element?: Element;\n  private _targetCallbackOrRef!: TargetCallbackOrRef;\n  private _positions?: Positions;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `position` directive must be used in attribute position.'\n      );\n    }\n  }\n\n  render(_targetCallbackOrRef: TargetCallbackOrRef, _positions: Positions) {\n    return nothing;\n  }\n\n  override update(\n    part: AttributePart,\n    [target, positions]: Parameters<this['render']>\n  ) {\n    if (this._host === undefined) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n    }\n    this._element = part.element;\n    this._targetCallbackOrRef = target;\n    this._positions = positions ?? ['left', 'top', 'width', 'height'];\n    return this.render(target, positions);\n  }\n\n  hostUpdated() {\n    this._position();\n  }\n\n  private _position() {\n    const target =\n      typeof this._targetCallbackOrRef === 'function'\n        ? this._targetCallbackOrRef()\n        : this._targetCallbackOrRef?.value;\n    const parent = target.offsetParent;\n    if (target === undefined || !parent) {\n      return;\n    }\n    const tr = target.getBoundingClientRect();\n    const pr = parent.getBoundingClientRect();\n    this._positions?.forEach((p) => {\n      const x = positionedPoints.includes(p) ? tr[p] - pr[p] : tr[p];\n      (this._element as HTMLElement).style[p] = `${x}px`;\n    });\n  }\n}\n\n/**\n * Positions and sizes the element on which the `position()` directive is used\n * relative to the given target element.\n */\nexport const position = directive(Position);\n"],"names":["Checkbox","CheckboxBase","styles","__decorate","customElement","CheckListItemBase","ListItemBase","constructor","left","graphic","render","checkboxClasses","this","text","renderText","renderGraphic","html","_t","_","meta","hasMeta","renderMeta","_t2","ripple","renderRipple","_t3","classMap","tabindex","selected","disabled","onChange","evt","checkbox","target","checked","_skipPropRequest","updateComplete","query","property","type","Boolean","String","reflect","css","i","WeakMap","o","r","Map","n","WeakSet","a","animationFrame","Promise","t","requestAnimationFrame","g","diffOp","s","w","quotientOp","N","value","transform","isNaN","top","width","e","overrideFrom","height","A","duration","easing","b","j","x","super","h","shouldLog","Error","createFinished","_this$resolveFinished","resolveFinished","call","finished","l","_this$l","getController","u","isDisabled","_this$getController","options","update","_t$options","host","addController","then","element","set","optionsOrCallback","p","_t$properties","Object","assign","defaultOptions","keyframeOptions","properties","m","getBoundingClientRect","getComputedStyle","forEach","_i$e","Number","v","guard","Array","isArray","length","every","isAnimating","isConnected","from","hostUpdate","_this$i","parentNode","nextSibling","hostUpdated","skipInitial","isHostRendered","prepare","O","to","log","calculateKeyframes","get","inId","delete","in","slice","zIndex","animate","resetStyles","_this$P","P","setAttribute","commitStyles","_this$webAnimation","_this$webAnimation2","getAttribute","webAnimation","cancel","reconnected","disconnected","_this$i2","id","out","insertBefore","stabilizeOut","position","style","remove","start","_this$options$onStart","_this$options","onStart","didFinish","_this$options$onCompl","_this$options2","onComplete","animatingProperties","frames","_i","push","has","add","map","filter","_e$transform","transformOrigin","onFrames","_this$webAnimation3","_this$webAnimation4","playState","pending","console","F","S","C","$","_this$C","_this$F","offsetParent","includes"],"mappings":"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"}