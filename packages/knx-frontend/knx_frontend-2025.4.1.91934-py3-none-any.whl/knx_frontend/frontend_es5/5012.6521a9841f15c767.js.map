{"version":3,"file":"5012.6521a9841f15c767.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-code-editor.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-template.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/documentation-url.ts"],"sourcesContent":["import type {\n  Completion,\n  CompletionContext,\n  CompletionResult,\n  CompletionSource,\n} from \"@codemirror/autocomplete\";\nimport type { Extension, TransactionSpec } from \"@codemirror/state\";\nimport type { EditorView, KeyBinding, ViewUpdate } from \"@codemirror/view\";\nimport type { HassEntities } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { css, ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\nconst saveKeyBinding: KeyBinding = {\n  key: \"Mod-s\",\n  run: (view: EditorView) => {\n    fireEvent(view.dom, \"editor-save\");\n    return true;\n  },\n};\n\nconst renderIcon = (completion: Completion) => {\n  const icon = document.createElement(\"ha-icon\");\n  icon.icon = completion.label;\n  return icon;\n};\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends ReactiveElement {\n  public codemirror?: EditorView;\n\n  @property() public mode = \"yaml\";\n\n  public hass?: HomeAssistant;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ attribute: \"read-only\", type: Boolean }) public readOnly = false;\n\n  @property({ type: Boolean }) public linewrap = false;\n\n  @property({ type: Boolean, attribute: \"autocomplete-entities\" })\n  public autocompleteEntities = false;\n\n  @property({ type: Boolean, attribute: \"autocomplete-icons\" })\n  public autocompleteIcons = false;\n\n  @property({ type: Boolean }) public error = false;\n\n  @state() private _value = \"\";\n\n  // eslint-disable-next-line @typescript-eslint/consistent-type-imports\n  private _loadedCodeMirror?: typeof import(\"../resources/codemirror\");\n\n  private _iconList?: Completion[];\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.state.doc.toString() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    if (!this.codemirror || !this._loadedCodeMirror) {\n      return false;\n    }\n    const className = this._loadedCodeMirror.highlightingFor(\n      this.codemirror.state,\n      [this._loadedCodeMirror.tags.comment]\n    );\n    return !!this.renderRoot.querySelector(`span.${className}`);\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    // Force update on reconnection so editor is recreated\n    if (this.hasUpdated) {\n      this.requestUpdate();\n    }\n    this.addEventListener(\"keydown\", stopPropagation);\n    // This is unreachable as editor will not exist yet,\n    // but focus should not behave like this for good a11y.\n    // (@steverep to fix in autofocus PR)\n    if (!this.codemirror) {\n      return;\n    }\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener(\"keydown\", stopPropagation);\n    this.updateComplete.then(() => {\n      this.codemirror!.destroy();\n      delete this.codemirror;\n    });\n  }\n\n  // Ensure CodeMirror module is loaded before any update\n  protected override async scheduleUpdate() {\n    this._loadedCodeMirror ??= await import(\"../resources/codemirror\");\n    super.scheduleUpdate();\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n    if (!this.codemirror) {\n      this._createCodeMirror();\n      return;\n    }\n    const transactions: TransactionSpec[] = [];\n    if (changedProps.has(\"mode\")) {\n      transactions.push({\n        effects: [\n          this._loadedCodeMirror!.langCompartment!.reconfigure(this._mode),\n          this._loadedCodeMirror!.foldingCompartment.reconfigure(\n            this._getFoldingExtensions()\n          ),\n        ],\n      });\n    }\n    if (changedProps.has(\"readOnly\")) {\n      transactions.push({\n        effects: this._loadedCodeMirror!.readonlyCompartment!.reconfigure(\n          this._loadedCodeMirror!.EditorView!.editable.of(!this.readOnly)\n        ),\n      });\n    }\n    if (changedProps.has(\"linewrap\")) {\n      transactions.push({\n        effects: this._loadedCodeMirror!.linewrapCompartment!.reconfigure(\n          this.linewrap ? this._loadedCodeMirror!.EditorView.lineWrapping : []\n        ),\n      });\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      transactions.push({\n        changes: {\n          from: 0,\n          to: this.codemirror.state.doc.length,\n          insert: this._value,\n        },\n      });\n    }\n    if (transactions.length > 0) {\n      this.codemirror.dispatch(...transactions);\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  private get _mode() {\n    return this._loadedCodeMirror!.langs[this.mode];\n  }\n\n  private _createCodeMirror() {\n    if (!this._loadedCodeMirror) {\n      throw new Error(\"Cannot create editor before CodeMirror is loaded\");\n    }\n    const extensions: Extension[] = [\n      this._loadedCodeMirror.lineNumbers(),\n      this._loadedCodeMirror.history(),\n      this._loadedCodeMirror.drawSelection(),\n      this._loadedCodeMirror.EditorState.allowMultipleSelections.of(true),\n      this._loadedCodeMirror.rectangularSelection(),\n      this._loadedCodeMirror.crosshairCursor(),\n      this._loadedCodeMirror.highlightSelectionMatches(),\n      this._loadedCodeMirror.highlightActiveLine(),\n      this._loadedCodeMirror.indentationMarkers({\n        thickness: 0,\n        activeThickness: 1,\n        colors: {\n          activeLight: \"var(--secondary-text-color)\",\n          activeDark: \"var(--secondary-text-color)\",\n        },\n      }),\n      this._loadedCodeMirror.keymap.of([\n        ...this._loadedCodeMirror.defaultKeymap,\n        ...this._loadedCodeMirror.searchKeymap,\n        ...this._loadedCodeMirror.historyKeymap,\n        ...this._loadedCodeMirror.tabKeyBindings,\n        saveKeyBinding,\n      ]),\n      this._loadedCodeMirror.langCompartment.of(this._mode),\n      this._loadedCodeMirror.haTheme,\n      this._loadedCodeMirror.haSyntaxHighlighting,\n      this._loadedCodeMirror.readonlyCompartment.of(\n        this._loadedCodeMirror.EditorView.editable.of(!this.readOnly)\n      ),\n      this._loadedCodeMirror.linewrapCompartment.of(\n        this.linewrap ? this._loadedCodeMirror.EditorView.lineWrapping : []\n      ),\n      this._loadedCodeMirror.EditorView.updateListener.of(this._onUpdate),\n      this._loadedCodeMirror.foldingCompartment.of(\n        this._getFoldingExtensions()\n      ),\n    ];\n\n    if (!this.readOnly) {\n      const completionSources: CompletionSource[] = [];\n      if (this.autocompleteEntities && this.hass) {\n        completionSources.push(this._entityCompletions.bind(this));\n      }\n      if (this.autocompleteIcons) {\n        completionSources.push(this._mdiCompletions.bind(this));\n      }\n      if (completionSources.length > 0) {\n        extensions.push(\n          this._loadedCodeMirror.autocompletion({\n            override: completionSources,\n            maxRenderedOptions: 10,\n          })\n        );\n      }\n    }\n\n    this.codemirror = new this._loadedCodeMirror.EditorView({\n      state: this._loadedCodeMirror.EditorState.create({\n        doc: this._value,\n        extensions,\n      }),\n      parent: this.renderRoot,\n    });\n  }\n\n  private _getStates = memoizeOne((states: HassEntities): Completion[] => {\n    if (!states) {\n      return [];\n    }\n    const options = Object.keys(states).map((key) => ({\n      type: \"variable\",\n      label: key,\n      detail: states[key].attributes.friendly_name,\n      info: `State: ${states[key].state}`,\n    }));\n\n    return options;\n  });\n\n  private _entityCompletions(\n    context: CompletionContext\n  ): CompletionResult | null | Promise<CompletionResult | null> {\n    const entityWord = context.matchBefore(/[a-z_]{3,}\\.\\w*/);\n\n    if (\n      !entityWord ||\n      (entityWord.from === entityWord.to && !context.explicit)\n    ) {\n      return null;\n    }\n\n    const states = this._getStates(this.hass!.states);\n\n    if (!states || !states.length) {\n      return null;\n    }\n\n    return {\n      from: Number(entityWord.from),\n      options: states,\n      validFor: /^[a-z_]{3,}\\.\\w*$/,\n    };\n  }\n\n  private _getIconItems = async (): Promise<Completion[]> => {\n    if (!this._iconList) {\n      let iconList: {\n        name: string;\n        keywords: string[];\n      }[];\n      if (__SUPERVISOR__) {\n        iconList = [];\n      } else {\n        iconList = (await import(\"../../build/mdi/iconList.json\")).default;\n      }\n\n      this._iconList = iconList.map((icon) => ({\n        type: \"variable\",\n        label: `mdi:${icon.name}`,\n        detail: icon.keywords.join(\", \"),\n        info: renderIcon,\n      }));\n    }\n\n    return this._iconList;\n  };\n\n  private async _mdiCompletions(\n    context: CompletionContext\n  ): Promise<CompletionResult | null> {\n    const match = context.matchBefore(/mdi:\\S*/);\n\n    if (!match || (match.from === match.to && !context.explicit)) {\n      return null;\n    }\n\n    const iconItems = await this._getIconItems();\n\n    return {\n      from: Number(match.from),\n      options: iconItems,\n      validFor: /^mdi:\\S*$/,\n    };\n  }\n\n  private _onUpdate = (update: ViewUpdate): void => {\n    if (!update.docChanged) {\n      return;\n    }\n    this._value = update.state.doc.toString();\n    fireEvent(this, \"value-changed\", { value: this._value });\n  };\n\n  private _getFoldingExtensions = (): Extension => {\n    if (this.mode === \"yaml\") {\n      return [\n        this._loadedCodeMirror!.foldGutter(),\n        this._loadedCodeMirror!.foldingOnIndent,\n      ];\n    }\n\n    return [];\n  };\n\n  static styles = css`\n    :host(.error-state) .cm-gutters {\n      border-color: var(--error-state-color, red);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n","import { css, html, nothing, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../../types\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport \"../ha-code-editor\";\nimport \"../ha-input-helper-text\";\nimport \"../ha-alert\";\n\nconst WARNING_STRINGS = [\"template:\", \"sensor:\", \"state:\", \"trigger: template\"];\n\n@customElement(\"ha-selector-template\")\nexport class HaTemplateSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @state() private warn: string | undefined = undefined;\n\n  protected render() {\n    return html`\n      ${this.warn\n        ? html`<ha-alert alert-type=\"warning\"\n            >${this.hass.localize(\n              \"ui.components.selectors.template.yaml_warning\",\n              { string: this.warn }\n            )}\n            <br />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=${documentationUrl(\n                this.hass,\n                \"/docs/configuration/templating/\"\n              )}\n              >${this.hass.localize(\n                \"ui.components.selectors.template.learn_more\"\n              )}</a\n            ></ha-alert\n          >`\n        : nothing}\n      ${this.label\n        ? html`<p>${this.label}${this.required ? \"*\" : \"\"}</p>`\n        : nothing}\n      <ha-code-editor\n        mode=\"jinja2\"\n        .hass=${this.hass}\n        .value=${this.value}\n        .readOnly=${this.disabled}\n        autofocus\n        autocomplete-entities\n        autocomplete-icons\n        @value-changed=${this._handleChange}\n        dir=\"ltr\"\n        linewrap\n      ></ha-code-editor>\n      ${this.helper\n        ? html`<ha-input-helper-text>${this.helper}</ha-input-helper-text>`\n        : nothing}\n    `;\n  }\n\n  private _handleChange(ev) {\n    let value = ev.target.value;\n    if (this.value === value) {\n      return;\n    }\n    this.warn = WARNING_STRINGS.find((str) => value.includes(str));\n    if (value === \"\" && !this.required) {\n      value = undefined;\n    }\n    fireEvent(this, \"value-changed\", { value });\n  }\n\n  static styles = css`\n    p {\n      margin-top: 0;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-template\": HaTemplateSelector;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\nexport const documentationUrl = (hass: HomeAssistant, path: string) =>\n  `https://${\n    hass.config.version.includes(\"b\")\n      ? \"rc\"\n      : hass.config.version.includes(\"dev\")\n        ? \"next\"\n        : \"www\"\n  }.home-assistant.io${path}`;\n"],"names":["saveKeyBinding","key","run","view","fireEvent","dom","renderIcon","completion","icon","document","createElement","label","_decorate","customElement","_initialize","_ReactiveElement","HaCodeEditor","constructor","args","F","d","kind","value","decorators","property","type","Boolean","attribute","state","this","_value","codemirror","doc","toString","_loadedCodeMirror","className","highlightingFor","tags","comment","renderRoot","querySelector","_superPropGet","hasUpdated","requestUpdate","addEventListener","stopPropagation","autofocus","focus","removeEventListener","updateComplete","then","destroy","_this$_loadedCodeMirr","changedProps","_createCodeMirror","transactions","has","push","effects","langCompartment","reconfigure","_mode","foldingCompartment","_getFoldingExtensions","readonlyCompartment","EditorView","editable","of","readOnly","linewrapCompartment","linewrap","lineWrapping","changes","from","to","length","insert","dispatch","classList","toggle","error","langs","mode","Error","extensions","lineNumbers","history","drawSelection","EditorState","allowMultipleSelections","rectangularSelection","crosshairCursor","highlightSelectionMatches","highlightActiveLine","indentationMarkers","thickness","activeThickness","colors","activeLight","activeDark","keymap","defaultKeymap","searchKeymap","historyKeymap","tabKeyBindings","haTheme","haSyntaxHighlighting","updateListener","_onUpdate","completionSources","autocompleteEntities","hass","_entityCompletions","bind","autocompleteIcons","_mdiCompletions","autocompletion","override","maxRenderedOptions","create","parent","memoizeOne","states","Object","keys","map","detail","attributes","friendly_name","info","context","entityWord","matchBefore","explicit","_getStates","Number","options","validFor","async","_iconList","iconList","default","name","keywords","join","match","iconItems","_getIconItems","update","docChanged","foldGutter","foldingOnIndent","static","css","_t","_","ReactiveElement","WARNING_STRINGS","HaTemplateSelector","_LitElement","html","warn","_t2","localize","string","documentationUrl","nothing","_t3","required","disabled","_handleChange","helper","_t4","ev","target","find","str","includes","undefined","_t5","LitElement","path","config","version"],"mappings":"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"}