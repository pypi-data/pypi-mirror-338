{"version":3,"file":"2154.afe0e9c4c39bb8d1.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-boolean.ts"],"sourcesContent":["import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type {\n  HaFormBooleanData,\n  HaFormBooleanSchema,\n  HaFormElement,\n} from \"./types\";\nimport type { HaCheckbox } from \"../ha-checkbox\";\nimport \"../ha-checkbox\";\nimport \"../ha-formfield\";\n\n@customElement(\"ha-form-boolean\")\nexport class HaFormBoolean extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public schema!: HaFormBooleanSchema;\n\n  @property({ attribute: false }) public data!: HaFormBooleanData;\n\n  @property() public label!: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-checkbox\", true) private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-formfield .label=${this.label}>\n        <ha-checkbox\n          .checked=${this.data}\n          .disabled=${this.disabled}\n          @change=${this._valueChanged}\n        ></ha-checkbox>\n        <span slot=\"label\">\n          <p class=\"primary\">${this.label}</p>\n          ${this.helper\n            ? html`<p class=\"secondary\">${this.helper}</p>`\n            : nothing}\n        </span>\n      </ha-formfield>\n    `;\n  }\n\n  private _valueChanged(ev: Event) {\n    fireEvent(this, \"value-changed\", {\n      value: (ev.target as HaCheckbox).checked,\n    });\n  }\n\n  static styles = css`\n    ha-formfield {\n      display: flex;\n      min-height: 56px;\n      align-items: center;\n      --mdc-typography-body2-font-size: 1em;\n    }\n    p {\n      margin: 0;\n    }\n    .secondary {\n      direction: var(--direction);\n      padding-top: 4px;\n      box-sizing: border-box;\n      color: var(--secondary-text-color);\n      font-size: 0.875rem;\n      font-weight: var(--mdc-typography-body2-font-weight, 400);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-boolean\": HaFormBoolean;\n  }\n}\n"],"names":["HaFormBoolean","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","query","this","_input","focus","html","_t","_","label","data","disabled","_valueChanged","helper","_t2","nothing","ev","fireEvent","target","checked","static","css","_t3","LitElement"],"mappings":"gQAcaA,GAAaC,EAAAA,EAAAA,GAAA,EADzBC,EAAAA,EAAAA,IAAc,qBAAkB,SAAAC,EAAAC,GA+DhC,OAAAC,EA/DD,cAC0BD,EAA6CE,WAAAA,IAAAC,GAAA,SAAAA,GAAAJ,EAAA,QAA7CK,EAAA,EAAAC,KAAA,QAAAC,WAAA,EACvBC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,SAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,OAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,OAAUE,IAAA,SAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAK,IAAAL,KAAA,QAAAC,WAAA,EAEnDO,EAAAA,EAAAA,IAAM,eAAe,IAAKJ,IAAA,SAAAC,WAAA,IAAAL,KAAA,SAAAI,IAAA,QAAAC,MAE3B,WACMI,KAAKC,QACPD,KAAKC,OAAOC,OAEhB,GAAC,CAAAX,KAAA,SAAAI,IAAA,SAAAC,MAED,WACE,OAAOO,EAAAA,EAAAA,IAAIC,IAAAA,EAAAC,CAAA;6BAAA;;qBAAA;sBAAA;oBAAA;;;+BAAA;YAAA;;;OACcL,KAAKM,MAEbN,KAAKO,KACJP,KAAKQ,SACPR,KAAKS,cAGMT,KAAKM,MACxBN,KAAKU,QACHP,EAAAA,EAAAA,IAAIQ,IAAAA,EAAAN,CAAA,wBAAwB,SAAAL,KAAKU,QACjCE,EAAAA,GAIZ,GAAC,CAAArB,KAAA,SAAAI,IAAA,gBAAAC,MAED,SAAsBiB,IACpBC,EAAAA,EAAAA,GAAUd,KAAM,gBAAiB,CAC/BJ,MAAQiB,EAAGE,OAAsBC,SAErC,GAAC,CAAAzB,KAAA,QAAA0B,QAAA,EAAAtB,IAAA,SAAAC,KAAAA,GAAA,OAEesB,EAAAA,EAAAA,IAAGC,IAAAA,EAAAd,CAAA;;;;;;;;;;;;;;;;;;KAAA,OA3Cce,EAAAA,G"}