{"version":3,"file":"8660.acf67d6eb0694ea9.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/compute_device_name.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/device/ha-device-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/device/ha-devices-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-device.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/util/time-cache-function-promise.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity_sources.ts"],"sourcesContent":["import type { DeviceRegistryEntry } from \"../../data/device_registry\";\nimport type {\n  EntityRegistryDisplayEntry,\n  EntityRegistryEntry,\n} from \"../../data/entity_registry\";\nimport type { HomeAssistant } from \"../../types\";\nimport { computeStateName } from \"./compute_state_name\";\n\nexport const computeDeviceName = (\n  device: DeviceRegistryEntry\n): string | undefined => (device.name_by_user || device.name)?.trim();\n\nexport const computeDeviceNameDisplay = (\n  device: DeviceRegistryEntry,\n  hass: HomeAssistant,\n  entities?: EntityRegistryEntry[] | EntityRegistryDisplayEntry[] | string[]\n) =>\n  computeDeviceName(device) ||\n  (entities && fallbackDeviceName(hass, entities)) ||\n  hass.localize(\"ui.panel.config.devices.unnamed_device\", {\n    type: hass.localize(\n      `ui.panel.config.devices.type.${device.entry_type || \"device\"}`\n    ),\n  });\n\nexport const fallbackDeviceName = (\n  hass: HomeAssistant,\n  entities: EntityRegistryEntry[] | EntityRegistryDisplayEntry[] | string[]\n) => {\n  for (const entity of entities || []) {\n    const entityId = typeof entity === \"string\" ? entity : entity.entity_id;\n    const stateObj = hass.states[entityId];\n    if (stateObj) {\n      return computeStateName(stateObj);\n    }\n  }\n  return undefined;\n};\n","import type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, html } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDeviceNameDisplay } from \"../../common/entity/compute_device_name\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { stringCompare } from \"../../common/string/compare\";\nimport type { ScorableTextItem } from \"../../common/string/filter/sequence-matching\";\nimport { fuzzyFilterSort } from \"../../common/string/filter/sequence-matching\";\nimport type {\n  DeviceEntityDisplayLookup,\n  DeviceRegistryEntry,\n} from \"../../data/device_registry\";\nimport { getDeviceEntityDisplayLookup } from \"../../data/device_registry\";\nimport type { EntityRegistryDisplayEntry } from \"../../data/entity_registry\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../../types\";\nimport \"../ha-combo-box\";\nimport type { HaComboBox } from \"../ha-combo-box\";\nimport \"../ha-list-item\";\n\ninterface Device {\n  name: string;\n  area: string;\n  id: string;\n}\n\ntype ScorableDevice = ScorableTextItem & Device;\n\nexport type HaDevicePickerDeviceFilterFunc = (\n  device: DeviceRegistryEntry\n) => boolean;\n\nexport type HaDevicePickerEntityFilterFunc = (entity: HassEntity) => boolean;\n\nconst rowRenderer: ComboBoxLitRenderer<Device> = (item) =>\n  html`<ha-list-item .twoline=${!!item.area}>\n    <span>${item.name}</span>\n    <span slot=\"secondary\">${item.area}</span>\n  </ha-list-item>`;\n\n@customElement(\"ha-device-picker\")\nexport class HaDevicePicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  /**\n   * Show only devices with entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no devices with entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only devices with entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  /**\n   * List of devices to be excluded.\n   * @type {Array}\n   * @attr exclude-devices\n   */\n  @property({ type: Array, attribute: \"exclude-devices\" })\n  public excludeDevices?: string[];\n\n  @property({ attribute: false })\n  public deviceFilter?: HaDevicePickerDeviceFilterFunc;\n\n  @property({ attribute: false })\n  public entityFilter?: HaDevicePickerEntityFilterFunc;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() private _opened?: boolean;\n\n  @query(\"ha-combo-box\", true) public comboBox!: HaComboBox;\n\n  private _init = false;\n\n  private _getDevices = memoizeOne(\n    (\n      devices: DeviceRegistryEntry[],\n      areas: HomeAssistant[\"areas\"],\n      entities: EntityRegistryDisplayEntry[],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"],\n      deviceFilter: this[\"deviceFilter\"],\n      entityFilter: this[\"entityFilter\"],\n      excludeDevices: this[\"excludeDevices\"]\n    ): ScorableDevice[] => {\n      if (!devices.length) {\n        return [\n          {\n            id: \"no_devices\",\n            area: \"\",\n            name: this.hass.localize(\"ui.components.device-picker.no_devices\"),\n            strings: [],\n          },\n        ];\n      }\n\n      let deviceEntityLookup: DeviceEntityDisplayLookup = {};\n\n      if (\n        includeDomains ||\n        excludeDomains ||\n        includeDeviceClasses ||\n        entityFilter\n      ) {\n        deviceEntityLookup = getDeviceEntityDisplayLookup(entities);\n      }\n\n      let inputDevices = devices.filter(\n        (device) => device.id === this.value || !device.disabled_by\n      );\n\n      if (includeDomains) {\n        inputDevices = inputDevices.filter((device) => {\n          const devEntities = deviceEntityLookup[device.id];\n          if (!devEntities || !devEntities.length) {\n            return false;\n          }\n          return deviceEntityLookup[device.id].some((entity) =>\n            includeDomains.includes(computeDomain(entity.entity_id))\n          );\n        });\n      }\n\n      if (excludeDomains) {\n        inputDevices = inputDevices.filter((device) => {\n          const devEntities = deviceEntityLookup[device.id];\n          if (!devEntities || !devEntities.length) {\n            return true;\n          }\n          return entities.every(\n            (entity) =>\n              !excludeDomains.includes(computeDomain(entity.entity_id))\n          );\n        });\n      }\n\n      if (excludeDevices) {\n        inputDevices = inputDevices.filter(\n          (device) => !excludeDevices!.includes(device.id)\n        );\n      }\n\n      if (includeDeviceClasses) {\n        inputDevices = inputDevices.filter((device) => {\n          const devEntities = deviceEntityLookup[device.id];\n          if (!devEntities || !devEntities.length) {\n            return false;\n          }\n          return deviceEntityLookup[device.id].some((entity) => {\n            const stateObj = this.hass.states[entity.entity_id];\n            if (!stateObj) {\n              return false;\n            }\n            return (\n              stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class)\n            );\n          });\n        });\n      }\n\n      if (entityFilter) {\n        inputDevices = inputDevices.filter((device) => {\n          const devEntities = deviceEntityLookup[device.id];\n          if (!devEntities || !devEntities.length) {\n            return false;\n          }\n          return devEntities.some((entity) => {\n            const stateObj = this.hass.states[entity.entity_id];\n            if (!stateObj) {\n              return false;\n            }\n            return entityFilter(stateObj);\n          });\n        });\n      }\n\n      if (deviceFilter) {\n        inputDevices = inputDevices.filter(\n          (device) =>\n            // We always want to include the device of the current value\n            device.id === this.value || deviceFilter!(device)\n        );\n      }\n\n      const outputDevices = inputDevices.map((device) => {\n        const name = computeDeviceNameDisplay(\n          device,\n          this.hass,\n          deviceEntityLookup[device.id]\n        );\n\n        return {\n          id: device.id,\n          name:\n            name ||\n            this.hass.localize(\"ui.components.device-picker.unnamed_device\"),\n          area:\n            device.area_id && areas[device.area_id]\n              ? areas[device.area_id].name\n              : this.hass.localize(\"ui.components.device-picker.no_area\"),\n          strings: [name || \"\"],\n        };\n      });\n      if (!outputDevices.length) {\n        return [\n          {\n            id: \"no_devices\",\n            area: \"\",\n            name: this.hass.localize(\"ui.components.device-picker.no_match\"),\n            strings: [],\n          },\n        ];\n      }\n      if (outputDevices.length === 1) {\n        return outputDevices;\n      }\n      return outputDevices.sort((a, b) =>\n        stringCompare(a.name || \"\", b.name || \"\", this.hass.locale.language)\n      );\n    }\n  );\n\n  public async open() {\n    await this.updateComplete;\n    await this.comboBox?.open();\n  }\n\n  public async focus() {\n    await this.updateComplete;\n    await this.comboBox?.focus();\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      (!this._init && this.hass) ||\n      (this._init && changedProps.has(\"_opened\") && this._opened)\n    ) {\n      this._init = true;\n      const devices = this._getDevices(\n        Object.values(this.hass.devices),\n        this.hass.areas,\n        Object.values(this.hass.entities),\n        this.includeDomains,\n        this.excludeDomains,\n        this.includeDeviceClasses,\n        this.deviceFilter,\n        this.entityFilter,\n        this.excludeDevices\n      );\n      this.comboBox.items = devices;\n      this.comboBox.filteredItems = devices;\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        .label=${this.label === undefined && this.hass\n          ? this.hass.localize(\"ui.components.device-picker.device\")\n          : this.label}\n        .value=${this._value}\n        .helper=${this.helper}\n        .renderer=${rowRenderer}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        item-id-path=\"id\"\n        item-value-path=\"id\"\n        item-label-path=\"name\"\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._deviceChanged}\n        @filter-changed=${this._filterChanged}\n      ></ha-combo-box>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _filterChanged(ev: CustomEvent): void {\n    const target = ev.target as HaComboBox;\n    const filterString = ev.detail.value.toLowerCase();\n    target.filteredItems = filterString.length\n      ? fuzzyFilterSort<ScorableDevice>(filterString, target.items || [])\n      : target.items;\n  }\n\n  private _deviceChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    let newValue = ev.detail.value;\n\n    if (newValue === \"no_devices\") {\n      newValue = \"\";\n    }\n\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-device-picker\": HaDevicePicker;\n  }\n}\n","import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { ValueChangedEvent, HomeAssistant } from \"../../types\";\nimport \"./ha-device-picker\";\nimport type {\n  HaDevicePickerDeviceFilterFunc,\n  HaDevicePickerEntityFilterFunc,\n} from \"./ha-device-picker\";\n\n@customElement(\"ha-devices-picker\")\nclass HaDevicesPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Array }) public value?: string[];\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  /**\n   * Show entities from specific domains.\n   * @type {string}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property({ attribute: \"picked-device-label\" })\n  public pickedDeviceLabel?: string;\n\n  @property({ attribute: \"pick-device-label\" }) public pickDeviceLabel?: string;\n\n  @property({ attribute: false })\n  public deviceFilter?: HaDevicePickerDeviceFilterFunc;\n\n  @property({ attribute: false })\n  public entityFilter?: HaDevicePickerEntityFilterFunc;\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const currentDevices = this._currentDevices;\n    return html`\n      ${currentDevices.map(\n        (entityId) => html`\n          <div>\n            <ha-device-picker\n              allow-custom-entity\n              .curValue=${entityId}\n              .hass=${this.hass}\n              .deviceFilter=${this.deviceFilter}\n              .entityFilter=${this.entityFilter}\n              .includeDomains=${this.includeDomains}\n              .excludeDomains=${this.excludeDomains}\n              .includeDeviceClasses=${this.includeDeviceClasses}\n              .value=${entityId}\n              .label=${this.pickedDeviceLabel}\n              .disabled=${this.disabled}\n              @value-changed=${this._deviceChanged}\n            ></ha-device-picker>\n          </div>\n        `\n      )}\n      <div>\n        <ha-device-picker\n          allow-custom-entity\n          .hass=${this.hass}\n          .helper=${this.helper}\n          .deviceFilter=${this.deviceFilter}\n          .entityFilter=${this.entityFilter}\n          .includeDomains=${this.includeDomains}\n          .excludeDomains=${this.excludeDomains}\n          .excludeDevices=${currentDevices}\n          .includeDeviceClasses=${this.includeDeviceClasses}\n          .label=${this.pickDeviceLabel}\n          .disabled=${this.disabled}\n          .required=${this.required && !currentDevices.length}\n          @value-changed=${this._addDevice}\n        ></ha-device-picker>\n      </div>\n    `;\n  }\n\n  private get _currentDevices() {\n    return this.value || [];\n  }\n\n  private async _updateDevices(devices) {\n    fireEvent(this, \"value-changed\", {\n      value: devices,\n    });\n\n    this.value = devices;\n  }\n\n  private _deviceChanged(event: ValueChangedEvent<string>) {\n    event.stopPropagation();\n    const curValue = (event.currentTarget as any).curValue;\n    const newValue = event.detail.value;\n    if (newValue === curValue) {\n      return;\n    }\n    if (newValue === undefined) {\n      this._updateDevices(\n        this._currentDevices.filter((dev) => dev !== curValue)\n      );\n    } else {\n      this._updateDevices(\n        this._currentDevices.map((dev) => (dev === curValue ? newValue : dev))\n      );\n    }\n  }\n\n  private async _addDevice(event: ValueChangedEvent<string>) {\n    event.stopPropagation();\n    const toAdd = event.detail.value;\n    (event.currentTarget as any).value = \"\";\n    if (!toAdd) {\n      return;\n    }\n    const currentDevices = this._currentDevices;\n    if (currentDevices.includes(toAdd)) {\n      return;\n    }\n\n    this._updateDevices([...currentDevices, toAdd]);\n  }\n\n  static override styles = css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-devices-picker\": HaDevicesPicker;\n  }\n}\n","import type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { DeviceRegistryEntry } from \"../../data/device_registry\";\nimport { getDeviceIntegrationLookup } from \"../../data/device_registry\";\nimport type { EntitySources } from \"../../data/entity_sources\";\nimport { fetchEntitySourcesWithCache } from \"../../data/entity_sources\";\nimport type { DeviceSelector } from \"../../data/selector\";\nimport type { ConfigEntry } from \"../../data/config_entries\";\nimport { getConfigEntries } from \"../../data/config_entries\";\nimport {\n  filterSelectorDevices,\n  filterSelectorEntities,\n} from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../device/ha-device-picker\";\nimport \"../device/ha-devices-picker\";\n\n@customElement(\"ha-selector-device\")\nexport class HaDeviceSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: DeviceSelector;\n\n  @state() private _entitySources?: EntitySources;\n\n  @state() private _configEntries?: ConfigEntry[];\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  private _deviceIntegrationLookup = memoizeOne(getDeviceIntegrationLookup);\n\n  private _hasIntegration(selector: DeviceSelector) {\n    return (\n      (selector.device?.filter &&\n        ensureArray(selector.device.filter).some(\n          (filter) => filter.integration\n        )) ||\n      (selector.device?.entity &&\n        ensureArray(selector.device.entity).some(\n          (device) => device.integration\n        ))\n    );\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (changedProperties.has(\"selector\") && this.value !== undefined) {\n      if (this.selector.device?.multiple && !Array.isArray(this.value)) {\n        this.value = [this.value];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      } else if (!this.selector.device?.multiple && Array.isArray(this.value)) {\n        this.value = this.value[0];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      }\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has(\"selector\") &&\n      this._hasIntegration(this.selector) &&\n      !this._entitySources\n    ) {\n      fetchEntitySourcesWithCache(this.hass).then((sources) => {\n        this._entitySources = sources;\n      });\n    }\n    if (!this._configEntries && this._hasIntegration(this.selector)) {\n      this._configEntries = [];\n      getConfigEntries(this.hass).then((entries) => {\n        this._configEntries = entries;\n      });\n    }\n  }\n\n  protected render() {\n    if (this._hasIntegration(this.selector) && !this._entitySources) {\n      return nothing;\n    }\n\n    if (!this.selector.device?.multiple) {\n      return html`\n        <ha-device-picker\n          .hass=${this.hass}\n          .value=${this.value}\n          .label=${this.label}\n          .helper=${this.helper}\n          .deviceFilter=${this._filterDevices}\n          .entityFilter=${this.selector.device?.entity\n            ? this._filterEntities\n            : undefined}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          allow-custom-entity\n        ></ha-device-picker>\n      `;\n    }\n\n    return html`\n      ${this.label ? html`<label>${this.label}</label>` : \"\"}\n      <ha-devices-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .deviceFilter=${this._filterDevices}\n        .entityFilter=${this.selector.device?.entity\n          ? this._filterEntities\n          : undefined}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-devices-picker>\n    `;\n  }\n\n  private _filterDevices = (device: DeviceRegistryEntry): boolean => {\n    if (!this.selector.device?.filter) {\n      return true;\n    }\n    const deviceIntegrations = this._entitySources\n      ? this._deviceIntegrationLookup(\n          this._entitySources,\n          Object.values(this.hass.entities),\n          Object.values(this.hass.devices),\n          this._configEntries\n        )\n      : undefined;\n\n    return ensureArray(this.selector.device.filter).some((filter) =>\n      filterSelectorDevices(filter, device, deviceIntegrations)\n    );\n  };\n\n  private _filterEntities = (entity: HassEntity): boolean =>\n    ensureArray(this.selector.device!.entity).some((filter) =>\n      filterSelectorEntities(filter, entity, this._entitySources)\n    );\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-device\": HaDeviceSelector;\n  }\n}\n","import type { HomeAssistant } from \"../../types\";\n\ninterface CacheResult<T> {\n  result: T;\n  cacheKey: any;\n}\n\n/**\n * Caches a result of a promise for X time. Allows optional extra validation\n * check to invalidate the cache.\n * @param cacheKey the key to store the cache\n * @param cacheTime the time to cache the result\n * @param func the function to fetch the data\n * @param generateCacheKey optional function to generate a cache key based on current hass + cached result. Cache is invalid if generates a different cache key.\n * @param hass Home Assistant object\n * @param args extra arguments to pass to the function to fetch the data\n * @returns\n */\nexport const timeCachePromiseFunc = async <T>(\n  cacheKey: string,\n  cacheTime: number,\n  func: (hass: HomeAssistant, ...args: any[]) => Promise<T>,\n  generateCacheKey:\n    | ((hass: HomeAssistant, lastResult: T) => unknown)\n    | undefined,\n  hass: HomeAssistant,\n  ...args: any[]\n): Promise<T> => {\n  const anyHass = hass as any;\n  const lastResult: Promise<CacheResult<T>> | CacheResult<T> | undefined =\n    anyHass[cacheKey];\n\n  const checkCachedResult = (result: CacheResult<T>): T | Promise<T> => {\n    if (\n      !generateCacheKey ||\n      generateCacheKey(hass, result.result) === result.cacheKey\n    ) {\n      return result.result;\n    }\n\n    anyHass[cacheKey] = undefined;\n    return timeCachePromiseFunc(\n      cacheKey,\n      cacheTime,\n      func,\n      generateCacheKey,\n      hass,\n      ...args\n    );\n  };\n\n  // If we have a cached result, return it if it's still valid\n  if (lastResult) {\n    return lastResult instanceof Promise\n      ? lastResult.then(checkCachedResult)\n      : checkCachedResult(lastResult);\n  }\n\n  const resultPromise = func(hass, ...args);\n  anyHass[cacheKey] = resultPromise;\n\n  resultPromise.then(\n    // When successful, set timer to clear cache\n    (result) => {\n      anyHass[cacheKey] = {\n        result,\n        cacheKey: generateCacheKey?.(hass, result),\n      };\n      setTimeout(() => {\n        anyHass[cacheKey] = undefined;\n      }, cacheTime);\n    },\n    // On failure, clear cache right away\n    () => {\n      anyHass[cacheKey] = undefined;\n    }\n  );\n\n  return resultPromise;\n};\n","import { timeCachePromiseFunc } from \"../common/util/time-cache-function-promise\";\nimport type { HomeAssistant } from \"../types\";\n\ninterface EntitySource {\n  domain: string;\n}\n\nexport type EntitySources = Record<string, EntitySource>;\n\nconst fetchEntitySources = (hass: HomeAssistant): Promise<EntitySources> =>\n  hass.callWS({ type: \"entity/source\" });\n\nexport const fetchEntitySourcesWithCache = (\n  hass: HomeAssistant\n): Promise<EntitySources> =>\n  timeCachePromiseFunc(\n    \"_entitySources\",\n    // cache for 30 seconds\n    30000,\n    fetchEntitySources,\n    // We base the cache on number of states. If number of states\n    // changes we force a refresh\n    (hass2) => Object.keys(hass2.states).length,\n    hass\n  );\n"],"names":["computeDeviceNameDisplay","device","hass","entities","_ref","name_by_user","name","trim","computeDeviceName","fallbackDeviceName","localize","type","entry_type","entity","entityId","entity_id","stateObj","states","computeStateName","rowRenderer","item","html","_t","_","area","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","Array","Boolean","state","query","memoizeOne","devices","areas","includeDomains","excludeDomains","includeDeviceClasses","deviceFilter","entityFilter","excludeDevices","length","id","this","strings","deviceEntityLookup","getDeviceEntityDisplayLookup","inputDevices","filter","disabled_by","devEntities","some","includes","computeDomain","every","attributes","device_class","outputDevices","map","area_id","sort","a","b","stringCompare","locale","language","_this$comboBox","updateComplete","comboBox","open","_this$comboBox2","focus","changedProps","_init","has","_opened","_getDevices","Object","values","items","filteredItems","_t2","undefined","label","_value","helper","disabled","required","_openedChanged","_deviceChanged","_filterChanged","ev","target","filterString","detail","toLowerCase","fuzzyFilterSort","stopPropagation","newValue","_setValue","setTimeout","fireEvent","LitElement","nothing","currentDevices","_currentDevices","pickedDeviceLabel","pickDeviceLabel","_addDevice","event","curValue","currentTarget","_updateDevices","dev","toAdd","static","css","_t3","HaDeviceSelector","getDeviceIntegrationLookup","selector","_selector$device","_selector$device2","ensureArray","integration","changedProperties","_this$selector$device","_this$selector$device2","multiple","isArray","_superPropGet","_hasIntegration","_entitySources","fetchEntitySourcesWithCache","then","sources","_configEntries","getConfigEntries","entries","_this$selector$device3","_this$selector$device5","_this$selector$device4","_filterDevices","_filterEntities","_this$selector$device6","deviceIntegrations","_deviceIntegrationLookup","filterSelectorDevices","filterSelectorEntities","timeCachePromiseFunc","async","cacheKey","cacheTime","func","generateCacheKey","anyHass","lastResult","checkCachedResult","result","Promise","resultPromise","fetchEntitySources","callWS","hass2","keys"],"mappings":"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"}