{"version":3,"file":"5362.ccdd274114d3ae78.js","sources":["webpack://knx-frontend/src/resize-controller.ts","webpack://knx-frontend/list-item.ts","webpack://knx-frontend/list-item-styles.ts","webpack://knx-frontend/list.ts","webpack://knx-frontend/list-styles.ts","webpack://knx-frontend/../src/directives/private-async-helpers.ts","webpack://knx-frontend/../src/directives/until.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {isServer} from 'lit-html/is-server.js';\nimport {\n  ReactiveController,\n  ReactiveControllerHost,\n} from '@lit/reactive-element/reactive-controller.js';\n\n/**\n * The callback function for a ResizeController.\n */\nexport type ResizeValueCallback<T = unknown> = (\n  ...args: Parameters<ResizeObserverCallback>\n) => T;\n\n/**\n * The config options for a ResizeController.\n */\nexport interface ResizeControllerConfig<T = unknown> {\n  /**\n   * Configuration object for the ResizeController.\n   */\n  config?: ResizeObserverOptions;\n  /**\n   * The element to observe. In addition to configuring the target here,\n   * the `observe` method can be called to observe additional targets. When not\n   * specified, the target defaults to the `host`. If set to `null`, no target\n   * is automatically observed. Only the configured target will be re-observed\n   * if the host connects again after unobserving via disconnection.\n   */\n  target?: Element | null;\n  /**\n   * The callback used to process detected changes into a value stored\n   * in the controller's `value` property.\n   */\n  callback?: ResizeValueCallback<T>;\n  /**\n   * By default the `callback` is called without changes when a target is\n   * observed. This is done to help manage initial state, but this\n   * setup step can be skipped by setting this to true.\n   */\n  skipInitial?: boolean;\n}\n\n/**\n * ResizeController is a ReactiveController that integrates a ResizeObserver\n * with a ReactiveControllerHost's reactive update lifecycle. This is typically\n * a ReactiveElement or LitElement. ResizeObservers can be used to detect\n * size changes to DOM elements.\n *\n * The controller can specify a `target` element to observe and the\n * configuration options to pass to the ResizeObserver. The `observe`\n * method can be called to observe additional elements.\n *\n * When a change is detected, the controller's given `callback` function is\n * used to process the result into a value which is stored on the controller.\n * The controller's `value` is usable during the host's update cycle.\n */\nexport class ResizeController<T = unknown> implements ReactiveController {\n  private _host: ReactiveControllerHost;\n  private _targets = new Set<Element>();\n  private _config?: ResizeObserverOptions;\n  private _observer!: ResizeObserver;\n  private _skipInitial = false;\n  /**\n   * Flag used to help manage calling the `callback` when observe is called\n   * in addition to when a mutation occurs. This is done to help setup initial\n   * state and is performed async by requesting a host update and calling\n   * `handleChanges` once by checking and then resetting this flag.\n   */\n  private _unobservedUpdate = false;\n  /**\n   * The result of processing the observer's changes via the `callback`\n   * function.\n   */\n  value?: T;\n  /**\n   * Function that returns a value processed from the observer's changes.\n   * The result is stored in the `value` property.\n   */\n  callback?: ResizeValueCallback<T>;\n  constructor(\n    host: ReactiveControllerHost & Element,\n    {target, config, callback, skipInitial}: ResizeControllerConfig<T>\n  ) {\n    this._host = host;\n    // Target defaults to `host` unless explicitly `null`.\n    if (target !== null) {\n      this._targets.add(target ?? host);\n    }\n    this._config = config;\n    this._skipInitial = skipInitial ?? this._skipInitial;\n    this.callback = callback;\n    if (isServer) {\n      return;\n    }\n    // Check browser support.\n    if (!window.ResizeObserver) {\n      console.warn(\n        `ResizeController error: browser does not support ResizeObserver.`\n      );\n      return;\n    }\n    this._observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      this.handleChanges(entries);\n      this._host.requestUpdate();\n    });\n    host.addController(this);\n  }\n\n  /**\n   * Process the observer's changes with the controller's `callback`\n   * function to produce a result stored in the `value` property.\n   */\n  protected handleChanges(entries: ResizeObserverEntry[]) {\n    this.value = this.callback?.(entries, this._observer);\n  }\n\n  hostConnected() {\n    for (const target of this._targets) {\n      this.observe(target);\n    }\n  }\n\n  hostDisconnected() {\n    this.disconnect();\n  }\n\n  async hostUpdated() {\n    // Handle initial state as a set of 0 changes. This helps setup initial\n    // state and promotes UI = f(state) since ideally the callback does not\n    // rely on changes.\n    if (!this._skipInitial && this._unobservedUpdate) {\n      this.handleChanges([]);\n    }\n    this._unobservedUpdate = false;\n  }\n\n  /**\n   * Observe the target element. The controller's `target` is automatically\n   * observed when the host connects.\n   * @param target Element to observe\n   */\n  observe(target: Element) {\n    this._targets.add(target);\n    this._observer.observe(target, this._config);\n    this._unobservedUpdate = true;\n    this._host.requestUpdate();\n  }\n\n  /**\n   * Unobserve the target element.\n   * @param target Element to unobserve\n   */\n  unobserve(target: Element) {\n    this._targets.delete(target);\n    this._observer.unobserve(target);\n  }\n\n  /**\n   * Disconnects the observer. This is done automatically when the host\n   * disconnects.\n   */\n  protected disconnect() {\n    this._observer.disconnect();\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\n\nimport {html, LitElement, nothing, PropertyValues, TemplateResult} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {literal, html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {mixinDelegatesAria} from '../../../internal/aria/delegate.js';\nimport {\n  createRequestActivationEvent,\n  ListItem,\n} from '../list-navigation-helpers.js';\n\n/**\n * Supported behaviors for a list item.\n */\nexport type ListItemType = 'text' | 'button' | 'link';\n\n// Separate variable needed for closure.\nconst listItemBaseClass = mixinDelegatesAria(LitElement);\n\n/**\n * @fires request-activation {Event} Requests the list to set `tabindex=0` on\n * the item and focus it. --bubbles --composed\n */\nexport class ListItemEl extends listItemBaseClass implements ListItem {\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Disables the item and makes it non-selectable and non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Sets the behavior of the list item, defaults to \"text\". Change to \"link\" or\n   * \"button\" for interactive items.\n   */\n  @property({reflect: true}) type: ListItemType = 'text';\n\n  /**\n   * READONLY. Sets the `md-list-item` attribute on the element.\n   */\n  @property({type: Boolean, attribute: 'md-list-item', reflect: true})\n  isListItem = true;\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  @property() href = '';\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `target` attribute when `href` is\n   * set.\n   */\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  @query('.list-item') protected readonly listItemRoot!: HTMLElement | null;\n\n  private get isDisabled() {\n    return this.disabled && this.type !== 'link';\n  }\n\n  protected override willUpdate(changed: PropertyValues<ListItemEl>) {\n    if (this.href) {\n      this.type = 'link';\n    }\n\n    super.willUpdate(changed);\n  }\n\n  protected override render() {\n    return this.renderListItem(html`\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n  }\n\n  /**\n   * Renders the root list item.\n   *\n   * @param content the child content of the list item.\n   */\n  protected renderListItem(content: unknown) {\n    const isAnchor = this.type === 'link';\n    let tag: StaticValue;\n    switch (this.type) {\n      case 'link':\n        tag = literal`a`;\n        break;\n      case 'button':\n        tag = literal`button`;\n        break;\n      default:\n      case 'text':\n        tag = literal`li`;\n        break;\n    }\n\n    const isInteractive = this.type !== 'text';\n    // TODO(b/265339866): announce \"button\"/\"link\" inside of a list item. Until\n    // then all are \"listitem\" roles for correct announcement.\n    const target = isAnchor && !!this.target ? this.target : nothing;\n    return staticHtml`\n      <${tag}\n        id=\"item\"\n        tabindex=\"${this.isDisabled || !isInteractive ? -1 : 0}\"\n        ?disabled=${this.isDisabled}\n        role=\"listitem\"\n        aria-selected=${(this as ARIAMixinStrict).ariaSelected || nothing}\n        aria-checked=${(this as ARIAMixinStrict).ariaChecked || nothing}\n        aria-expanded=${(this as ARIAMixinStrict).ariaExpanded || nothing}\n        aria-haspopup=${(this as ARIAMixinStrict).ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        href=${this.href || nothing}\n        target=${target}\n        @focus=${this.onFocus}\n      >${content}</${tag}>\n    `;\n  }\n\n  /**\n   * Handles rendering of the ripple element.\n   */\n  protected renderRipple(): TemplateResult | typeof nothing {\n    if (this.type === 'text') {\n      return nothing;\n    }\n\n    return html` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.isDisabled}></md-ripple>`;\n  }\n\n  /**\n   * Handles rendering of the focus ring.\n   */\n  protected renderFocusRing(): TemplateResult | typeof nothing {\n    if (this.type === 'text') {\n      return nothing;\n    }\n\n    return html` <md-focus-ring\n      @visibility-changed=${this.onFocusRingVisibilityChanged}\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n  }\n\n  protected onFocusRingVisibilityChanged(e: Event) {}\n\n  /**\n   * Classes applied to the list item root.\n   */\n  protected getRenderClasses(): ClassInfo {\n    return {'disabled': this.isDisabled};\n  }\n\n  /**\n   * Handles rendering the headline and supporting text.\n   */\n  protected renderBody() {\n    return html`\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n  }\n\n  protected onFocus() {\n    if (this.tabIndex !== -1) {\n      return;\n    }\n    // Handles the case where the user clicks on the element and then tabs.\n    this.dispatchEvent(createRequestActivationEvent());\n  }\n\n  override focus() {\n    // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n    // work programmatically like in FF and select-option\n    this.listItemRoot?.focus();\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./list/internal/listitem/list-item-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;-webkit-tap-highlight-color:rgba(0,0,0,0);--md-ripple-hover-color: var(--md-list-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-list-item-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-list-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-list-item-pressed-state-layer-opacity, 0.12)}:host(:is([type=button]:not([disabled]),[type=link])){cursor:pointer}md-focus-ring{z-index:1;--md-focus-ring-shape: 8px}a,button,li{background:none;border:none;cursor:inherit;padding:0;margin:0;text-align:unset;text-decoration:none}.list-item{border-radius:inherit;display:flex;flex:1;max-width:inherit;min-width:inherit;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%}.list-item.interactive{cursor:pointer}.list-item.disabled{opacity:var(--md-list-item-disabled-opacity, 0.3);pointer-events:none}[slot=container]{pointer-events:none}md-ripple{border-radius:inherit}md-item{border-radius:inherit;flex:1;height:100%;color:var(--md-list-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));font-family:var(--md-list-item-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));line-height:var(--md-list-item-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));font-weight:var(--md-list-item-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));min-height:var(--md-list-item-one-line-container-height, 56px);padding-top:var(--md-list-item-top-space, 12px);padding-bottom:var(--md-list-item-bottom-space, 12px);padding-inline-start:var(--md-list-item-leading-space, 16px);padding-inline-end:var(--md-list-item-trailing-space, 16px)}md-item[multiline]{min-height:var(--md-list-item-two-line-container-height, 72px)}[slot=supporting-text]{color:var(--md-list-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-list-item-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-list-item-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-list-item-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)))}[slot=trailing-supporting-text]{color:var(--md-list-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-list-item-trailing-supporting-text-font, var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-trailing-supporting-text-size, var(--md-sys-typescale-label-small-size, 0.6875rem));line-height:var(--md-list-item-trailing-supporting-text-line-height, var(--md-sys-typescale-label-small-line-height, 1rem));font-weight:var(--md-list-item-trailing-supporting-text-weight, var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500)))}:is([slot=start],[slot=end])::slotted(*){fill:currentColor}[slot=start]{color:var(--md-list-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}[slot=end]{color:var(--md-list-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}@media(forced-colors: active){.disabled slot{color:GrayText}.list-item.disabled{color:GrayText;opacity:1}}\n`;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement} from 'lit';\nimport {queryAssignedElements} from 'lit/decorators.js';\n\nimport {ListController, NavigableKeys} from './list-controller.js';\nimport {ListItem as SharedListItem} from './list-navigation-helpers.js';\n\nconst NAVIGABLE_KEY_SET = new Set<string>(Object.values(NavigableKeys));\n\ninterface ListItem extends SharedListItem {\n  type: 'text' | 'button' | 'link';\n}\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class List extends LitElement {\n  /**\n   * An array of activatable and disableable list items. Queries every assigned\n   * element that has the `md-list-item` attribute.\n   *\n   * _NOTE:_ This is a shallow, flattened query via\n   * `HTMLSlotElement.queryAssignedElements` and thus will _only_ include direct\n   * children / directly slotted elements.\n   */\n  @queryAssignedElements({flatten: true})\n  protected slotItems!: Array<ListItem | (HTMLElement & {item?: ListItem})>;\n\n  /** @export */\n  get items() {\n    return this.listController.items;\n  }\n\n  private readonly listController = new ListController<ListItem>({\n    isItem: (item: HTMLElement): item is ListItem =>\n      item.hasAttribute('md-list-item'),\n    getPossibleItems: () => this.slotItems,\n    isRtl: () => getComputedStyle(this).direction === 'rtl',\n    deactivateItem: (item) => {\n      item.tabIndex = -1;\n    },\n    activateItem: (item) => {\n      item.tabIndex = 0;\n    },\n    isNavigableKey: (key) => NAVIGABLE_KEY_SET.has(key),\n    isActivatable: (item) => !item.disabled && item.type !== 'text',\n  });\n\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'list';\n      this.addEventListener('keydown', this.listController.handleKeydown);\n    }\n  }\n\n  protected override render() {\n    return html`\n      <slot\n        @deactivate-items=${this.listController.onDeactivateItems}\n        @request-activation=${this.listController.onRequestActivation}\n        @slotchange=${this.listController.onSlotchange}>\n      </slot>\n    `;\n  }\n\n  /**\n   * Activates the next item in the list. If at the end of the list, the first\n   * item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activateNextItem(): ListItem | null {\n    return this.listController.activateNextItem();\n  }\n\n  /**\n   * Activates the previous item in the list. If at the start of the list, the\n   * last item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activatePreviousItem(): ListItem | null {\n    return this.listController.activatePreviousItem();\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./list/internal/list-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{background:var(--md-list-container-color, var(--md-sys-color-surface, #fef7ff));color:unset;display:flex;flex-direction:column;outline:none;padding:8px 0;position:relative}\n`;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>) {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n"],"names":["t","constructor","target","i","config","h","callback","e","skipInitial","o","Set","this","add","l","s","window","ResizeObserver","u","handleChanges","requestUpdate","addController","console","warn","_this$callback","value","call","hostConnected","observe","hostDisconnected","disconnect","hostUpdated","unobserve","delete","listItemBaseClass","mixinDelegatesAria","LitElement","ListItemEl","disabled","type","isListItem","href","isDisabled","willUpdate","changed","super","render","renderListItem","html","_t","_","renderRipple","renderFocusRing","renderBody","content","isAnchor","tag","literal","_t2","_t3","_t4","isInteractive","nothing","staticHtml","_t5","ariaSelected","ariaChecked","ariaExpanded","ariaHasPopup","classMap","getRenderClasses","onFocus","_t6","_t7","onFocusRingVisibilityChanged","_t8","tabIndex","dispatchEvent","createRequestActivationEvent","focus","_this$listItemRoot","listItemRoot","shadowRootOptions","Object","assign","delegatesFocus","__decorate","property","Boolean","reflect","attribute","query","styles","css","MdListItem","ListItem","customElement","NAVIGABLE_KEY_SET","values","NavigableKeys","List","items","listController","ListController","isItem","item","hasAttribute","getPossibleItems","slotItems","isRtl","getComputedStyle","direction","deactivateItem","activateItem","isNavigableKey","key","has","isActivatable","internals","attachInternals","isServer","role","addEventListener","handleKeydown","onDeactivateItems","onRequestActivation","onSlotchange","activateNextItem","activatePreviousItem","queryAssignedElements","flatten","MdList","G","reconnect","deref","Y","Z","get","pause","Promise","resume","n","then","c","arguments","_$C_t","_$Cwt","_$Cq","r","_$CK","find","update","length","isConnected","disconnected","resolve","async","indexOf","setValue","reconnected","m"],"mappings":"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"}