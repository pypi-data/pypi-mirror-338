{"version":3,"file":"4893.d8f1c83196a5ae49.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/compute_state_name.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/entity/ha-entity-state-content-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-relative-time.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-ui-state-content.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity.ts","webpack://knx-frontend/./homeassistant-frontend/src/mixins/subscribe-mixin.ts","webpack://knx-frontend/./homeassistant-frontend/src/state-display/state-display.ts","webpack://knx-frontend/./node_modules/date-fns/parseISO.js","webpack://knx-frontend/../src/directives/join.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateNameFromEntityAttributes = (\n  entityId: string,\n  attributes: Record<string, any>\n): string =>\n  attributes.friendly_name === undefined\n    ? computeObjectId(entityId).replace(/_/g, \" \")\n    : (attributes.friendly_name ?? \"\").toString();\n\nexport const computeStateName = (stateObj: HassEntity): string =>\n  computeStateNameFromEntityAttributes(stateObj.entity_id, stateObj.attributes);\n","import { mdiDrag } from \"@mdi/js\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { repeat } from \"lit/directives/repeat\";\nimport memoizeOne from \"memoize-one\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport {\n  STATE_DISPLAY_SPECIAL_CONTENT,\n  STATE_DISPLAY_SPECIAL_CONTENT_DOMAINS,\n} from \"../../state-display/state-display\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../../types\";\nimport \"../ha-combo-box\";\nimport \"../ha-sortable\";\nimport \"../chips/ha-input-chip\";\nimport \"../chips/ha-chip-set\";\nimport type { HaComboBox } from \"../ha-combo-box\";\n\nconst HIDDEN_ATTRIBUTES = [\n  \"access_token\",\n  \"available_modes\",\n  \"battery_icon\",\n  \"battery_level\",\n  \"code_arm_required\",\n  \"code_format\",\n  \"color_modes\",\n  \"device_class\",\n  \"editable\",\n  \"effect_list\",\n  \"entity_id\",\n  \"entity_picture\",\n  \"event_types\",\n  \"fan_modes\",\n  \"fan_speed_list\",\n  \"friendly_name\",\n  \"frontend_stream_type\",\n  \"has_date\",\n  \"has_time\",\n  \"hvac_modes\",\n  \"icon\",\n  \"id\",\n  \"max_color_temp_kelvin\",\n  \"max_mireds\",\n  \"max_temp\",\n  \"max\",\n  \"min_color_temp_kelvin\",\n  \"min_mireds\",\n  \"min_temp\",\n  \"min\",\n  \"mode\",\n  \"operation_list\",\n  \"options\",\n  \"percentage_step\",\n  \"precipitation_unit\",\n  \"preset_modes\",\n  \"pressure_unit\",\n  \"remaining\",\n  \"sound_mode_list\",\n  \"source_list\",\n  \"state_class\",\n  \"step\",\n  \"supported_color_modes\",\n  \"supported_features\",\n  \"swing_modes\",\n  \"target_temp_step\",\n  \"temperature_unit\",\n  \"token\",\n  \"unit_of_measurement\",\n  \"visibility_unit\",\n  \"wind_speed_unit\",\n];\n\n@customElement(\"ha-entity-state-content-picker\")\nclass HaEntityStatePicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entityId?: string;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean, attribute: \"allow-name\" }) public allowName =\n    false;\n\n  @property() public label?: string;\n\n  @property() public value?: string[] | string;\n\n  @property() public helper?: string;\n\n  @state() private _opened = false;\n\n  @query(\"ha-combo-box\", true) private _comboBox!: HaComboBox;\n\n  protected shouldUpdate(changedProps: PropertyValues) {\n    return !(!changedProps.has(\"_opened\") && this._opened);\n  }\n\n  private options = memoizeOne(\n    (entityId?: string, stateObj?: HassEntity, allowName?: boolean) => {\n      const domain = entityId ? computeDomain(entityId) : undefined;\n      return [\n        {\n          label: this.hass.localize(\"ui.components.state-content-picker.state\"),\n          value: \"state\",\n        },\n        ...(allowName\n          ? [\n              {\n                label: this.hass.localize(\n                  \"ui.components.state-content-picker.name\"\n                ),\n                value: \"name\",\n              },\n            ]\n          : []),\n        {\n          label: this.hass.localize(\n            \"ui.components.state-content-picker.last_changed\"\n          ),\n          value: \"last_changed\",\n        },\n        {\n          label: this.hass.localize(\n            \"ui.components.state-content-picker.last_updated\"\n          ),\n          value: \"last_updated\",\n        },\n        ...(domain\n          ? STATE_DISPLAY_SPECIAL_CONTENT.filter((content) =>\n              STATE_DISPLAY_SPECIAL_CONTENT_DOMAINS[domain]?.includes(content)\n            ).map((content) => ({\n              label: this.hass.localize(\n                `ui.components.state-content-picker.${content}`\n              ),\n              value: content,\n            }))\n          : []),\n        ...Object.keys(stateObj?.attributes ?? {})\n          .filter((a) => !HIDDEN_ATTRIBUTES.includes(a))\n          .map((attribute) => ({\n            value: attribute,\n            label: this.hass.formatEntityAttributeName(stateObj!, attribute),\n          })),\n      ];\n    }\n  );\n\n  private _filter = \"\";\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const value = this._value;\n\n    const stateObj = this.entityId\n      ? this.hass.states[this.entityId]\n      : undefined;\n\n    const options = this.options(this.entityId, stateObj, this.allowName);\n    const optionItems = options.filter(\n      (option) => !this._value.includes(option.value)\n    );\n\n    return html`\n      ${value?.length\n        ? html`\n            <ha-sortable\n              no-style\n              @item-moved=${this._moveItem}\n              .disabled=${this.disabled}\n              handle-selector=\"button.primary.action\"\n            >\n              <ha-chip-set>\n                ${repeat(\n                  this._value,\n                  (item) => item,\n                  (item, idx) => {\n                    const label =\n                      options.find((option) => option.value === item)?.label ||\n                      item;\n                    return html`\n                      <ha-input-chip\n                        .idx=${idx}\n                        @remove=${this._removeItem}\n                        .label=${label}\n                        selected\n                      >\n                        <ha-svg-icon slot=\"icon\" .path=${mdiDrag}></ha-svg-icon>\n                        ${label}\n                      </ha-input-chip>\n                    `;\n                  }\n                )}\n              </ha-chip-set>\n            </ha-sortable>\n          `\n        : nothing}\n\n      <ha-combo-box\n        item-value-path=\"value\"\n        item-label-path=\"label\"\n        .hass=${this.hass}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required && !value.length}\n        .value=${\"\"}\n        .items=${optionItems}\n        allow-custom-value\n        @filter-changed=${this._filterChanged}\n        @value-changed=${this._comboBoxValueChanged}\n        @opened-changed=${this._openedChanged}\n      ></ha-combo-box>\n    `;\n  }\n\n  private get _value() {\n    return !this.value ? [] : ensureArray(this.value);\n  }\n\n  private _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n    this._comboBox.filteredItems = this._comboBox.items;\n  }\n\n  private _filterChanged(ev?: CustomEvent): void {\n    this._filter = ev?.detail.value || \"\";\n\n    const filteredItems = this._comboBox.items?.filter((item) => {\n      const label = item.label || item.value;\n      return label.toLowerCase().includes(this._filter?.toLowerCase());\n    });\n\n    if (this._filter) {\n      filteredItems?.unshift({ label: this._filter, value: this._filter });\n    }\n\n    this._comboBox.filteredItems = filteredItems;\n  }\n\n  private async _moveItem(ev: CustomEvent) {\n    ev.stopPropagation();\n    const { oldIndex, newIndex } = ev.detail;\n    const value = this._value;\n    const newValue = value.concat();\n    const element = newValue.splice(oldIndex, 1)[0];\n    newValue.splice(newIndex, 0, element);\n    this._setValue(newValue);\n    await this.updateComplete;\n    this._filterChanged();\n  }\n\n  private async _removeItem(ev) {\n    ev.stopPropagation();\n    const value: string[] = [...this._value];\n    value.splice(ev.target.idx, 1);\n    this._setValue(value);\n    await this.updateComplete;\n    this._filterChanged();\n  }\n\n  private _comboBoxValueChanged(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n\n    if (this.disabled || newValue === \"\") {\n      return;\n    }\n\n    const currentValue = this._value;\n\n    if (currentValue.includes(newValue)) {\n      return;\n    }\n\n    setTimeout(() => {\n      this._filterChanged();\n      this._comboBox.setInputValue(\"\");\n    }, 0);\n\n    this._setValue([...currentValue, newValue]);\n  }\n\n  private _setValue(value: string[]) {\n    const newValue =\n      value.length === 0 ? undefined : value.length === 1 ? value[0] : value;\n    this.value = newValue;\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static styles = css`\n    :host {\n      position: relative;\n    }\n\n    ha-chip-set {\n      padding: 8px 0;\n    }\n\n    .sortable-fallback {\n      display: none;\n      opacity: 0;\n    }\n\n    .sortable-ghost {\n      opacity: 0.4;\n    }\n\n    .sortable-drag {\n      cursor: grabbing;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-state-content-picker\": HaEntityStatePicker;\n  }\n}\n","import { parseISO } from \"date-fns\";\nimport type { PropertyValues } from \"lit\";\nimport { ReactiveElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { relativeTime } from \"../common/datetime/relative_time\";\nimport { capitalizeFirstLetter } from \"../common/string/capitalize-first-letter\";\nimport type { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-relative-time\")\nclass HaRelativeTime extends ReactiveElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public datetime?: string | Date;\n\n  @property({ type: Boolean }) public capitalize = false;\n\n  private _interval?: number;\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._clearInterval();\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.datetime) {\n      this._startInterval();\n    }\n  }\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._updateRelative();\n  }\n\n  protected update(changedProps: PropertyValues) {\n    super.update(changedProps);\n    this._updateRelative();\n  }\n\n  private _clearInterval(): void {\n    if (this._interval) {\n      window.clearInterval(this._interval);\n      this._interval = undefined;\n    }\n  }\n\n  private _startInterval(): void {\n    this._clearInterval();\n\n    // update every 60 seconds\n    this._interval = window.setInterval(() => this._updateRelative(), 60000);\n  }\n\n  private _updateRelative(): void {\n    if (!this.datetime) {\n      this.innerHTML = this.hass.localize(\"ui.components.relative_time.never\");\n    } else {\n      const date =\n        typeof this.datetime === \"string\"\n          ? parseISO(this.datetime)\n          : this.datetime;\n\n      const relTime = relativeTime(date, this.hass.locale);\n      this.innerHTML = this.capitalize\n        ? capitalizeFirstLetter(relTime)\n        : relTime;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-relative-time\": HaRelativeTime;\n  }\n}\n","import { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { UiStateContentSelector } from \"../../data/selector\";\nimport { SubscribeMixin } from \"../../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../entity/ha-entity-state-content-picker\";\n\n@customElement(\"ha-selector-ui_state_content\")\nexport class HaSelectorUiStateContent extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: UiStateContentSelector;\n\n  @property() public value?: string | string[];\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    filter_entity?: string;\n  };\n\n  protected render() {\n    return html`\n      <ha-entity-state-content-picker\n        .hass=${this.hass}\n        .entityId=${this.selector.ui_state_content?.entity_id ||\n        this.context?.filter_entity}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .allowName=${this.selector.ui_state_content?.allow_name}\n      ></ha-entity-state-content-picker>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-ui_state_content\": HaSelectorUiStateContent;\n  }\n}\n","import { arrayLiteralIncludes } from \"../common/array/literal-includes\";\n\nexport const UNAVAILABLE = \"unavailable\";\nexport const UNKNOWN = \"unknown\";\nexport const ON = \"on\";\nexport const OFF = \"off\";\n\nexport const UNAVAILABLE_STATES = [UNAVAILABLE, UNKNOWN] as const;\nexport const OFF_STATES = [UNAVAILABLE, UNKNOWN, OFF] as const;\n\nexport const isUnavailableState = arrayLiteralIncludes(UNAVAILABLE_STATES);\nexport const isOffState = arrayLiteralIncludes(OFF_STATES);\n","import type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport type { PropertyValues, ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nexport interface HassSubscribeElement {\n  hassSubscribe(): UnsubscribeFunc[];\n}\n\nexport const SubscribeMixin = <T extends Constructor<ReactiveElement>>(\n  superClass: T\n) => {\n  class SubscribeClass extends superClass {\n    @property({ attribute: false }) public hass?: HomeAssistant;\n\n    // we wait with subscribing till these properties are set on the host element\n    protected hassSubscribeRequiredHostProps?: string[];\n\n    private __unsubs?: (UnsubscribeFunc | Promise<UnsubscribeFunc>)[];\n\n    public connectedCallback() {\n      super.connectedCallback();\n      this._checkSubscribed();\n    }\n\n    public disconnectedCallback() {\n      super.disconnectedCallback();\n      if (this.__unsubs) {\n        while (this.__unsubs.length) {\n          const unsub = this.__unsubs.pop()!;\n          if (unsub instanceof Promise) {\n            unsub.then((unsubFunc) => unsubFunc());\n          } else {\n            unsub();\n          }\n        }\n        this.__unsubs = undefined;\n      }\n    }\n\n    protected updated(changedProps: PropertyValues) {\n      super.updated(changedProps);\n      if (changedProps.has(\"hass\")) {\n        this._checkSubscribed();\n        return;\n      }\n      if (!this.hassSubscribeRequiredHostProps) {\n        return;\n      }\n      for (const key of changedProps.keys()) {\n        if (this.hassSubscribeRequiredHostProps.includes(key as string)) {\n          this._checkSubscribed();\n          return;\n        }\n      }\n    }\n\n    protected hassSubscribe(): (UnsubscribeFunc | Promise<UnsubscribeFunc>)[] {\n      return [];\n    }\n\n    private _checkSubscribed(): void {\n      if (\n        this.__unsubs !== undefined ||\n        !(this as unknown as Element).isConnected ||\n        this.hass === undefined ||\n        this.hassSubscribeRequiredHostProps?.some(\n          (prop) => this[prop] === undefined\n        )\n      ) {\n        return;\n      }\n      this.__unsubs = this.hassSubscribe();\n    }\n  }\n  return SubscribeClass;\n};\n","import type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { TemplateResult } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { join } from \"lit/directives/join\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { computeStateDomain } from \"../common/entity/compute_state_domain\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport \"../components/ha-relative-time\";\nimport { isUnavailableState } from \"../data/entity\";\nimport { SENSOR_DEVICE_CLASS_TIMESTAMP } from \"../data/sensor\";\nimport type { UpdateEntity } from \"../data/update\";\nimport { computeUpdateStateDisplay } from \"../data/update\";\nimport \"../panels/lovelace/components/hui-timestamp-display\";\nimport type { HomeAssistant } from \"../types\";\n\nconst TIMESTAMP_STATE_DOMAINS = [\"button\", \"input_button\", \"scene\"];\n\nexport const STATE_DISPLAY_SPECIAL_CONTENT = [\n  \"remaining_time\",\n  \"install_status\",\n] as const;\n\n// Special handling of state attributes per domain\nexport const STATE_DISPLAY_SPECIAL_CONTENT_DOMAINS: Record<\n  string,\n  (typeof STATE_DISPLAY_SPECIAL_CONTENT)[number][]\n> = {\n  timer: [\"remaining_time\"],\n  update: [\"install_status\"],\n};\n\n// Attributes that should not be shown if their value is 0 */\nexport const HIDDEN_ZERO_ATTRIBUTES_DOMAINS: Record<string, string[]> = {\n  valve: [\"current_position\"],\n  cover: [\"current_position\"],\n  fan: [\"percentage\"],\n  light: [\"brightness\"],\n};\n\ntype StateContent = string | string[];\n\nexport const DEFAULT_STATE_CONTENT_DOMAINS: Record<string, StateContent> = {\n  climate: [\"state\", \"current_temperature\"],\n  cover: [\"state\", \"current_position\"],\n  fan: \"percentage\",\n  humidifier: [\"state\", \"current_humidity\"],\n  light: \"brightness\",\n  timer: \"remaining_time\",\n  update: \"install_status\",\n  valve: [\"state\", \"current_position\"],\n};\n\n@customElement(\"state-display\")\nclass StateDisplay extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  @property({ attribute: false }) public content?: StateContent;\n\n  @property({ attribute: false }) public name?: string;\n\n  @property({ type: Boolean, attribute: \"dash-unavailable\" })\n  public dashUnavailable?: boolean;\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  private get _content(): StateContent {\n    const domain = computeStateDomain(this.stateObj);\n    return this.content ?? DEFAULT_STATE_CONTENT_DOMAINS[domain] ?? \"state\";\n  }\n\n  private _computeContent(\n    content: string\n  ): TemplateResult<1> | string | undefined {\n    const stateObj = this.stateObj;\n    const domain = computeStateDomain(stateObj);\n\n    if (content === \"state\") {\n      if (this.dashUnavailable && isUnavailableState(stateObj.state)) {\n        return \"—\";\n      }\n      if (\n        (stateObj.attributes.device_class === SENSOR_DEVICE_CLASS_TIMESTAMP ||\n          TIMESTAMP_STATE_DOMAINS.includes(domain)) &&\n        !isUnavailableState(stateObj.state)\n      ) {\n        return html`\n          <hui-timestamp-display\n            .hass=${this.hass}\n            .ts=${new Date(stateObj.state)}\n            format=\"relative\"\n            capitalize\n          ></hui-timestamp-display>\n        `;\n      }\n\n      return this.hass!.formatEntityState(stateObj);\n    }\n    if (content === \"name\") {\n      return html`${this.name || computeStateName(stateObj)}`;\n    }\n\n    let relativeDateTime: string | undefined;\n\n    // Check last-changed for backwards compatibility\n    if (content === \"last_changed\" || content === \"last-changed\") {\n      relativeDateTime = stateObj.last_changed;\n    }\n    // Check last_updated for backwards compatibility\n    if (content === \"last_updated\" || content === \"last-updated\") {\n      relativeDateTime = stateObj.last_updated;\n    }\n\n    if (\n      content === \"last_triggered\" ||\n      (domain === \"calendar\" &&\n        (content === \"start_time\" || content === \"end_time\")) ||\n      (domain === \"sun\" &&\n        (content === \"next_dawn\" ||\n          content === \"next_dusk\" ||\n          content === \"next_midnight\" ||\n          content === \"next_noon\" ||\n          content === \"next_rising\" ||\n          content === \"next_setting\"))\n    ) {\n      relativeDateTime = stateObj.attributes[content];\n    }\n\n    if (relativeDateTime) {\n      return html`\n        <ha-relative-time\n          .hass=${this.hass}\n          .datetime=${relativeDateTime}\n          capitalize\n        ></ha-relative-time>\n      `;\n    }\n\n    const specialContent = (STATE_DISPLAY_SPECIAL_CONTENT_DOMAINS[domain] ??\n      []) as string[];\n\n    if (specialContent.includes(content)) {\n      if (content === \"install_status\") {\n        return html`\n          ${computeUpdateStateDisplay(stateObj as UpdateEntity, this.hass!)}\n        `;\n      }\n      if (content === \"remaining_time\") {\n        import(\"./ha-timer-remaining-time\");\n        return html`\n          <ha-timer-remaining-time\n            .hass=${this.hass}\n            .stateObj=${stateObj}\n          ></ha-timer-remaining-time>\n        `;\n      }\n    }\n\n    const attribute = stateObj.attributes[content];\n\n    if (\n      attribute == null ||\n      (HIDDEN_ZERO_ATTRIBUTES_DOMAINS[domain]?.includes(content) && !attribute)\n    ) {\n      return undefined;\n    }\n    return this.hass!.formatEntityAttributeValue(stateObj, content);\n  }\n\n  protected render() {\n    const stateObj = this.stateObj;\n    const contents = ensureArray(this._content);\n\n    const values = contents\n      .map((content) => this._computeContent(content))\n      .filter(Boolean);\n\n    if (!values.length) {\n      return html`${this.hass!.formatEntityState(stateObj)}`;\n    }\n\n    return join(values, \" ⸱ \");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-display\": StateDisplay;\n  }\n}\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the values in `items` interleaved with the\n * `joiner` value.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${join(items, html`<span class=\"separator\">|</span>`)}\n *   `;\n * }\n */\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: (index: number) => J\n): Iterable<I | J>;\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: J\n): Iterable<I | J>;\nexport function* join<I, J>(items: Iterable<I> | undefined, joiner: J) {\n  const isFunction = typeof joiner === 'function';\n  if (items !== undefined) {\n    let i = -1;\n    for (const value of items) {\n      if (i > -1) {\n        yield isFunction ? joiner(i) : joiner;\n      }\n      i++;\n      yield value;\n    }\n  }\n}\n"],"names":["computeStateName","stateObj","computeStateNameFromEntityAttributes","entityId","entity_id","undefined","attributes","friendly_name","computeObjectId","replace","toString","HIDDEN_ATTRIBUTES","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","state","query","changedProps","has","this","_opened","memoizeOne","allowName","domain","computeDomain","label","hass","localize","STATE_DISPLAY_SPECIAL_CONTENT","content","STATE_DISPLAY_SPECIAL_CONTENT_DOMAINS","includes","map","Object","keys","filter","a","formatEntityAttributeName","nothing","_value","states","options","optionItems","option","html","length","_moveItem","disabled","repeat","item","idx","find","_removeItem","mdiDrag","helper","required","_filterChanged","_comboBoxValueChanged","_openedChanged","ensureArray","ev","detail","_comboBox","filteredItems","items","_filter","toLowerCase","unshift","stopPropagation","oldIndex","newIndex","newValue","concat","element","splice","_setValue","updateComplete","target","currentValue","setTimeout","setInputValue","fireEvent","static","css","LitElement","_ReactiveElement","HaRelativeTime","_superPropGet","_clearInterval","datetime","_startInterval","_updateRelative","_interval","window","clearInterval","setInterval","date","parseISO","relTime","relativeTime","locale","innerHTML","capitalize","capitalizeFirstLetter","ReactiveElement","HaSelectorUiStateContent","_SubscribeMixin","selector","ui_state_content","context","filter_entity","allow_name","SubscribeMixin","UNAVAILABLE","UNKNOWN","ON","OFF","UNAVAILABLE_STATES","OFF_STATES","isUnavailableState","arrayLiteralIncludes","superClass","_superClass","SubscribeClass","_checkSubscribed","__unsubs","unsub","pop","Promise","then","unsubFunc","hassSubscribeRequiredHostProps","isConnected","some","prop","hassSubscribe","TIMESTAMP_STATE_DOMAINS","timer","update","HIDDEN_ZERO_ATTRIBUTES_DOMAINS","valve","cover","fan","light","DEFAULT_STATE_CONTENT_DOMAINS","climate","humidifier","computeStateDomain","dashUnavailable","device_class","SENSOR_DEVICE_CLASS_TIMESTAMP","formatEntityState","Date","name","relativeDateTime","last_changed","last_updated","computeUpdateStateDisplay","formatEntityAttributeValue","values","_content","_computeContent","join","argument","invalidDate","constructFrom","in","NaN","additionalDigits","dateStrings","dateString","array","split","patterns","dateTimeDelimiter","timeString","test","timeZoneDelimiter","substr","token","timezone","exec","time","splitDateString","parseYearResult","regex","RegExp","captures","match","year","restDateString","parseInt","century","slice","parseYear","dateRegex","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","parseDate","isNaN","timestamp","offset","timeRegex","hours","parseTimeUnit","minutes","seconds","validateTime","millisecondsInHour","millisecondsInMinute","parseTime","tmpDate","result","toDate","setFullYear","getUTCFullYear","getUTCMonth","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","sign","_hours","validateTimezone","parseTimezone","parseFloat","o","t","f","i","n"],"mappings":"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"}