{"version":3,"file":"9857.db455ffb8e4c1afb.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_datetime-form.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-radio\";\nimport type { HaRadio } from \"../../../../components/ha-radio\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputDateTime } from \"../../../../data/input_datetime\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_datetime-form\")\nclass HaInputDateTimeForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputDateTime;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _mode!: \"date\" | \"time\" | \"datetime\";\n\n  set item(item: InputDateTime) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._mode =\n        item.has_time && item.has_date\n          ? \"datetime\"\n          : item.has_time\n            ? \"time\"\n            : \"date\";\n      this._item.has_date =\n        !item.has_date && !item.has_time ? true : item.has_date;\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._mode = \"date\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <br />\n        ${this.hass.localize(\"ui.dialogs.helper_settings.input_datetime.mode\")}:\n        <br />\n\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.date\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"date\"\n            .checked=${this._mode === \"date\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.time\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"time\"\n            .checked=${this._mode === \"time\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.datetime\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"datetime\"\n            .checked=${this._mode === \"datetime\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    const mode = (ev.target as HaRadio).value;\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._item,\n        has_time: [\"time\", \"datetime\"].includes(mode),\n        has_date: [\"date\", \"datetime\"].includes(mode),\n      },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_datetime-form\": HaInputDateTimeForm;\n  }\n}\n"],"names":["_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","state","item","this","_item","_name","name","_icon","icon","_mode","has_time","has_date","updateComplete","then","shadowRoot","querySelector","focus","hass","html","_valueChanged","localize","_modeChanged","nothing","ev","mode","target","fireEvent","includes","new","stopPropagation","configValue","detail","newValue","static","haStyle","css","LitElement"],"mappings":"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"}