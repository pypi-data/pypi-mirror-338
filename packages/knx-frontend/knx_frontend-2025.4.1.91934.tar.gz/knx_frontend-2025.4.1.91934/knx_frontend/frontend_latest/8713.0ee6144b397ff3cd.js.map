{"version":3,"file":"8713.0ee6144b397ff3cd.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-tts-voice.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tts-voice-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/tts.ts"],"sourcesContent":["import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { TTSVoiceSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-tts-voice-picker\";\n\n@customElement(\"ha-selector-tts_voice\")\nexport class HaTTSVoiceSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: TTSVoiceSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    language?: string;\n    engineId?: string;\n  };\n\n  protected render() {\n    return html`<ha-tts-voice-picker\n      .hass=${this.hass}\n      .value=${this.value}\n      .label=${this.label}\n      .helper=${this.helper}\n      .language=${this.selector.tts_voice?.language || this.context?.language}\n      .engineId=${this.selector.tts_voice?.engineId || this.context?.engineId}\n      .disabled=${this.disabled}\n      .required=${this.required}\n    ></ha-tts-voice-picker>`;\n  }\n\n  static styles = css`\n    ha-tts-picker {\n      width: 100%;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-tts_voice\": HaTTSVoiceSelector;\n  }\n}\n","import type { PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { debounce } from \"../common/util/debounce\";\nimport type { TTSVoice } from \"../data/tts\";\nimport { listTTSVoices } from \"../data/tts\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nimport type { HaSelect } from \"./ha-select\";\n\nconst NONE = \"__NONE_OPTION__\";\n\n@customElement(\"ha-tts-voice-picker\")\nexport class HaTTSVoicePicker extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property({ attribute: false }) public engineId?: string;\n\n  @property() public language?: string;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() _voices?: TTSVoice[] | null;\n\n  @query(\"ha-select\") private _select?: HaSelect;\n\n  protected render() {\n    if (!this._voices) {\n      return nothing;\n    }\n    const value =\n      this.value ?? (this.required ? this._voices[0]?.voice_id : NONE);\n    return html`\n      <ha-select\n        .label=${this.label ||\n        this.hass!.localize(\"ui.components.tts-voice-picker.voice\")}\n        .value=${value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n      >\n        ${!this.required\n          ? html`<ha-list-item .value=${NONE}>\n              ${this.hass!.localize(\"ui.components.tts-voice-picker.none\")}\n            </ha-list-item>`\n          : nothing}\n        ${this._voices.map(\n          (voice) =>\n            html`<ha-list-item .value=${voice.voice_id}>\n              ${voice.name}\n            </ha-list-item>`\n        )}\n      </ha-select>\n    `;\n  }\n\n  protected willUpdate(changedProperties: PropertyValues<this>): void {\n    super.willUpdate(changedProperties);\n    if (!this.hasUpdated) {\n      this._updateVoices();\n    } else if (\n      changedProperties.has(\"language\") ||\n      changedProperties.has(\"engineId\")\n    ) {\n      this._debouncedUpdateVoices();\n    }\n  }\n\n  private _debouncedUpdateVoices = debounce(() => this._updateVoices(), 500);\n\n  private async _updateVoices() {\n    if (!this.engineId || !this.language) {\n      this._voices = undefined;\n      return;\n    }\n    this._voices = (\n      await listTTSVoices(this.hass, this.engineId, this.language)\n    ).voices;\n\n    if (!this.value) {\n      return;\n    }\n\n    if (\n      !this._voices ||\n      !this._voices.find((voice) => voice.voice_id === this.value)\n    ) {\n      this.value = undefined;\n      fireEvent(this, \"value-changed\", { value: this.value });\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues<this>) {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has(\"_voices\") &&\n      this._select?.value !== this.value\n    ) {\n      this._select?.layoutOptions();\n      fireEvent(this, \"value-changed\", { value: this._select?.value });\n    }\n  }\n\n  static styles = css`\n    ha-select {\n      width: 100%;\n    }\n  `;\n\n  private _changed(ev): void {\n    const target = ev.target as HaSelect;\n    if (\n      !this.hass ||\n      target.value === \"\" ||\n      target.value === this.value ||\n      (this.value === undefined && target.value === NONE)\n    ) {\n      return;\n    }\n    this.value = target.value === NONE ? undefined : target.value;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tts-voice-picker\": HaTTSVoicePicker;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\nexport interface TTSEngine {\n  engine_id: string;\n  supported_languages?: string[];\n  name?: string;\n  deprecated: boolean;\n}\n\nexport interface TTSVoice {\n  voice_id: string;\n  name: string;\n}\n\nexport const convertTextToSpeech = (\n  hass: HomeAssistant,\n  data: {\n    platform: string;\n    message: string;\n    cache?: boolean;\n    language?: string;\n    options?: Record<string, unknown>;\n  }\n) => hass.callApi<{ url: string; path: string }>(\"POST\", \"tts_get_url\", data);\n\nconst TTS_MEDIA_SOURCE_PREFIX = \"media-source://tts/\";\n\nexport const isTTSMediaSource = (mediaContentId: string) =>\n  mediaContentId.startsWith(TTS_MEDIA_SOURCE_PREFIX);\n\nexport const getProviderFromTTSMediaSource = (mediaContentId: string) =>\n  mediaContentId.substring(TTS_MEDIA_SOURCE_PREFIX.length);\n\nexport const listTTSEngines = (\n  hass: HomeAssistant,\n  language?: string,\n  country?: string\n): Promise<{ providers: TTSEngine[] }> =>\n  hass.callWS({\n    type: \"tts/engine/list\",\n    language,\n    country,\n  });\n\nexport const getTTSEngine = (\n  hass: HomeAssistant,\n  engine_id: string\n): Promise<{ provider: TTSEngine }> =>\n  hass.callWS({\n    type: \"tts/engine/get\",\n    engine_id,\n  });\n\nexport const listTTSVoices = (\n  hass: HomeAssistant,\n  engine_id: string,\n  language: string\n): Promise<{ voices: TTSVoice[] | null }> =>\n  hass.callWS({\n    type: \"tts/engine/voices\",\n    engine_id,\n    language,\n  });\n"],"names":["HaTTSVoiceSelector","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","html","this","hass","label","helper","selector","tts_voice","language","context","engineId","disabled","required","static","css","LitElement","NONE","HaTTSVoicePicker","reflect","state","query","_voices","nothing","voice_id","localize","_changed","stopPropagation","map","voice","name","changedProperties","_superPropGet","hasUpdated","has","_debouncedUpdateVoices","_updateVoices","debounce","listTTSVoices","voices","find","undefined","fireEvent","_select","layoutOptions","ev","target","convertTextToSpeech","data","callApi","TTS_MEDIA_SOURCE_PREFIX","isTTSMediaSource","mediaContentId","startsWith","getProviderFromTTSMediaSource","substring","listTTSEngines","country","callWS","getTTSEngine","engine_id"],"mappings":"qLAMA,IACaA,GAAkBC,EAAAA,EAAAA,GAAA,EAD9BC,EAAAA,EAAAA,IAAc,2BAAwB,SAAAC,EAAAC,GAuCtC,OAAAC,EAvCD,cAC+BD,EAAoBE,WAAAA,IAAAC,GAAA,SAAAA,GAAAJ,EAAA,QAApBK,EAAA,EAAAC,KAAA,QAAAC,WAAA,EAC5BC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,OAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,WAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,OAAUE,IAAA,SAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAK,IAAAL,KAAA,QAAAC,WAAA,EAEnDC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAI,IAAAL,KAAA,QAAAC,WAAA,EAElDC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,UAAAC,WAAA,IAAAL,KAAA,SAAAI,IAAA,SAAAC,MAK/B,WACE,OAAOG,EAAAA,EAAI;cACDC,KAAKC;eACJD,KAAKJ;eACLI,KAAKE;gBACJF,KAAKG;kBACHH,KAAKI,SAASC,WAAWC,UAAYN,KAAKO,SAASD;kBACnDN,KAAKI,SAASC,WAAWG,UAAYR,KAAKO,SAASC;kBACnDR,KAAKS;kBACLT,KAAKU;4BAErB,GAAC,CAAAnB,KAAA,QAAAoB,QAAA,EAAAhB,IAAA,SAAAC,KAAAA,GAAA,OAEegB,EAAAA,EAAG;;;;GAIlB,OArCqCC,EAAAA,G,oICMxC,MAAMC,EAAO,mBAGgB/B,EAAAA,EAAAA,GAAA,EAD5BC,EAAAA,EAAAA,IAAc,yBAAsB,SAAAC,EAAAC,GAArC,MACa6B,UAAgB7B,EAAoBE,WAAAA,IAAAC,GAAA,SAAAA,GAAAJ,EAAA,OAsHhD,OAAAE,EAtHY4B,EAAgBzB,EAAA,EAAAC,KAAA,QAAAC,WAAA,EAC1BC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,WAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,OAAUE,IAAA,WAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,OAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,QAASkB,SAAS,KAAOrB,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAK,IAAAL,KAAA,QAAAC,WAAA,EAElEC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAK,IAAAL,KAAA,QAAAC,WAAA,EAEnDyB,EAAAA,EAAAA,OAAOtB,IAAA,UAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEP0B,EAAAA,EAAAA,IAAM,cAAYvB,IAAA,UAAAC,WAAA,IAAAL,KAAA,SAAAI,IAAA,SAAAC,MAEnB,WACE,IAAKI,KAAKmB,QACR,OAAOC,EAAAA,GAET,MAAMxB,EACJI,KAAKJ,QAAUI,KAAKU,SAAWV,KAAKmB,QAAQ,IAAIE,SAAWP,GAC7D,OAAOf,EAAAA,EAAI;;iBAEEC,KAAKE,OACdF,KAAKC,KAAMqB,SAAS;iBACX1B;oBACGI,KAAKU;oBACLV,KAAKS;oBACLT,KAAKuB;kBACPC,EAAAA;;;;UAIPxB,KAAKU,SAIJU,EAAAA,GAHArB,EAAAA,EAAI,wBAAwBe;gBACxBd,KAAKC,KAAMqB,SAAS;;UAG1BtB,KAAKmB,QAAQM,KACZC,GACC3B,EAAAA,EAAI,wBAAwB2B,EAAML;gBAC9BK,EAAMC;;;KAKpB,GAAC,CAAApC,KAAA,SAAAI,IAAA,aAAAC,MAED,SAAqBgC,IACnBC,EAAAA,EAAAA,GArDSd,EAAgB,oBAqDzBc,CArDyB,CAqDRD,IACZ5B,KAAK8B,YAGRF,EAAkBG,IAAI,aACtBH,EAAkBG,IAAI,cAEtB/B,KAAKgC,yBALLhC,KAAKiC,eAOT,GAAC,CAAA1C,KAAA,QAAAI,IAAA,yBAAAC,KAAAA,GAAA,OAEgCsC,EAAAA,EAAAA,IAAS,IAAMlC,KAAKiC,iBAAiB,IAAI,IAAA1C,KAAA,SAAAI,IAAA,gBAAAC,MAE1E,iBACOI,KAAKQ,UAAaR,KAAKM,UAI5BN,KAAKmB,eACGgB,EAAAA,EAAAA,IAAcnC,KAAKC,KAAMD,KAAKQ,SAAUR,KAAKM,WACnD8B,OAEGpC,KAAKJ,QAKPI,KAAKmB,SACLnB,KAAKmB,QAAQkB,MAAMX,GAAUA,EAAML,WAAarB,KAAKJ,UAEtDI,KAAKJ,WAAQ0C,GACbC,EAAAA,EAAAA,GAAUvC,KAAM,gBAAiB,CAAEJ,MAAOI,KAAKJ,WAhB/CI,KAAKmB,aAAUmB,CAkBnB,GAAC,CAAA/C,KAAA,SAAAI,IAAA,UAAAC,MAED,SAAkBgC,IAChBC,EAAAA,EAAAA,GAzFSd,EAAgB,iBAyFzBc,CAzFyB,CAyFXD,IAEZA,EAAkBG,IAAI,YACtB/B,KAAKwC,SAAS5C,QAAUI,KAAKJ,QAE7BI,KAAKwC,SAASC,iBACdF,EAAAA,EAAAA,GAAUvC,KAAM,gBAAiB,CAAEJ,MAAOI,KAAKwC,SAAS5C,QAE5D,GAAC,CAAAL,KAAA,QAAAoB,QAAA,EAAAhB,IAAA,SAAAC,KAAAA,GAAA,OAEegB,EAAAA,EAAG;;;;GAIlB,IAAArB,KAAA,SAAAI,IAAA,WAAAC,MAED,SAAiB8C,GACf,MAAMC,EAASD,EAAGC,QAEf3C,KAAKC,MACW,KAAjB0C,EAAO/C,OACP+C,EAAO/C,QAAUI,KAAKJ,YACN0C,IAAftC,KAAKJ,OAAuB+C,EAAO/C,QAAUkB,IAIhDd,KAAKJ,MAAQ+C,EAAO/C,QAAUkB,OAAOwB,EAAYK,EAAO/C,OACxD2C,EAAAA,EAAAA,GAAUvC,KAAM,gBAAiB,CAAEJ,MAAOI,KAAKJ,QACjD,IAAC,GArHmCiB,EAAAA,G,qFCF/B,MAAM+B,EAAsBA,CACjC3C,EACA4C,IAOG5C,EAAK6C,QAAuC,OAAQ,cAAeD,GAElEE,EAA0B,sBAEnBC,EAAoBC,GAC/BA,EAAeC,WAAWH,GAEfI,EAAiCF,GAC5CA,EAAeG,UAAUL,IAEdM,EAAiBA,CAC5BpD,EACAK,EACAgD,IAEArD,EAAKsD,OAAO,CACV1D,KAAM,kBACNS,WACAgD,YAGSE,EAAeA,CAC1BvD,EACAwD,IAEAxD,EAAKsD,OAAO,CACV1D,KAAM,iBACN4D,cAGStB,EAAgBA,CAC3BlC,EACAwD,EACAnD,IAEAL,EAAKsD,OAAO,CACV1D,KAAM,oBACN4D,YACAnD,Y"}