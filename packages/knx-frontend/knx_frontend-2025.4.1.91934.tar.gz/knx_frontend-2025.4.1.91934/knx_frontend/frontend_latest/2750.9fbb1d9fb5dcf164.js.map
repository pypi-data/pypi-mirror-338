{"version":3,"file":"2750.9fbb1d9fb5dcf164.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/state_active.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { isUnavailableState, OFF, UNAVAILABLE } from \"../../data/entity\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport function stateActive(stateObj: HassEntity, state?: string): boolean {\n  const domain = computeDomain(stateObj.entity_id);\n  const compareState = state !== undefined ? state : stateObj?.state;\n\n  if ([\"button\", \"event\", \"input_button\", \"scene\"].includes(domain)) {\n    return compareState !== UNAVAILABLE;\n  }\n\n  if (isUnavailableState(compareState)) {\n    return false;\n  }\n\n  // The \"off\" check is relevant for most domains, but there are exceptions\n  // such as \"alert\" where \"off\" is still a somewhat active state and\n  // therefore gets a custom color and \"idle\" is instead the state that\n  // matches what most other domains consider inactive.\n  if (compareState === OFF && domain !== \"alert\") {\n    return false;\n  }\n\n  // Custom cases\n  switch (domain) {\n    case \"alarm_control_panel\":\n      return compareState !== \"disarmed\";\n    case \"alert\":\n      // \"on\" and \"off\" are active, as \"off\" just means alert was acknowledged but is still active\n      return compareState !== \"idle\";\n    case \"cover\":\n      return compareState !== \"closed\";\n    case \"device_tracker\":\n    case \"person\":\n      return compareState !== \"not_home\";\n    case \"lawn_mower\":\n      return [\"mowing\", \"error\"].includes(compareState);\n    case \"lock\":\n      return compareState !== \"locked\";\n    case \"media_player\":\n      return compareState !== \"standby\";\n    case \"vacuum\":\n      return ![\"idle\", \"docked\", \"paused\"].includes(compareState);\n    case \"valve\":\n      return compareState !== \"closed\";\n    case \"plant\":\n      return compareState === \"problem\";\n    case \"group\":\n      return [\"on\", \"home\", \"open\", \"locked\", \"problem\"].includes(compareState);\n    case \"timer\":\n      return compareState === \"active\";\n    case \"camera\":\n      return compareState === \"streaming\";\n  }\n\n  return true;\n}\n","import type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement, ReactiveElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { dynamicElement } from \"../../common/dom/dynamic-element-directive\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-alert\";\nimport \"../ha-selector/ha-selector\";\nimport type { HaFormDataContainer, HaFormElement, HaFormSchema } from \"./types\";\n\nconst LOAD_ELEMENTS = {\n  boolean: () => import(\"./ha-form-boolean\"),\n  constant: () => import(\"./ha-form-constant\"),\n  float: () => import(\"./ha-form-float\"),\n  grid: () => import(\"./ha-form-grid\"),\n  expandable: () => import(\"./ha-form-expandable\"),\n  integer: () => import(\"./ha-form-integer\"),\n  multi_select: () => import(\"./ha-form-multi_select\"),\n  positive_time_period_dict: () =>\n    import(\"./ha-form-positive_time_period_dict\"),\n  select: () => import(\"./ha-form-select\"),\n  string: () => import(\"./ha-form-string\"),\n  optional_actions: () => import(\"./ha-form-optional_actions\"),\n};\n\nconst getValue = (obj, item) =>\n  obj ? (!item.name || item.flatten ? obj : obj[item.name]) : null;\n\nconst getError = (obj, item) => (obj && item.name ? obj[item.name] : null);\n\nconst getWarning = (obj, item) => (obj && item.name ? obj[item.name] : null);\n\n@customElement(\"ha-form\")\nexport class HaForm extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: readonly HaFormSchema[];\n\n  @property({ attribute: false }) public error?: Record<\n    string,\n    string | string[]\n  >;\n\n  @property({ attribute: false }) public warning?: Record<string, string>;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeError?: (\n    schema: any,\n    error\n  ) => string;\n\n  @property({ attribute: false }) public computeWarning?: (\n    schema: any,\n    warning\n  ) => string;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: any,\n    data: HaFormDataContainer\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: any\n  ) => string | undefined;\n\n  @property({ attribute: false }) public localizeValue?: (\n    key: string\n  ) => string;\n\n  protected getFormProperties(): Record<string, any> {\n    return {};\n  }\n\n  public async focus() {\n    await this.updateComplete;\n    const root = this.renderRoot.querySelector(\".root\");\n    if (!root) {\n      return;\n    }\n    for (const child of root.children) {\n      if (child.tagName !== \"HA-ALERT\") {\n        if (child instanceof ReactiveElement) {\n          // eslint-disable-next-line no-await-in-loop\n          await child.updateComplete;\n        }\n        (child as HTMLElement).focus();\n        break;\n      }\n    }\n  }\n\n  protected willUpdate(changedProps: PropertyValues) {\n    if (changedProps.has(\"schema\") && this.schema) {\n      this.schema.forEach((item) => {\n        if (\"selector\" in item) {\n          return;\n        }\n        LOAD_ELEMENTS[item.type]?.();\n      });\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"root\" part=\"root\">\n        ${this.error && this.error.base\n          ? html`\n              <ha-alert alert-type=\"error\">\n                ${this._computeError(this.error.base, this.schema)}\n              </ha-alert>\n            `\n          : \"\"}\n        ${this.schema.map((item) => {\n          const error = getError(this.error, item);\n          const warning = getWarning(this.warning, item);\n\n          return html`\n            ${error\n              ? html`\n                  <ha-alert own-margin alert-type=\"error\">\n                    ${this._computeError(error, item)}\n                  </ha-alert>\n                `\n              : warning\n                ? html`\n                    <ha-alert own-margin alert-type=\"warning\">\n                      ${this._computeWarning(warning, item)}\n                    </ha-alert>\n                  `\n                : \"\"}\n            ${\"selector\" in item\n              ? html`<ha-selector\n                  .schema=${item}\n                  .hass=${this.hass}\n                  .name=${item.name}\n                  .selector=${item.selector}\n                  .value=${getValue(this.data, item)}\n                  .label=${this._computeLabel(item, this.data)}\n                  .disabled=${item.disabled || this.disabled || false}\n                  .placeholder=${item.required ? \"\" : item.default}\n                  .helper=${this._computeHelper(item)}\n                  .localizeValue=${this.localizeValue}\n                  .required=${item.required || false}\n                  .context=${this._generateContext(item)}\n                ></ha-selector>`\n              : dynamicElement(this.fieldElementName(item.type), {\n                  schema: item,\n                  data: getValue(this.data, item),\n                  label: this._computeLabel(item, this.data),\n                  helper: this._computeHelper(item),\n                  disabled: this.disabled || item.disabled || false,\n                  hass: this.hass,\n                  localize: this.hass?.localize,\n                  computeLabel: this.computeLabel,\n                  computeHelper: this.computeHelper,\n                  localizeValue: this.localizeValue,\n                  context: this._generateContext(item),\n                  ...this.getFormProperties(),\n                })}\n          `;\n        })}\n      </div>\n    `;\n  }\n\n  protected fieldElementName(type: string): string {\n    return `ha-form-${type}`;\n  }\n\n  private _generateContext(\n    schema: HaFormSchema\n  ): Record<string, any> | undefined {\n    if (!schema.context) {\n      return undefined;\n    }\n\n    const context = {};\n    for (const [context_key, data_key] of Object.entries(schema.context)) {\n      context[context_key] = this.data[data_key];\n    }\n    return context;\n  }\n\n  protected createRenderRoot() {\n    const root = super.createRenderRoot();\n    // attach it as soon as possible to make sure we fetch all events.\n    this.addValueChangedListener(root);\n    return root;\n  }\n\n  protected addValueChangedListener(element: Element | ShadowRoot) {\n    element.addEventListener(\"value-changed\", (ev) => {\n      ev.stopPropagation();\n      const schema = (ev.target as HaFormElement).schema as HaFormSchema;\n\n      if (ev.target === this) return;\n\n      const newValue =\n        !schema.name || (\"flatten\" in schema && schema.flatten)\n          ? ev.detail.value\n          : { [schema.name]: ev.detail.value };\n\n      this.data = {\n        ...this.data,\n        ...newValue,\n      };\n\n      fireEvent(this, \"value-changed\", {\n        value: this.data,\n      });\n    });\n  }\n\n  private _computeLabel(schema: HaFormSchema, data: HaFormDataContainer) {\n    return this.computeLabel\n      ? this.computeLabel(schema, data)\n      : schema\n        ? schema.name\n        : \"\";\n  }\n\n  private _computeHelper(schema: HaFormSchema) {\n    return this.computeHelper ? this.computeHelper(schema) : \"\";\n  }\n\n  private _computeError(\n    error: string | string[],\n    schema: HaFormSchema | readonly HaFormSchema[]\n  ): string | TemplateResult {\n    if (Array.isArray(error)) {\n      return html`<ul>\n        ${error.map(\n          (err) =>\n            html`<li>\n              ${this.computeError ? this.computeError(err, schema) : err}\n            </li>`\n        )}\n      </ul>`;\n    }\n    return this.computeError ? this.computeError(error, schema) : error;\n  }\n\n  private _computeWarning(\n    warning,\n    schema: HaFormSchema | readonly HaFormSchema[]\n  ) {\n    return this.computeWarning ? this.computeWarning(warning, schema) : warning;\n  }\n\n  static styles = css`\n    .root > * {\n      display: block;\n    }\n    .root > *:not([own-margin]):not(:last-child) {\n      margin-bottom: 24px;\n    }\n    ha-alert[own-margin] {\n      margin-bottom: 4px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form\": HaForm;\n  }\n}\n","import { arrayLiteralIncludes } from \"../common/array/literal-includes\";\n\nexport const UNAVAILABLE = \"unavailable\";\nexport const UNKNOWN = \"unknown\";\nexport const ON = \"on\";\nexport const OFF = \"off\";\n\nexport const UNAVAILABLE_STATES = [UNAVAILABLE, UNKNOWN] as const;\nexport const OFF_STATES = [UNAVAILABLE, UNKNOWN, OFF] as const;\n\nexport const isUnavailableState = arrayLiteralIncludes(UNAVAILABLE_STATES);\nexport const isOffState = arrayLiteralIncludes(OFF_STATES);\n"],"names":["stateActive","stateObj","state","domain","computeDomain","entity_id","compareState","undefined","includes","UNAVAILABLE","isUnavailableState","OFF","LOAD_ELEMENTS","boolean","constant","float","grid","expandable","integer","multi_select","positive_time_period_dict","select","string","optional_actions","getValue","obj","item","name","flatten","_decorate","customElement","_initialize","_LitElement","HaForm","constructor","args","F","d","kind","decorators","property","attribute","key","value","type","Boolean","this","updateComplete","root","renderRoot","querySelector","child","children","tagName","ReactiveElement","focus","changedProps","has","schema","forEach","html","error","base","_computeError","map","getError","warning","getWarning","_computeWarning","hass","selector","data","_computeLabel","disabled","required","default","_computeHelper","localizeValue","_generateContext","dynamicElement","fieldElementName","label","helper","localize","computeLabel","computeHelper","context","getFormProperties","context_key","data_key","Object","entries","_superPropGet","addValueChangedListener","element","addEventListener","ev","stopPropagation","target","newValue","detail","fireEvent","Array","isArray","err","computeError","computeWarning","static","css","LitElement","UNKNOWN","ON","UNAVAILABLE_STATES","OFF_STATES","arrayLiteralIncludes"],"mappings":"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"}