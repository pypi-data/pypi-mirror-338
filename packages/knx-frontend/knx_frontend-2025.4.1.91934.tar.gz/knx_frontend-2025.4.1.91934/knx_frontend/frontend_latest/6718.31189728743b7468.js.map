{"version":3,"file":"6718.31189728743b7468.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-button-menu.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-overflow-menu.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tooltip.ts"],"sourcesContent":["import type { Button } from \"@material/mwc-button\";\nimport \"@material/mwc-menu\";\nimport type { Corner, Menu, MenuCorner } from \"@material/mwc-menu\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport { FOCUS_TARGET } from \"../dialogs/make-dialog-manager\";\nimport type { HaIconButton } from \"./ha-icon-button\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  protected readonly [FOCUS_TARGET];\n\n  @property() public corner: Corner = \"BOTTOM_START\";\n\n  @property({ attribute: \"menu-corner\" }) public menuCorner: MenuCorner =\n    \"START\";\n\n  @property({ type: Number }) public x: number | null = null;\n\n  @property({ type: Number }) public y: number | null = null;\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @property({ type: Boolean, attribute: \"no-anchor\" }) public noAnchor = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  public override focus() {\n    if (this._menu?.open) {\n      this._menu.focusItemAtIndex(0);\n    } else {\n      this._triggerButton?.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\" @slotchange=${this._setTriggerAria}></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .menuCorner=${this.menuCorner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n        .y=${this.y}\n        .x=${this.x}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    if (mainWindow.document.dir === \"rtl\") {\n      this.updateComplete.then(() => {\n        this.querySelectorAll(\"mwc-list-item\").forEach((item) => {\n          const style = document.createElement(\"style\");\n          style.innerHTML =\n            \"span.material-icons:first-of-type { margin-left: var(--mdc-list-item-graphic-margin, 32px) !important; margin-right: 0px !important;}\";\n          item!.shadowRoot!.appendChild(style);\n        });\n      });\n    }\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this.noAnchor ? null : this;\n    this._menu!.show();\n  }\n\n  private get _triggerButton() {\n    return this.querySelector(\n      'ha-icon-button[slot=\"trigger\"], mwc-button[slot=\"trigger\"]'\n    ) as HaIconButton | Button | null;\n  }\n\n  private _setTriggerAria() {\n    if (this._triggerButton) {\n      this._triggerButton.ariaHasPopup = \"menu\";\n    }\n  }\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      position: relative;\n    }\n    ::slotted([disabled]) {\n      color: var(--disabled-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import { mdiDotsVertical } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { haStyle } from \"../resources/styles\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button-menu\";\nimport \"./ha-icon-button\";\nimport \"./ha-list-item\";\nimport \"./ha-svg-icon\";\nimport \"./ha-tooltip\";\n\nexport interface IconOverflowMenuItem {\n  [key: string]: any;\n  path: string;\n  label: string;\n  narrowOnly?: boolean;\n  disabled?: boolean;\n  tooltip?: string;\n  action: () => any;\n  warning?: boolean;\n  divider?: boolean;\n}\n\n@customElement(\"ha-icon-overflow-menu\")\nexport class HaIconOverflowMenu extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Array }) public items: IconOverflowMenuItem[] = [];\n\n  @property({ type: Boolean }) public narrow = false;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.narrow\n        ? html` <!-- Collapsed representation for small screens -->\n            <ha-button-menu\n              @click=${this._handleIconOverflowMenuOpened}\n              @closed=${this._handleIconOverflowMenuClosed}\n              class=\"ha-icon-overflow-menu-overflow\"\n              absolute\n            >\n              <ha-icon-button\n                .label=${this.hass.localize(\"ui.common.overflow_menu\")}\n                .path=${mdiDotsVertical}\n                slot=\"trigger\"\n              ></ha-icon-button>\n\n              ${this.items.map((item) =>\n                item.divider\n                  ? html`<li divider role=\"separator\"></li>`\n                  : html`<ha-list-item\n                      graphic=\"icon\"\n                      ?disabled=${item.disabled}\n                      @click=${item.action}\n                      class=${classMap({ warning: Boolean(item.warning) })}\n                    >\n                      <div slot=\"graphic\">\n                        <ha-svg-icon\n                          class=${classMap({ warning: Boolean(item.warning) })}\n                          .path=${item.path}\n                        ></ha-svg-icon>\n                      </div>\n                      ${item.label}\n                    </ha-list-item> `\n              )}\n            </ha-button-menu>`\n        : html`\n            <!-- Icon representation for big screens -->\n            ${this.items.map((item) =>\n              item.narrowOnly\n                ? nothing\n                : item.divider\n                  ? html`<div role=\"separator\"></div>`\n                  : html`<ha-tooltip\n                      .disabled=${!item.tooltip}\n                      .content=${item.tooltip ?? \"\"}\n                    >\n                      <ha-icon-button\n                        @click=${item.action}\n                        .label=${item.label}\n                        .path=${item.path}\n                        ?disabled=${item.disabled}\n                      ></ha-icon-button>\n                    </ha-tooltip>`\n            )}\n          `}\n    `;\n  }\n\n  protected _handleIconOverflowMenuOpened(e) {\n    e.stopPropagation();\n    // If this component is used inside a data table, the z-index of the row\n    // needs to be increased. Otherwise the ha-button-menu would be displayed\n    // underneath the next row in the table.\n    const row = this.closest(\".mdc-data-table__row\") as HTMLDivElement | null;\n    if (row) {\n      row.style.zIndex = \"1\";\n    }\n  }\n\n  protected _handleIconOverflowMenuClosed() {\n    const row = this.closest(\".mdc-data-table__row\") as HTMLDivElement | null;\n    if (row) {\n      row.style.zIndex = \"\";\n    }\n  }\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n          justify-content: flex-end;\n        }\n        li[role=\"separator\"] {\n          border-bottom-color: var(--divider-color);\n        }\n        div[role=\"separator\"] {\n          border-right: 1px solid var(--divider-color);\n          width: 1px;\n        }\n        ha-list-item[disabled] ha-svg-icon {\n          color: var(--disabled-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-overflow-menu\": HaIconOverflowMenu;\n  }\n}\n","import SlTooltip from \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.component\";\nimport styles from \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { setDefaultAnimation } from \"@shoelace-style/shoelace/dist/utilities/animation-registry\";\n\nsetDefaultAnimation(\"tooltip.show\", {\n  keyframes: [{ opacity: 0 }, { opacity: 1 }],\n  options: { duration: 150, easing: \"ease\" },\n});\n\nsetDefaultAnimation(\"tooltip.hide\", {\n  keyframes: [{ opacity: 1 }, { opacity: 0 }],\n  options: { duration: 400, easing: \"ease\" },\n});\n\n@customElement(\"ha-tooltip\")\nexport class HaTooltip extends SlTooltip {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --sl-tooltip-background-color: var(--secondary-background-color);\n        --sl-tooltip-color: var(--primary-text-color);\n        --sl-tooltip-font-family: Roboto, sans-serif;\n        --sl-tooltip-font-size: 12px;\n        --sl-tooltip-font-weight: normal;\n        --sl-tooltip-line-height: 1;\n        --sl-tooltip-padding: 8px;\n        --sl-tooltip-border-radius: var(--ha-tooltip-border-radius, 4px);\n        --sl-tooltip-arrow-size: var(--ha-tooltip-arrow-size, 8px);\n        --sl-z-index-tooltip: var(--ha-tooltip-z-index, 1000);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tooltip\": HaTooltip;\n  }\n}\n"],"names":["_decorate","customElement","_initialize","_LitElement","HaButtonMenu","constructor","args","F","d","kind","key","FOCUS_TARGET","value","decorators","property","attribute","type","Number","Boolean","query","this","_menu","items","selected","open","focusItemAtIndex","_triggerButton","focus","html","_handleClick","_setTriggerAria","corner","menuCorner","fixed","multi","activatable","y","x","changedProps","_superPropGet","mainWindow","updateComplete","then","querySelectorAll","forEach","item","style","document","createElement","innerHTML","shadowRoot","appendChild","disabled","anchor","noAnchor","show","querySelector","ariaHasPopup","static","css","LitElement","HaIconOverflowMenu","Array","narrow","_handleIconOverflowMenuOpened","_handleIconOverflowMenuClosed","hass","localize","mdiDotsVertical","map","divider","action","classMap","warning","path","label","narrowOnly","nothing","tooltip","e","stopPropagation","row","closest","zIndex","haStyle","setDefaultAnimation","keyframes","opacity","options","duration","easing","_SlTooltip","styles","SlTooltip"],"mappings":"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"}