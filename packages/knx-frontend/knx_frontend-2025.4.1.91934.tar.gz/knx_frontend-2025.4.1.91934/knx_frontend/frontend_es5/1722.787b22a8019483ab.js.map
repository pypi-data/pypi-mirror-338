{"version":3,"file":"1722.787b22a8019483ab.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/entity/ha-entity-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/auth.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/integration.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/show-dialog-helper-detail.ts"],"sourcesContent":["import \"../ha-list-item\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport type { ScorableTextItem } from \"../../common/string/filter/sequence-matching\";\nimport { fuzzyFilterSort } from \"../../common/string/filter/sequence-matching\";\nimport type { ValueChangedEvent, HomeAssistant } from \"../../types\";\nimport \"../ha-combo-box\";\nimport type { HaComboBox } from \"../ha-combo-box\";\nimport \"../ha-icon-button\";\nimport \"../ha-svg-icon\";\nimport \"./state-badge\";\nimport { caseInsensitiveStringCompare } from \"../../common/string/compare\";\nimport { showHelperDetailDialog } from \"../../panels/config/helpers/show-dialog-helper-detail\";\nimport { domainToName } from \"../../data/integration\";\nimport type { HelperDomain } from \"../../panels/config/helpers/const\";\nimport { isHelperDomain } from \"../../panels/config/helpers/const\";\n\ninterface HassEntityWithCachedName extends HassEntity, ScorableTextItem {\n  friendly_name: string;\n}\n\nexport type HaEntityPickerEntityFilterFunc = (entity: HassEntity) => boolean;\n\nconst CREATE_ID = \"___create-new-entity___\";\n\n@customElement(\"ha-entity-picker\")\nexport class HaEntityPicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  @property({ attribute: false, type: Array }) public createDomains?: string[];\n\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  /**\n   * Show only entities with these unit of measuments.\n   * @type {Array}\n   * @attr include-unit-of-measurement\n   */\n  @property({ type: Array, attribute: \"include-unit-of-measurement\" })\n  public includeUnitOfMeasurement?: string[];\n\n  /**\n   * List of allowed entities to show.\n   * @type {Array}\n   * @attr include-entities\n   */\n  @property({ type: Array, attribute: \"include-entities\" })\n  public includeEntities?: string[];\n\n  /**\n   * List of entities to be excluded.\n   * @type {Array}\n   * @attr exclude-entities\n   */\n  @property({ type: Array, attribute: \"exclude-entities\" })\n  public excludeEntities?: string[];\n\n  @property({ attribute: false })\n  public entityFilter?: HaEntityPickerEntityFilterFunc;\n\n  @property({ attribute: \"hide-clear-icon\", type: Boolean })\n  public hideClearIcon = false;\n\n  @property({ attribute: \"item-label-path\" }) public itemLabelPath =\n    \"friendly_name\";\n\n  @state() private _opened = false;\n\n  @query(\"ha-combo-box\", true) public comboBox!: HaComboBox;\n\n  public async open() {\n    await this.updateComplete;\n    await this.comboBox?.open();\n  }\n\n  public async focus() {\n    await this.updateComplete;\n    await this.comboBox?.focus();\n  }\n\n  private _initedStates = false;\n\n  private _states: HassEntityWithCachedName[] = [];\n\n  private _rowRenderer: ComboBoxLitRenderer<HassEntityWithCachedName> = (\n    item\n  ) =>\n    html`<ha-list-item graphic=\"avatar\" .twoline=${!!item.entity_id}>\n      ${item.state\n        ? html`<state-badge\n            slot=\"graphic\"\n            .stateObj=${item}\n            .hass=${this.hass}\n          ></state-badge>`\n        : \"\"}\n      <span>${item.friendly_name}</span>\n      <span slot=\"secondary\"\n        >${item.entity_id.startsWith(CREATE_ID)\n          ? this.hass.localize(\"ui.components.entity.entity-picker.new_entity\")\n          : item.entity_id}</span\n      >\n    </ha-list-item>`;\n\n  private _getStates = memoizeOne(\n    (\n      _opened: boolean,\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"],\n      includeUnitOfMeasurement: this[\"includeUnitOfMeasurement\"],\n      includeEntities: this[\"includeEntities\"],\n      excludeEntities: this[\"excludeEntities\"],\n      createDomains: this[\"createDomains\"]\n    ): HassEntityWithCachedName[] => {\n      let states: HassEntityWithCachedName[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      const createItems = createDomains?.length\n        ? createDomains.map((domain) => {\n            const newFriendlyName = hass.localize(\n              \"ui.components.entity.entity-picker.create_helper\",\n              {\n                domain: isHelperDomain(domain)\n                  ? hass.localize(\n                      `ui.panel.config.helpers.types.${domain as HelperDomain}`\n                    )\n                  : domainToName(hass.localize, domain),\n              }\n            );\n\n            return {\n              entity_id: CREATE_ID + domain,\n              state: \"on\",\n              last_changed: \"\",\n              last_updated: \"\",\n              context: { id: \"\", user_id: null, parent_id: null },\n              friendly_name: newFriendlyName,\n              attributes: {\n                icon: \"mdi:plus\",\n              },\n              strings: [domain, newFriendlyName],\n            };\n          })\n        : [];\n\n      if (!entityIds.length) {\n        return [\n          {\n            entity_id: \"\",\n            state: \"\",\n            last_changed: \"\",\n            last_updated: \"\",\n            context: { id: \"\", user_id: null, parent_id: null },\n            friendly_name: this.hass!.localize(\n              \"ui.components.entity.entity-picker.no_entities\"\n            ),\n            attributes: {\n              friendly_name: this.hass!.localize(\n                \"ui.components.entity.entity-picker.no_entities\"\n              ),\n              icon: \"mdi:magnify\",\n            },\n            strings: [],\n          },\n          ...createItems,\n        ];\n      }\n\n      if (includeEntities) {\n        entityIds = entityIds.filter((entityId) =>\n          includeEntities.includes(entityId)\n        );\n      }\n\n      if (excludeEntities) {\n        entityIds = entityIds.filter(\n          (entityId) => !excludeEntities.includes(entityId)\n        );\n      }\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds\n        .map((key) => {\n          const friendly_name = computeStateName(hass!.states[key]) || key;\n          return {\n            ...hass!.states[key],\n            friendly_name,\n            strings: [key, friendly_name],\n          };\n        })\n        .sort((entityA, entityB) =>\n          caseInsensitiveStringCompare(\n            entityA.friendly_name,\n            entityB.friendly_name,\n            this.hass.locale.language\n          )\n        );\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (includeUnitOfMeasurement) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.unit_of_measurement &&\n              includeUnitOfMeasurement.includes(\n                stateObj.attributes.unit_of_measurement\n              ))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      if (!states.length) {\n        return [\n          {\n            entity_id: \"\",\n            state: \"\",\n            last_changed: \"\",\n            last_updated: \"\",\n            context: { id: \"\", user_id: null, parent_id: null },\n            friendly_name: this.hass!.localize(\n              \"ui.components.entity.entity-picker.no_match\"\n            ),\n            attributes: {\n              friendly_name: this.hass!.localize(\n                \"ui.components.entity.entity-picker.no_match\"\n              ),\n              icon: \"mdi:magnify\",\n            },\n            strings: [],\n          },\n          ...createItems,\n        ];\n      }\n\n      if (createItems?.length) {\n        states.push(...createItems);\n      }\n\n      return states;\n    }\n  );\n\n  protected shouldUpdate(changedProps: PropertyValues) {\n    if (\n      changedProps.has(\"value\") ||\n      changedProps.has(\"label\") ||\n      changedProps.has(\"disabled\")\n    ) {\n      return true;\n    }\n    return !(!changedProps.has(\"_opened\") && this._opened);\n  }\n\n  public willUpdate(changedProps: PropertyValues) {\n    if (!this._initedStates || (changedProps.has(\"_opened\") && this._opened)) {\n      this._states = this._getStates(\n        this._opened,\n        this.hass,\n        this.includeDomains,\n        this.excludeDomains,\n        this.entityFilter,\n        this.includeDeviceClasses,\n        this.includeUnitOfMeasurement,\n        this.includeEntities,\n        this.excludeEntities,\n        this.createDomains\n      );\n      if (this._initedStates) {\n        this.comboBox.filteredItems = this._states;\n      }\n      this._initedStates = true;\n    }\n\n    if (changedProps.has(\"createDomains\") && this.createDomains?.length) {\n      this.hass.loadFragmentTranslation(\"config\");\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        item-value-path=\"entity_id\"\n        .itemLabelPath=${this.itemLabelPath}\n        .hass=${this.hass}\n        .value=${this._value}\n        .label=${this.label === undefined\n          ? this.hass.localize(\"ui.components.entity.entity-picker.entity\")\n          : this.label}\n        .helper=${this.helper}\n        .allowCustomValue=${this.allowCustomEntity}\n        .filteredItems=${this._states}\n        .renderer=${this._rowRenderer}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n        @filter-changed=${this._filterChanged}\n      >\n      </ha-combo-box>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string | undefined>) {\n    ev.stopPropagation();\n    const newValue = ev.detail.value?.trim();\n\n    if (newValue && newValue.startsWith(CREATE_ID)) {\n      const domain = newValue.substring(CREATE_ID.length);\n      showHelperDetailDialog(this, {\n        domain,\n        dialogClosedCallback: (item) => {\n          if (item.entityId) this._setValue(item.entityId);\n        },\n      });\n      return;\n    }\n\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _filterChanged(ev: CustomEvent): void {\n    const target = ev.target as HaComboBox;\n    const filterString = ev.detail.value.trim().toLowerCase();\n    target.filteredItems = filterString.length\n      ? fuzzyFilterSort<HassEntityWithCachedName>(filterString, this._states)\n      : this._states;\n  }\n\n  private _setValue(value: string | undefined) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import type { HaFormSchema } from \"../components/ha-form/types\";\nimport type { HomeAssistant } from \"../types\";\nimport type { RefreshTokenType } from \"./refresh_token\";\n\nexport interface AuthUrlSearchParams {\n  client_id?: string;\n  redirect_uri?: string;\n  state?: string;\n}\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n  users?: Record<string, string>;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = __HASS_URL__;\n\nexport const autocompleteLoginFields = (schema: HaFormSchema[]) =>\n  schema.map((field) => {\n    if (field.type !== \"string\") return field;\n    switch (field.name) {\n      case \"username\":\n        return { ...field, autocomplete: \"username\", autofocus: true };\n      case \"password\":\n        return { ...field, autocomplete: \"current-password\" };\n      case \"code\":\n        return { ...field, autocomplete: \"one-time-code\", autofocus: true };\n      default:\n        return field;\n    }\n  });\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createLoginFlow = (\n  client_id: string | undefined,\n  redirect_uri: string | undefined,\n  handler: (string | null)[]\n) =>\n  fetch(\"/auth/login_flow\", {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify({\n      client_id,\n      handler,\n      redirect_uri,\n    }),\n  });\n\nexport const submitLoginFlow = (flow_id: string, data: Record<string, any>) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify(data),\n  });\n\nexport const deleteLoginFlow = (flow_id) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"DELETE\",\n    credentials: \"same-origin\",\n  });\n\nexport const redirectWithAuthCode = (\n  url: string,\n  authCode: string,\n  oauth2State: string | undefined,\n  storeToken: boolean\n) => {\n  // OAuth 2: 3.1.2 we need to retain query component of a redirect URI\n  if (!url.includes(\"?\")) {\n    url += \"?\";\n  } else if (!url.endsWith(\"&\")) {\n    url += \"&\";\n  }\n\n  url += `code=${encodeURIComponent(authCode)}`;\n\n  if (oauth2State) {\n    url += `&state=${encodeURIComponent(oauth2State)}`;\n  }\n  if (storeToken) {\n    url += `&storeToken=true`;\n  }\n\n  document.location.assign(url);\n};\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n\nexport const changePassword = (\n  hass: HomeAssistant,\n  current_password: string,\n  new_password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/change_password\",\n    current_password,\n    new_password,\n  });\n\nexport const adminChangePassword = (\n  hass: HomeAssistant,\n  userId: string,\n  password: string\n) =>\n  hass.callWS<undefined>({\n    type: \"config/auth_provider/homeassistant/admin_change_password\",\n    user_id: userId,\n    password,\n  });\n\nexport const adminChangeUsername = (\n  hass: HomeAssistant,\n  userId: string,\n  username: string\n) =>\n  hass.callWS<undefined>({\n    type: \"config/auth_provider/homeassistant/admin_change_username\",\n    user_id: userId,\n    username,\n  });\n\nexport const deleteAllRefreshTokens = (\n  hass: HomeAssistant,\n  token_type?: RefreshTokenType,\n  delete_current_token?: boolean\n) =>\n  hass.callWS({\n    type: \"auth/delete_all_refresh_tokens\",\n    token_type,\n    delete_current_token,\n  });\n","import { arrayLiteralIncludes } from \"../common/array/literal-includes\";\n\nexport const UNAVAILABLE = \"unavailable\";\nexport const UNKNOWN = \"unknown\";\nexport const ON = \"on\";\nexport const OFF = \"off\";\n\nexport const UNAVAILABLE_STATES = [UNAVAILABLE, UNKNOWN] as const;\nexport const OFF_STATES = [UNAVAILABLE, UNKNOWN, OFF] as const;\n\nexport const isUnavailableState = arrayLiteralIncludes(UNAVAILABLE_STATES);\nexport const isOffState = arrayLiteralIncludes(OFF_STATES);\n","import type { Connection } from \"home-assistant-js-websocket\";\nimport { createCollection } from \"home-assistant-js-websocket\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\nimport type { HomeAssistant } from \"../types\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport const integrationsWithPanel = {\n  bluetooth: \"config/bluetooth\",\n  matter: \"config/matter\",\n  mqtt: \"config/mqtt\",\n  thread: \"config/thread\",\n  zha: \"config/zha/dashboard\",\n  zwave_js: \"config/zwave_js/dashboard\",\n};\n\nexport type IntegrationType =\n  | \"device\"\n  | \"helper\"\n  | \"hub\"\n  | \"service\"\n  | \"hardware\"\n  | \"entity\"\n  | \"system\";\n\nexport interface IntegrationManifest {\n  is_built_in: boolean;\n  overwrites_built_in?: boolean;\n  domain: string;\n  name: string;\n  config_flow: boolean;\n  documentation: string;\n  issue_tracker?: string;\n  dependencies?: string[];\n  after_dependencies?: string[];\n  codeowners?: string[];\n  requirements?: string[];\n  ssdp?: { manufacturer?: string; modelName?: string; st?: string }[];\n  zeroconf?: string[];\n  homekit?: { models: string[] };\n  integration_type?: IntegrationType;\n  loggers?: string[];\n  quality_scale?:\n    | \"bronze\"\n    | \"silver\"\n    | \"gold\"\n    | \"platinum\"\n    | \"no_score\"\n    | \"internal\"\n    | \"legacy\"\n    | \"custom\";\n  iot_class:\n    | \"assumed_state\"\n    | \"cloud_polling\"\n    | \"cloud_push\"\n    | \"local_polling\"\n    | \"local_push\";\n  single_config_entry?: boolean;\n  version?: string;\n}\nexport interface IntegrationSetup {\n  domain: string;\n  seconds?: number;\n}\n\nexport interface IntegrationLogInfo {\n  domain: string;\n  level?: number;\n}\n\nexport enum LogSeverity {\n  CRITICAL = 50,\n  ERROR = 40,\n  WARNING = 30,\n  INFO = 20,\n  DEBUG = 10,\n  NOTSET = 0,\n}\n\nexport type IntegrationLogPersistance = \"none\" | \"once\" | \"permanent\";\n\nexport const integrationIssuesUrl = (\n  domain: string,\n  manifest: IntegrationManifest\n) =>\n  manifest.issue_tracker ||\n  `https://github.com/home-assistant/core/issues?q=is%3Aissue+is%3Aopen+label%3A%22integration%3A+${domain}%22`;\n\nexport const domainToName = (\n  localize: LocalizeFunc,\n  domain: string,\n  manifest?: IntegrationManifest\n) => localize(`component.${domain}.title`) || manifest?.name || domain;\n\nexport const fetchIntegrationManifests = (\n  hass: HomeAssistant,\n  integrations?: string[]\n) => {\n  const params: any = {\n    type: \"manifest/list\",\n  };\n  if (integrations) {\n    params.integrations = integrations;\n  }\n  return hass.callWS<IntegrationManifest[]>(params);\n};\n\nexport const fetchIntegrationManifest = (\n  hass: HomeAssistant,\n  integration: string\n) => hass.callWS<IntegrationManifest>({ type: \"manifest/get\", integration });\n\nexport const fetchIntegrationSetups = (hass: HomeAssistant) =>\n  hass.callWS<IntegrationSetup[]>({ type: \"integration/setup_info\" });\n\nexport const fetchIntegrationLogInfo = (conn) =>\n  conn.sendMessagePromise({\n    type: \"logger/log_info\",\n  });\n\nexport const setIntegrationLogLevel = (\n  hass: HomeAssistant,\n  integration: string,\n  level: string,\n  persistence: IntegrationLogPersistance\n) =>\n  hass.callWS({\n    type: \"logger/integration_log_level\",\n    integration,\n    level,\n    persistence,\n  });\n\nconst subscribeLogInfoUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchIntegrationLogInfo(conn).then((log_infos) =>\n          store.setState(log_infos, true)\n        ),\n      200,\n      true\n    ),\n    \"logging_changed\"\n  );\n\nexport const subscribeLogInfo = (\n  conn: Connection,\n  onChange: (devices: IntegrationLogInfo[]) => void\n) =>\n  createCollection<IntegrationLogInfo[]>(\n    \"_integration_log_info\",\n    fetchIntegrationLogInfo,\n    subscribeLogInfoUpdates,\n    conn,\n    onChange\n  );\n","import { fireEvent } from \"../../../common/dom/fire_event\";\n\nexport const loadHelperDetailDialog = () => import(\"./dialog-helper-detail\");\n\nexport interface ShowDialogHelperDetailParams {\n  domain?: string;\n  dialogClosedCallback?: (params: {\n    flowFinished: boolean;\n    entryId?: string;\n    entityId?: string;\n  }) => void;\n}\n\nexport const showHelperDetailDialog = (\n  element: HTMLElement,\n  params: ShowDialogHelperDetailParams\n) => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-helper-detail\",\n    dialogImport: loadHelperDetailDialog,\n    dialogParams: params,\n  });\n};\n"],"names":["CREATE_ID","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","Array","state","query","_this$comboBox","this","updateComplete","comboBox","open","_this$comboBox2","focus","item","html","_t","_","entity_id","_t2","hass","friendly_name","startsWith","localize","memoizeOne","_opened","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","includeUnitOfMeasurement","includeEntities","excludeEntities","createDomains","states","entityIds","Object","keys","createItems","length","map","domain","newFriendlyName","isHelperDomain","domainToName","last_changed","last_updated","context","id","user_id","parent_id","attributes","icon","strings","filter","entityId","includes","eid","computeDomain","computeStateName","assign","sort","entityA","entityB","caseInsensitiveStringCompare","locale","language","stateObj","device_class","unit_of_measurement","push","changedProps","has","_this$createDomains","_initedStates","_states","_getStates","filteredItems","loadFragmentTranslation","_t3","itemLabelPath","_value","undefined","label","helper","allowCustomEntity","_rowRenderer","required","disabled","_openedChanged","_valueChanged","_filterChanged","ev","detail","_ev$detail$value","stopPropagation","newValue","trim","substring","showHelperDetailDialog","dialogClosedCallback","_setValue","target","filterString","toLowerCase","fuzzyFilterSort","setTimeout","fireEvent","LitElement","autocompleteLoginFields","schema","field","name","autocomplete","autofocus","getSignedPath","path","callWS","UNAVAILABLE","UNKNOWN","ON","OFF","UNAVAILABLE_STATES","OFF_STATES","isUnavailableState","arrayLiteralIncludes","manifest","fetchIntegrationManifests","integrations","params","fetchIntegrationManifest","integration","loadHelperDetailDialog","element","dialogTag","dialogImport","dialogParams"],"mappings":"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"}