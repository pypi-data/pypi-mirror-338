{"version":3,"file":"8586.64f78f08ef149487.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/string/title-case.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-navigation-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-navigation.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/lovelace/config/types.ts"],"sourcesContent":["export const titleCase = (s) =>\n  s.replace(/^_*(.)|_+(.)/g, (_s, c, d) =>\n    c ? c.toUpperCase() : \" \" + d.toUpperCase()\n  );\n","import \"@material/mwc-list/mwc-list-item\";\nimport type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { titleCase } from \"../common/string/title-case\";\nimport { fetchConfig } from \"../data/lovelace/config/types\";\nimport type { LovelaceViewRawConfig } from \"../data/lovelace/config/view\";\nimport type { HomeAssistant, PanelInfo, ValueChangedEvent } from \"../types\";\nimport \"./ha-combo-box\";\nimport type { HaComboBox } from \"./ha-combo-box\";\nimport \"./ha-icon\";\n\ninterface NavigationItem {\n  path: string;\n  icon: string;\n  title: string;\n}\n\nconst DEFAULT_ITEMS: NavigationItem[] = [];\n\nconst rowRenderer: ComboBoxLitRenderer<NavigationItem> = (item) => html`\n  <mwc-list-item graphic=\"icon\" .twoline=${!!item.title}>\n    <ha-icon .icon=${item.icon} slot=\"graphic\"></ha-icon>\n    <span>${item.title || item.path}</span>\n    <span slot=\"secondary\">${item.path}</span>\n  </mwc-list-item>\n`;\n\nconst createViewNavigationItem = (\n  prefix: string,\n  view: LovelaceViewRawConfig,\n  index: number\n) => ({\n  path: `/${prefix}/${view.path ?? index}`,\n  icon: view.icon ?? \"mdi:view-compact\",\n  title: view.title ?? (view.path ? titleCase(view.path) : `${index}`),\n});\n\nconst createPanelNavigationItem = (hass: HomeAssistant, panel: PanelInfo) => ({\n  path: `/${panel.url_path}`,\n  icon: panel.icon ?? \"mdi:view-dashboard\",\n  title:\n    panel.url_path === hass.defaultPanel\n      ? hass.localize(\"panel.states\")\n      : hass.localize(`panel.${panel.title}`) ||\n        panel.title ||\n        (panel.url_path ? titleCase(panel.url_path) : \"\"),\n});\n\n@customElement(\"ha-navigation-picker\")\nexport class HaNavigationPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() private _opened = false;\n\n  private navigationItemsLoaded = false;\n\n  private navigationItems: NavigationItem[] = DEFAULT_ITEMS;\n\n  @query(\"ha-combo-box\", true) private comboBox!: HaComboBox;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        item-value-path=\"path\"\n        item-label-path=\"path\"\n        .value=${this._value}\n        allow-custom-value\n        .filteredItems=${this.navigationItems}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n        @filter-changed=${this._filterChanged}\n      >\n      </ha-combo-box>\n    `;\n  }\n\n  private async _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n    if (this._opened && !this.navigationItemsLoaded) {\n      this._loadNavigationItems();\n    }\n  }\n\n  private async _loadNavigationItems() {\n    this.navigationItemsLoaded = true;\n\n    const panels = Object.entries(this.hass!.panels).map(([id, panel]) => ({\n      id,\n      ...panel,\n    }));\n    const lovelacePanels = panels.filter(\n      (panel) => panel.component_name === \"lovelace\"\n    );\n\n    const viewConfigs = await Promise.all(\n      lovelacePanels.map((panel) =>\n        fetchConfig(\n          this.hass!.connection,\n          // path should be null to fetch default lovelace panel\n          panel.url_path === \"lovelace\" ? null : panel.url_path,\n          true\n        )\n          .then((config) => [panel.id, config] as [string, typeof config])\n          .catch((_) => [panel.id, undefined] as [string, undefined])\n      )\n    );\n\n    const panelViewConfig = new Map(viewConfigs);\n\n    this.navigationItems = [];\n\n    for (const panel of panels) {\n      this.navigationItems.push(createPanelNavigationItem(this.hass!, panel));\n\n      const config = panelViewConfig.get(panel.id);\n\n      if (!config || !(\"views\" in config)) continue;\n\n      config.views.forEach((view, index) =>\n        this.navigationItems.push(\n          createViewNavigationItem(panel.url_path, view, index)\n        )\n      );\n    }\n\n    this.comboBox.filteredItems = this.navigationItems;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues) {\n    return !this._opened || changedProps.has(\"_opened\");\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    this._setValue(ev.detail.value);\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: this._value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  private _filterChanged(ev: CustomEvent): void {\n    const filterString = ev.detail.value.toLowerCase();\n    const characterCount = filterString.length;\n    if (characterCount >= 2) {\n      const filteredItems: NavigationItem[] = [];\n\n      this.navigationItems.forEach((item) => {\n        if (\n          item.path.toLowerCase().includes(filterString) ||\n          item.title.toLowerCase().includes(filterString)\n        ) {\n          filteredItems.push(item);\n        }\n      });\n\n      if (filteredItems.length > 0) {\n        this.comboBox.filteredItems = filteredItems;\n      } else {\n        this.comboBox.filteredItems = [];\n      }\n    } else {\n      this.comboBox.filteredItems = this.navigationItems;\n    }\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  static styles = css`\n    ha-icon,\n    ha-svg-icon {\n      color: var(--primary-text-color);\n      position: relative;\n      bottom: 0px;\n    }\n    *[slot=\"prefix\"] {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-navigation-picker\": HaNavigationPicker;\n  }\n}\n","import { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { NavigationSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-navigation-picker\";\n\n@customElement(\"ha-selector-navigation\")\nexport class HaNavigationSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: NavigationSelector;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  protected render() {\n    return html`\n      <ha-navigation-picker\n        .hass=${this.hass}\n        .label=${this.label}\n        .value=${this.value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        .helper=${this.helper}\n        @value-changed=${this._valueChanged}\n      ></ha-navigation-picker>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    fireEvent(this, \"value-changed\", { value: ev.detail.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-navigation\": HaNavigationSelector;\n  }\n}\n","import type { Connection } from \"home-assistant-js-websocket\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { LovelaceResource } from \"../resource\";\nimport type { LovelaceStrategyConfig } from \"./strategy\";\nimport type { LovelaceViewRawConfig } from \"./view\";\n\nexport interface LovelaceDashboardBaseConfig {}\n\nexport interface LovelaceConfig extends LovelaceDashboardBaseConfig {\n  background?: string;\n  views: LovelaceViewRawConfig[];\n}\n\nexport interface LovelaceDashboardStrategyConfig\n  extends LovelaceDashboardBaseConfig {\n  strategy: LovelaceStrategyConfig;\n}\n\nexport interface LegacyLovelaceConfig extends LovelaceConfig {\n  resources?: LovelaceResource[];\n}\n\nexport type LovelaceRawConfig =\n  | LovelaceConfig\n  | LovelaceDashboardStrategyConfig;\n\nexport function isStrategyDashboard(\n  config: LovelaceRawConfig\n): config is LovelaceDashboardStrategyConfig {\n  return \"strategy\" in config;\n}\n\nexport const fetchConfig = (\n  conn: Connection,\n  urlPath: string | null,\n  force: boolean\n): Promise<LovelaceRawConfig> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/config\",\n    url_path: urlPath,\n    force,\n  });\n\nexport const saveConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null,\n  config: LovelaceRawConfig\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/save\",\n    url_path: urlPath,\n    config,\n  });\n\nexport const deleteConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/delete\",\n    url_path: urlPath,\n  });\n"],"names":["titleCase","s","replace","_s","c","d","toUpperCase","DEFAULT_ITEMS","rowRenderer","item","html","_t","_2","title","icon","path","createViewNavigationItem","prefix","view","index","_view$path","_view$icon","_view$title","createPanelNavigationItem","hass","panel","_panel$icon","url_path","defaultPanel","localize","_decorate","customElement","_initialize","_LitElement","F","constructor","args","kind","decorators","property","attribute","key","value","type","Boolean","state","query","_t2","this","_value","navigationItems","label","helper","disabled","required","_openedChanged","_valueChanged","_filterChanged","ev","_opened","detail","navigationItemsLoaded","_loadNavigationItems","panels","Object","entries","map","id","assign","lovelacePanels","filter","component_name","viewConfigs","Promise","all","fetchConfig","connection","then","config","catch","_","undefined","panelViewConfig","Map","push","get","views","forEach","comboBox","filteredItems","changedProps","has","stopPropagation","_setValue","fireEvent","bubbles","composed","filterString","toLowerCase","length","includes","static","css","_t3","LitElement","HaNavigationSelector","reflect","conn","urlPath","force","sendMessagePromise"],"mappings":"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"}