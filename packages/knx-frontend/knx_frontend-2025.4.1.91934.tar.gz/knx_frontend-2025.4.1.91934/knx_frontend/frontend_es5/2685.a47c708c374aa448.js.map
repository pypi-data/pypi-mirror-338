{"version":3,"file":"2685.a47c708c374aa448.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-qr-code.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-qr-code.ts"],"sourcesContent":["import type { PropertyValues } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport QRCode from \"qrcode\";\nimport \"./ha-alert\";\nimport { rgb2hex } from \"../common/color/convert-color\";\n\n@customElement(\"ha-qr-code\")\nexport class HaQrCode extends LitElement {\n  @property() public data?: string;\n\n  @property({ attribute: \"error-correction-level\" })\n  public errorCorrectionLevel: \"low\" | \"medium\" | \"quartile\" | \"high\" =\n    \"medium\";\n\n  @property({ type: Number })\n  public width = 4;\n\n  @property({ type: Number })\n  public scale = 4;\n\n  @property({ type: Number })\n  public margin = 4;\n\n  @property({ attribute: false, type: Number })\n  public maskPattern?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n  @property({ attribute: \"center-image\" }) public centerImage?: string;\n\n  @state() private _error?: string;\n\n  @query(\"canvas\") private _canvas?: HTMLCanvasElement;\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    super.willUpdate(changedProperties);\n    if (\n      (changedProperties.has(\"data\") ||\n        changedProperties.has(\"scale\") ||\n        changedProperties.has(\"width\") ||\n        changedProperties.has(\"margin\") ||\n        changedProperties.has(\"maskPattern\") ||\n        changedProperties.has(\"errorCorrectionLevel\")) &&\n      this._error\n    ) {\n      this._error = undefined;\n    }\n  }\n\n  updated(changedProperties: PropertyValues) {\n    const canvas = this._canvas;\n    if (\n      canvas &&\n      this.data &&\n      (changedProperties.has(\"data\") ||\n        changedProperties.has(\"scale\") ||\n        changedProperties.has(\"width\") ||\n        changedProperties.has(\"margin\") ||\n        changedProperties.has(\"maskPattern\") ||\n        changedProperties.has(\"errorCorrectionLevel\") ||\n        changedProperties.has(\"centerImage\"))\n    ) {\n      const computedStyles = getComputedStyle(this);\n      const textRgb = computedStyles.getPropertyValue(\n        \"--rgb-primary-text-color\"\n      );\n      const backgroundRgb = computedStyles.getPropertyValue(\n        \"--rgb-card-background-color\"\n      );\n      const textHex = rgb2hex(\n        textRgb.split(\",\").map((a) => parseInt(a, 10)) as [\n          number,\n          number,\n          number,\n        ]\n      );\n      const backgroundHex = rgb2hex(\n        backgroundRgb.split(\",\").map((a) => parseInt(a, 10)) as [\n          number,\n          number,\n          number,\n        ]\n      );\n\n      QRCode.toCanvas(canvas, this.data, {\n        errorCorrectionLevel:\n          this.errorCorrectionLevel || (this.centerImage ? \"Q\" : \"M\"),\n        width: this.width,\n        scale: this.scale,\n        margin: this.margin,\n        maskPattern: this.maskPattern,\n        color: {\n          light: backgroundHex,\n          dark: textHex,\n        },\n      }).catch((err) => {\n        this._error = err.message;\n      });\n\n      if (this.centerImage) {\n        const context = this._canvas!.getContext(\"2d\");\n        const imageObj = new Image();\n        imageObj.src = this.centerImage;\n        imageObj.onload = () => {\n          context?.drawImage(\n            imageObj,\n            canvas.width * 0.375,\n            canvas.height * 0.375,\n            canvas.width / 4,\n            canvas.height / 4\n          );\n        };\n      }\n    }\n  }\n\n  render() {\n    if (!this.data) {\n      return nothing;\n    }\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n    return html`<canvas></canvas>`;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-qr-code\": HaQrCode;\n  }\n}\n","import { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { QRCodeSelector } from \"../../data/selector\";\nimport \"../ha-qr-code\";\n\n@customElement(\"ha-selector-qr_code\")\nexport class HaSelectorQRCode extends LitElement {\n  @property({ attribute: false }) public selector!: QRCodeSelector;\n\n  protected render() {\n    return html`<ha-qr-code\n      .data=${this.selector.qr_code?.data}\n      .scale=${this.selector.qr_code?.scale}\n      .errorCorrectionLevel=${this.selector.qr_code?.error_correction_level}\n      .centerImage=${this.selector.qr_code?.center_image}\n    ></ha-qr-code>`;\n  }\n\n  static styles = css`\n    ha-qr-code {\n      text-align: center;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-qr_code\": HaSelectorQRCode;\n  }\n}\n"],"names":["HaQrCode","_decorate","customElement","_initialize","_LitElement","constructor","args","F","d","kind","decorators","property","key","value","attribute","type","Number","state","query","changedProperties","_superPropGet","has","this","_error","undefined","canvas","_canvas","data","computedStyles","getComputedStyle","textRgb","getPropertyValue","backgroundRgb","textHex","rgb2hex","split","map","a","parseInt","backgroundHex","QRCode","errorCorrectionLevel","centerImage","width","scale","margin","maskPattern","color","light","dark","catch","err","message","context","getContext","imageObj","Image","src","onload","drawImage","height","html","_t","_","_t2","nothing","static","css","_t3","LitElement","HaSelectorQRCode","_this$selector$qr_cod","_this$selector$qr_cod2","_this$selector$qr_cod3","_this$selector$qr_cod4","selector","qr_code","error_correction_level","center_image"],"mappings":"mSAQaA,GAAQC,EAAAA,EAAAA,GAAA,EADpBC,EAAAA,EAAAA,IAAc,gBAAa,SAAAC,EAAAC,GAA5B,MACaJ,UAAQI,EAAoBC,WAAAA,IAAAC,GAAA,SAAAA,GAAAH,EAAA,OA0HxC,OAAAI,EA1HYP,EAAQQ,EAAA,EAAAC,KAAA,QAAAC,WAAA,EAClBC,EAAAA,EAAAA,OAAUC,IAAA,OAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEG,UAAW,4BAA2BF,IAAA,uBAAAC,KAAAA,GAAA,MAEhD,QAAQ,IAAAJ,KAAA,QAAAC,WAAA,EAETC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,UAASJ,IAAA,QAAAC,KAAAA,GAAA,OACZ,CAAC,IAAAJ,KAAA,QAAAC,WAAA,EAEfC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,UAASJ,IAAA,QAAAC,KAAAA,GAAA,OACZ,CAAC,IAAAJ,KAAA,QAAAC,WAAA,EAEfC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,UAASJ,IAAA,SAAAC,KAAAA,GAAA,OACX,CAAC,IAAAJ,KAAA,QAAAC,WAAA,EAEhBC,EAAAA,EAAAA,IAAS,CAAEG,WAAW,EAAOC,KAAMC,UAASJ,IAAA,cAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,EAG5CC,EAAAA,EAAAA,IAAS,CAAEG,UAAW,kBAAiBF,IAAA,cAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,EAEvCO,EAAAA,EAAAA,OAAOL,IAAA,SAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,EAEPQ,EAAAA,EAAAA,IAAM,WAASN,IAAA,UAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,aAAAC,MAEhB,SAAqBM,IACnBC,EAAAA,EAAAA,GA1BSpB,EAAQ,oBA0BjBoB,CA1BiB,CA0BAD,KAEdA,EAAkBE,IAAI,SACrBF,EAAkBE,IAAI,UACtBF,EAAkBE,IAAI,UACtBF,EAAkBE,IAAI,WACtBF,EAAkBE,IAAI,gBACtBF,EAAkBE,IAAI,0BACxBC,KAAKC,SAELD,KAAKC,YAASC,EAElB,GAAC,CAAAf,KAAA,SAAAG,IAAA,UAAAC,MAED,SAAQM,GACN,MAAMM,EAASH,KAAKI,QACpB,GACED,GACAH,KAAKK,OACJR,EAAkBE,IAAI,SACrBF,EAAkBE,IAAI,UACtBF,EAAkBE,IAAI,UACtBF,EAAkBE,IAAI,WACtBF,EAAkBE,IAAI,gBACtBF,EAAkBE,IAAI,yBACtBF,EAAkBE,IAAI,gBACxB,CACA,MAAMO,EAAiBC,iBAAiBP,MAClCQ,EAAUF,EAAeG,iBAC7B,4BAEIC,EAAgBJ,EAAeG,iBACnC,+BAEIE,GAAUC,EAAAA,EAAAA,IACdJ,EAAQK,MAAM,KAAKC,KAAKC,GAAMC,SAASD,EAAG,OAMtCE,GAAgBL,EAAAA,EAAAA,IACpBF,EAAcG,MAAM,KAAKC,KAAKC,GAAMC,SAASD,EAAG,OAsBlD,GAfAG,EAAAA,SAAgBf,EAAQH,KAAKK,KAAM,CACjCc,qBACEnB,KAAKmB,uBAAyBnB,KAAKoB,YAAc,IAAM,KACzDC,MAAOrB,KAAKqB,MACZC,MAAOtB,KAAKsB,MACZC,OAAQvB,KAAKuB,OACbC,YAAaxB,KAAKwB,YAClBC,MAAO,CACLC,MAAOT,EACPU,KAAMhB,KAEPiB,OAAOC,IACR7B,KAAKC,OAAS4B,EAAIC,OAAO,IAGvB9B,KAAKoB,YAAa,CACpB,MAAMW,EAAU/B,KAAKI,QAAS4B,WAAW,MACnCC,EAAW,IAAIC,MACrBD,EAASE,IAAMnC,KAAKoB,YACpBa,EAASG,OAAS,KAChBL,SAAAA,EAASM,UACPJ,EACe,KAAf9B,EAAOkB,MACS,KAAhBlB,EAAOmC,OACPnC,EAAOkB,MAAQ,EACflB,EAAOmC,OAAS,EACjB,CAEL,CACF,CACF,GAAC,CAAAnD,KAAA,SAAAG,IAAA,SAAAC,MAED,WACE,OAAKS,KAAKK,KAGNL,KAAKC,QACAsC,EAAAA,EAAAA,IAAIC,IAAAA,EAAAC,CAAA,gCAAgC,gBAAAzC,KAAKC,SAE3CsC,EAAAA,EAAAA,IAAIG,IAAAA,EAAAD,CAAA,sBALFE,EAAAA,EAMX,GAAC,CAAAxD,KAAA,QAAAyD,QAAA,EAAAtD,IAAA,SAAAC,KAAAA,GAAA,OAEesD,EAAAA,EAAAA,IAAGC,IAAAA,EAAAL,CAAA;;;;KAAA,OArHSM,EAAAA,G,+ICFjBC,GAAgBrE,EAAAA,EAAAA,GAAA,EAD5BC,EAAAA,EAAAA,IAAc,yBAAsB,SAAAC,EAAAC,GAkBpC,OAAAG,EAlBD,cAC6BH,EAAoBC,WAAAA,IAAAC,GAAA,SAAAA,GAAAH,EAAA,QAApBK,EAAA,EAAAC,KAAA,QAAAC,WAAA,EAC1BC,EAAAA,EAAAA,IAAS,CAAEG,WAAW,KAAQF,IAAA,WAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,SAAAC,MAE/B,WAAmB,IAAA0D,EAAAC,EAAAC,EAAAC,EACjB,OAAOb,EAAAA,EAAAA,IAAIC,IAAAA,EAAAC,CAAA;cAAA;eAAA;8BAAA;qBAAA;qBACoB,QADpBQ,EACDjD,KAAKqD,SAASC,eAAO,IAAAL,OAAA,EAArBA,EAAuB5C,KACD,QADK6C,EAC1BlD,KAAKqD,SAASC,eAAO,IAAAJ,OAAA,EAArBA,EAAuB5B,MACa,QADR6B,EACbnD,KAAKqD,SAASC,eAAO,IAAAH,OAAA,EAArBA,EAAuBI,uBACX,QADiCH,EACtDpD,KAAKqD,SAASC,eAAO,IAAAF,OAAA,EAArBA,EAAuBI,aAE1C,GAAC,CAAArE,KAAA,QAAAyD,QAAA,EAAAtD,IAAA,SAAAC,KAAAA,GAAA,OAEesD,EAAAA,EAAAA,IAAGH,IAAAA,EAAAD,CAAA;;;;KAAA,OAZiBM,EAAAA,G"}