{"version":3,"file":"680.dbad7a6d00d3eebd.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-floor-icon.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-floor-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/floor_registry.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/areas/show-dialog-floor-registry-detail.ts"],"sourcesContent":["import {\n  mdiHome,\n  mdiHomeFloor0,\n  mdiHomeFloor1,\n  mdiHomeFloor2,\n  mdiHomeFloor3,\n  mdiHomeFloorNegative1,\n} from \"@mdi/js\";\nimport { LitElement, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { FloorRegistryEntry } from \"../data/floor_registry\";\nimport \"./ha-icon\";\nimport \"./ha-svg-icon\";\n\nexport const floorDefaultIconPath = (\n  floor: Pick<FloorRegistryEntry, \"level\">\n) => {\n  switch (floor.level) {\n    case 0:\n      return mdiHomeFloor0;\n    case 1:\n      return mdiHomeFloor1;\n    case 2:\n      return mdiHomeFloor2;\n    case 3:\n      return mdiHomeFloor3;\n    case -1:\n      return mdiHomeFloorNegative1;\n  }\n  return mdiHome;\n};\n\n@customElement(\"ha-floor-icon\")\nexport class HaFloorIcon extends LitElement {\n  @property({ attribute: false }) public floor!: Pick<\n    FloorRegistryEntry,\n    \"icon\" | \"level\"\n  >;\n\n  @property() public icon?: string;\n\n  protected render() {\n    if (this.floor.icon) {\n      return html`<ha-icon .icon=${this.floor.icon}></ha-icon>`;\n    }\n    const defaultPath = floorDefaultIconPath(this.floor);\n\n    return html`<ha-svg-icon .path=${defaultPath}></ha-svg-icon>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-floor-icon\": HaFloorIcon;\n  }\n}\n","import type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, html } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport type { ScorableTextItem } from \"../common/string/filter/sequence-matching\";\nimport { fuzzyFilterSort } from \"../common/string/filter/sequence-matching\";\nimport type { AreaRegistryEntry } from \"../data/area_registry\";\nimport { updateAreaRegistryEntry } from \"../data/area_registry\";\nimport type {\n  DeviceEntityDisplayLookup,\n  DeviceRegistryEntry,\n} from \"../data/device_registry\";\nimport { getDeviceEntityDisplayLookup } from \"../data/device_registry\";\nimport type { EntityRegistryDisplayEntry } from \"../data/entity_registry\";\nimport type { FloorRegistryEntry } from \"../data/floor_registry\";\nimport {\n  createFloorRegistryEntry,\n  getFloorAreaLookup,\n} from \"../data/floor_registry\";\nimport { showAlertDialog } from \"../dialogs/generic/show-dialog-box\";\nimport { showFloorRegistryDetailDialog } from \"../panels/config/areas/show-dialog-floor-registry-detail\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../types\";\nimport type { HaDevicePickerDeviceFilterFunc } from \"./device/ha-device-picker\";\nimport \"./ha-combo-box\";\nimport type { HaComboBox } from \"./ha-combo-box\";\nimport \"./ha-floor-icon\";\nimport \"./ha-icon-button\";\nimport \"./ha-list-item\";\n\ntype ScorableFloorRegistryEntry = ScorableTextItem & FloorRegistryEntry;\n\nconst ADD_NEW_ID = \"___ADD_NEW___\";\nconst NO_FLOORS_ID = \"___NO_FLOORS___\";\nconst ADD_NEW_SUGGESTION_ID = \"___ADD_NEW_SUGGESTION___\";\n\nconst rowRenderer: ComboBoxLitRenderer<FloorRegistryEntry> = (item) =>\n  html`<ha-list-item\n    graphic=\"icon\"\n    class=${classMap({ \"add-new\": item.floor_id === ADD_NEW_ID })}\n  >\n    <ha-floor-icon slot=\"graphic\" .floor=${item}></ha-floor-icon>\n    ${item.name}\n  </ha-list-item>`;\n\n@customElement(\"ha-floor-picker\")\nexport class HaFloorPicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ type: Boolean, attribute: \"no-add\" })\n  public noAdd = false;\n\n  /**\n   * Show only floors with entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no floors with entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only floors with entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  /**\n   * List of floors to be excluded.\n   * @type {Array}\n   * @attr exclude-floors\n   */\n  @property({ type: Array, attribute: \"exclude-floor\" })\n  public excludeFloors?: string[];\n\n  @property({ attribute: false })\n  public deviceFilter?: HaDevicePickerDeviceFilterFunc;\n\n  @property({ attribute: false })\n  public entityFilter?: (entity: HassEntity) => boolean;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() private _opened?: boolean;\n\n  @query(\"ha-combo-box\", true) public comboBox!: HaComboBox;\n\n  private _suggestion?: string;\n\n  private _init = false;\n\n  public async open() {\n    await this.updateComplete;\n    await this.comboBox?.open();\n  }\n\n  public async focus() {\n    await this.updateComplete;\n    await this.comboBox?.focus();\n  }\n\n  private _getFloors = memoizeOne(\n    (\n      floors: FloorRegistryEntry[],\n      areas: AreaRegistryEntry[],\n      devices: DeviceRegistryEntry[],\n      entities: EntityRegistryDisplayEntry[],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"],\n      deviceFilter: this[\"deviceFilter\"],\n      entityFilter: this[\"entityFilter\"],\n      noAdd: this[\"noAdd\"],\n      excludeFloors: this[\"excludeFloors\"]\n    ): FloorRegistryEntry[] => {\n      let deviceEntityLookup: DeviceEntityDisplayLookup = {};\n      let inputDevices: DeviceRegistryEntry[] | undefined;\n      let inputEntities: EntityRegistryDisplayEntry[] | undefined;\n\n      if (\n        includeDomains ||\n        excludeDomains ||\n        includeDeviceClasses ||\n        deviceFilter ||\n        entityFilter\n      ) {\n        deviceEntityLookup = getDeviceEntityDisplayLookup(entities);\n        inputDevices = devices;\n        inputEntities = entities.filter((entity) => entity.area_id);\n\n        if (includeDomains) {\n          inputDevices = inputDevices!.filter((device) => {\n            const devEntities = deviceEntityLookup[device.id];\n            if (!devEntities || !devEntities.length) {\n              return false;\n            }\n            return deviceEntityLookup[device.id].some((entity) =>\n              includeDomains.includes(computeDomain(entity.entity_id))\n            );\n          });\n          inputEntities = inputEntities!.filter((entity) =>\n            includeDomains.includes(computeDomain(entity.entity_id))\n          );\n        }\n\n        if (excludeDomains) {\n          inputDevices = inputDevices!.filter((device) => {\n            const devEntities = deviceEntityLookup[device.id];\n            if (!devEntities || !devEntities.length) {\n              return true;\n            }\n            return entities.every(\n              (entity) =>\n                !excludeDomains.includes(computeDomain(entity.entity_id))\n            );\n          });\n          inputEntities = inputEntities!.filter(\n            (entity) =>\n              !excludeDomains.includes(computeDomain(entity.entity_id))\n          );\n        }\n\n        if (includeDeviceClasses) {\n          inputDevices = inputDevices!.filter((device) => {\n            const devEntities = deviceEntityLookup[device.id];\n            if (!devEntities || !devEntities.length) {\n              return false;\n            }\n            return deviceEntityLookup[device.id].some((entity) => {\n              const stateObj = this.hass.states[entity.entity_id];\n              if (!stateObj) {\n                return false;\n              }\n              return (\n                stateObj.attributes.device_class &&\n                includeDeviceClasses.includes(stateObj.attributes.device_class)\n              );\n            });\n          });\n          inputEntities = inputEntities!.filter((entity) => {\n            const stateObj = this.hass.states[entity.entity_id];\n            return (\n              stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class)\n            );\n          });\n        }\n\n        if (deviceFilter) {\n          inputDevices = inputDevices!.filter((device) =>\n            deviceFilter!(device)\n          );\n        }\n\n        if (entityFilter) {\n          inputDevices = inputDevices!.filter((device) => {\n            const devEntities = deviceEntityLookup[device.id];\n            if (!devEntities || !devEntities.length) {\n              return false;\n            }\n            return deviceEntityLookup[device.id].some((entity) => {\n              const stateObj = this.hass.states[entity.entity_id];\n              if (!stateObj) {\n                return false;\n              }\n              return entityFilter(stateObj);\n            });\n          });\n          inputEntities = inputEntities!.filter((entity) => {\n            const stateObj = this.hass.states[entity.entity_id];\n            if (!stateObj) {\n              return false;\n            }\n            return entityFilter!(stateObj);\n          });\n        }\n      }\n\n      let outputFloors = floors;\n\n      let areaIds: string[] | undefined;\n\n      if (inputDevices) {\n        areaIds = inputDevices\n          .filter((device) => device.area_id)\n          .map((device) => device.area_id!);\n      }\n\n      if (inputEntities) {\n        areaIds = (areaIds ?? []).concat(\n          inputEntities\n            .filter((entity) => entity.area_id)\n            .map((entity) => entity.area_id!)\n        );\n      }\n\n      if (areaIds) {\n        const floorAreaLookup = getFloorAreaLookup(areas);\n        outputFloors = outputFloors.filter((floor) =>\n          floorAreaLookup[floor.floor_id]?.some((area) =>\n            areaIds!.includes(area.area_id)\n          )\n        );\n      }\n\n      if (excludeFloors) {\n        outputFloors = outputFloors.filter(\n          (floor) => !excludeFloors!.includes(floor.floor_id)\n        );\n      }\n\n      if (!outputFloors.length) {\n        outputFloors = [\n          {\n            floor_id: NO_FLOORS_ID,\n            name: this.hass.localize(\"ui.components.floor-picker.no_floors\"),\n            icon: null,\n            level: null,\n            aliases: [],\n            created_at: 0,\n            modified_at: 0,\n          },\n        ];\n      }\n\n      return noAdd\n        ? outputFloors\n        : [\n            ...outputFloors,\n            {\n              floor_id: ADD_NEW_ID,\n              name: this.hass.localize(\"ui.components.floor-picker.add_new\"),\n              icon: \"mdi:plus\",\n              level: null,\n              aliases: [],\n              created_at: 0,\n              modified_at: 0,\n            },\n          ];\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      (!this._init && this.hass) ||\n      (this._init && changedProps.has(\"_opened\") && this._opened)\n    ) {\n      this._init = true;\n      const floors = this._getFloors(\n        Object.values(this.hass.floors),\n        Object.values(this.hass.areas),\n        Object.values(this.hass.devices),\n        Object.values(this.hass.entities),\n        this.includeDomains,\n        this.excludeDomains,\n        this.includeDeviceClasses,\n        this.deviceFilter,\n        this.entityFilter,\n        this.noAdd,\n        this.excludeFloors\n      ).map((floor) => ({\n        ...floor,\n        strings: [floor.floor_id, floor.name, ...floor.aliases],\n      }));\n      this.comboBox.items = floors;\n      this.comboBox.filteredItems = floors;\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        .helper=${this.helper}\n        item-value-path=\"floor_id\"\n        item-id-path=\"floor_id\"\n        item-label-path=\"name\"\n        .value=${this._value}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .label=${this.label === undefined && this.hass\n          ? this.hass.localize(\"ui.components.floor-picker.floor\")\n          : this.label}\n        .placeholder=${this.placeholder\n          ? this.hass.floors[this.placeholder]?.name\n          : undefined}\n        .renderer=${rowRenderer}\n        @filter-changed=${this._filterChanged}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._floorChanged}\n      >\n      </ha-combo-box>\n    `;\n  }\n\n  private _filterChanged(ev: CustomEvent): void {\n    const target = ev.target as HaComboBox;\n    const filterString = ev.detail.value;\n    if (!filterString) {\n      this.comboBox.filteredItems = this.comboBox.items;\n      return;\n    }\n\n    const filteredItems = fuzzyFilterSort<ScorableFloorRegistryEntry>(\n      filterString,\n      target.items?.filter(\n        (item) => ![NO_FLOORS_ID, ADD_NEW_ID].includes(item.label_id)\n      ) || []\n    );\n    if (filteredItems.length === 0) {\n      if (this.noAdd) {\n        this.comboBox.filteredItems = [\n          {\n            floor_id: NO_FLOORS_ID,\n            name: this.hass.localize(\"ui.components.floor-picker.no_match\"),\n            icon: null,\n            level: null,\n            aliases: [],\n            created_at: 0,\n            modified_at: 0,\n          },\n        ] as FloorRegistryEntry[];\n      } else {\n        this._suggestion = filterString;\n        this.comboBox.filteredItems = [\n          {\n            floor_id: ADD_NEW_SUGGESTION_ID,\n            name: this.hass.localize(\n              \"ui.components.floor-picker.add_new_sugestion\",\n              { name: this._suggestion }\n            ),\n            icon: \"mdi:plus\",\n            level: null,\n            aliases: [],\n            created_at: 0,\n            modified_at: 0,\n          },\n        ] as FloorRegistryEntry[];\n      }\n    } else {\n      this.comboBox.filteredItems = filteredItems;\n    }\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _floorChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    let newValue = ev.detail.value;\n\n    if (newValue === NO_FLOORS_ID) {\n      newValue = \"\";\n      this.comboBox.setInputValue(\"\");\n      return;\n    }\n\n    if (![ADD_NEW_SUGGESTION_ID, ADD_NEW_ID].includes(newValue)) {\n      if (newValue !== this._value) {\n        this._setValue(newValue);\n      }\n      return;\n    }\n\n    (ev.target as any).value = this._value;\n\n    this.hass.loadFragmentTranslation(\"config\");\n\n    showFloorRegistryDetailDialog(this, {\n      suggestedName: newValue === ADD_NEW_SUGGESTION_ID ? this._suggestion : \"\",\n      createEntry: async (values, addedAreas) => {\n        try {\n          const floor = await createFloorRegistryEntry(this.hass, values);\n          addedAreas.forEach((areaId) => {\n            updateAreaRegistryEntry(this.hass, areaId, {\n              floor_id: floor.floor_id,\n            });\n          });\n          const floors = [...Object.values(this.hass.floors), floor];\n          this.comboBox.filteredItems = this._getFloors(\n            floors,\n            Object.values(this.hass.areas)!,\n            Object.values(this.hass.devices)!,\n            Object.values(this.hass.entities)!,\n            this.includeDomains,\n            this.excludeDomains,\n            this.includeDeviceClasses,\n            this.deviceFilter,\n            this.entityFilter,\n            this.noAdd,\n            this.excludeFloors\n          );\n          await this.updateComplete;\n          await this.comboBox.updateComplete;\n          this._setValue(floor.floor_id);\n        } catch (err: any) {\n          showAlertDialog(this, {\n            title: this.hass.localize(\n              \"ui.components.floor-picker.failed_create_floor\"\n            ),\n            text: err.message,\n          });\n        }\n      },\n    });\n\n    this._suggestion = undefined;\n    this.comboBox.setInputValue(\"\");\n  }\n\n  private _setValue(value?: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-floor-picker\": HaFloorPicker;\n  }\n}\n","import { stringCompare } from \"../common/string/compare\";\nimport type { HomeAssistant } from \"../types\";\nimport type { AreaRegistryEntry } from \"./area_registry\";\nimport type { RegistryEntry } from \"./registry\";\n\nexport { subscribeAreaRegistry } from \"./ws-area_registry\";\n\nexport interface FloorRegistryEntry extends RegistryEntry {\n  floor_id: string;\n  name: string;\n  level: number | null;\n  icon: string | null;\n  aliases: string[];\n}\n\nexport type FloorAreaLookup = Record<string, AreaRegistryEntry[]>;\n\nexport interface FloorRegistryEntryMutableParams {\n  name: string;\n  level?: number | null;\n  icon?: string | null;\n  aliases?: string[];\n}\n\nexport const createFloorRegistryEntry = (\n  hass: HomeAssistant,\n  values: FloorRegistryEntryMutableParams\n) =>\n  hass.callWS<FloorRegistryEntry>({\n    type: \"config/floor_registry/create\",\n    ...values,\n  });\n\nexport const updateFloorRegistryEntry = (\n  hass: HomeAssistant,\n  floorId: string,\n  updates: Partial<FloorRegistryEntryMutableParams>\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/floor_registry/update\",\n    floor_id: floorId,\n    ...updates,\n  });\n\nexport const deleteFloorRegistryEntry = (\n  hass: HomeAssistant,\n  floorId: string\n) =>\n  hass.callWS({\n    type: \"config/floor_registry/delete\",\n    floor_id: floorId,\n  });\n\nexport const getFloorAreaLookup = (\n  areas: AreaRegistryEntry[]\n): FloorAreaLookup => {\n  const floorAreaLookup: FloorAreaLookup = {};\n  for (const area of areas) {\n    if (!area.floor_id) {\n      continue;\n    }\n    if (!(area.floor_id in floorAreaLookup)) {\n      floorAreaLookup[area.floor_id] = [];\n    }\n    floorAreaLookup[area.floor_id].push(area);\n  }\n  return floorAreaLookup;\n};\n\nexport const floorCompare =\n  (entries?: FloorRegistryEntry[], order?: string[]) =>\n  (a: string, b: string) => {\n    const indexA = order ? order.indexOf(a) : -1;\n    const indexB = order ? order.indexOf(b) : -1;\n    if (indexA === -1 && indexB === -1) {\n      const nameA = entries?.[a]?.name ?? a;\n      const nameB = entries?.[b]?.name ?? b;\n      return stringCompare(nameA, nameB);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  };\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport type {\n  FloorRegistryEntry,\n  FloorRegistryEntryMutableParams,\n} from \"../../../data/floor_registry\";\n\nexport interface FloorRegistryDetailDialogParams {\n  entry?: FloorRegistryEntry;\n  suggestedName?: string;\n  createEntry?: (\n    values: FloorRegistryEntryMutableParams,\n    addedAreas: Set<string>\n  ) => Promise<unknown>;\n  updateEntry?: (\n    updates: Partial<FloorRegistryEntryMutableParams>,\n    addedAreas: Set<string>,\n    removedAreas: Set<string>\n  ) => Promise<unknown>;\n}\n\nexport const loadFloorRegistryDetailDialog = () =>\n  import(\"./dialog-floor-registry-detail\");\n\nexport const showFloorRegistryDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: FloorRegistryDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-floor-registry-detail\",\n    dialogImport: loadFloorRegistryDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n"],"names":["floorDefaultIconPath","floor","level","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","this","icon","html","_t","_","defaultPath","_t2","LitElement","ADD_NEW_ID","NO_FLOORS_ID","ADD_NEW_SUGGESTION_ID","rowRenderer","item","classMap","floor_id","name","type","Boolean","Array","state","query","_this$comboBox","updateComplete","comboBox","open","_this$comboBox2","focus","memoizeOne","floors","areas","devices","entities","includeDomains","excludeDomains","includeDeviceClasses","deviceFilter","entityFilter","noAdd","excludeFloors","inputDevices","inputEntities","deviceEntityLookup","getDeviceEntityDisplayLookup","filter","entity","area_id","device","devEntities","id","length","some","includes","computeDomain","entity_id","every","stateObj","hass","states","attributes","device_class","areaIds","outputFloors","map","concat","floorAreaLookup","getFloorAreaLookup","_floorAreaLookup$floo","area","localize","aliases","created_at","modified_at","changedProps","_init","has","_opened","_getFloors","Object","values","assign","strings","items","filteredItems","_this$hass$floors$thi","helper","_value","disabled","required","undefined","label","placeholder","_filterChanged","_openedChanged","_floorChanged","ev","_target$items","target","filterString","detail","fuzzyFilterSort","label_id","_suggestion","stopPropagation","newValue","setInputValue","loadFragmentTranslation","showFloorRegistryDetailDialog","suggestedName","createEntry","async","addedAreas","createFloorRegistryEntry","forEach","areaId","updateAreaRegistryEntry","_setValue","err","showAlertDialog","title","text","message","setTimeout","fireEvent","callWS","push","loadFloorRegistryDetailDialog","element","systemLogDetailParams","dialogTag","dialogImport","dialogParams"],"mappings":"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"}