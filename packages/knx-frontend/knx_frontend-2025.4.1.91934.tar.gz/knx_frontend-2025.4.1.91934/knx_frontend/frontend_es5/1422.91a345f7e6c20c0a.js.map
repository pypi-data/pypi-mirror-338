{"version":3,"file":"1422.91a345f7e6c20c0a.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_select-form.ts"],"sourcesContent":["import \"@material/mwc-list/mwc-list\";\nimport { mdiDelete, mdiDrag } from \"@mdi/js\";\nimport type { CSSResultGroup } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-button\";\nimport \"../../../../components/ha-icon-button\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-list-item\";\nimport \"../../../../components/ha-sortable\";\nimport \"../../../../components/ha-textfield\";\nimport type { HaTextField } from \"../../../../components/ha-textfield\";\nimport type { InputSelect } from \"../../../../data/input_select\";\nimport { showConfirmationDialog } from \"../../../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_select-form\")\nclass HaInputSelectForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputSelect;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _options: string[] = [];\n\n  @query(\"#option_input\", true) private _optionInput?: HaTextField;\n\n  private _optionMoved(ev: CustomEvent): void {\n    ev.stopPropagation();\n    const { oldIndex, newIndex } = ev.detail;\n    const options = this._options.concat();\n    const option = options.splice(oldIndex, 1)[0];\n    options.splice(newIndex, 0, option);\n\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, options },\n    });\n  }\n\n  set item(item: InputSelect) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._options = item.options || [];\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._options = [];\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          dialogInitialFocus\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          .value=${this._name}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <div class=\"header\">\n          ${this.hass!.localize(\n            \"ui.dialogs.helper_settings.input_select.options\"\n          )}:\n        </div>\n        <ha-sortable @item-moved=${this._optionMoved} handle-selector=\".handle\">\n          <mwc-list class=\"options\">\n            ${this._options.length\n              ? repeat(\n                  this._options,\n                  (option) => option,\n                  (option, index) => html`\n                    <ha-list-item class=\"option\" hasMeta>\n                      <div class=\"optioncontent\">\n                        <div class=\"handle\">\n                          <ha-svg-icon .path=${mdiDrag}></ha-svg-icon>\n                        </div>\n                        ${option}\n                      </div>\n                      <ha-icon-button\n                        slot=\"meta\"\n                        .index=${index}\n                        .label=${this.hass.localize(\n                          \"ui.dialogs.helper_settings.input_select.remove_option\"\n                        )}\n                        @click=${this._removeOption}\n                        .path=${mdiDelete}\n                      ></ha-icon-button>\n                    </ha-list-item>\n                  `\n                )\n              : html`\n                  <ha-list-item noninteractive>\n                    ${this.hass!.localize(\n                      \"ui.dialogs.helper_settings.input_select.no_options\"\n                    )}\n                  </ha-list-item>\n                `}\n          </mwc-list>\n        </ha-sortable>\n        <div class=\"layout horizontal center\">\n          <ha-textfield\n            class=\"flex-auto\"\n            id=\"option_input\"\n            .label=${this.hass!.localize(\n              \"ui.dialogs.helper_settings.input_select.add_option\"\n            )}\n            @keydown=${this._handleKeyAdd}\n          ></ha-textfield>\n          <ha-button @click=${this._addOption}\n            >${this.hass!.localize(\n              \"ui.dialogs.helper_settings.input_select.add\"\n            )}</ha-button\n          >\n        </div>\n      </div>\n    `;\n  }\n\n  private _handleKeyAdd(ev: KeyboardEvent) {\n    ev.stopPropagation();\n    if (ev.key !== \"Enter\") {\n      return;\n    }\n    this._addOption();\n  }\n\n  private _addOption() {\n    const input = this._optionInput;\n    if (!input?.value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, options: [...this._options, input.value] },\n    });\n    input.value = \"\";\n  }\n\n  private async _removeOption(ev: Event) {\n    const index = (ev.target as any).index;\n    if (\n      !(await showConfirmationDialog(this, {\n        title: this.hass.localize(\n          \"ui.dialogs.helper_settings.input_select.confirm_delete.delete\"\n        ),\n        text: this.hass.localize(\n          \"ui.dialogs.helper_settings.input_select.confirm_delete.prompt\"\n        ),\n        destructive: true,\n      }))\n    ) {\n      return;\n    }\n    const options = [...this._options];\n    options.splice(index, 1);\n    fireEvent(this, \"value-changed\", {\n      value: { ...this._item, options },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .option {\n          border: 1px solid var(--divider-color);\n          border-radius: 4px;\n          margin-top: 4px;\n          --mdc-icon-button-size: 24px;\n          --mdc-ripple-color: transparent;\n          --mdc-list-side-padding: 16px;\n          cursor: default;\n          background-color: var(--card-background-color);\n        }\n        mwc-button {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n        ha-textfield {\n          display: block;\n          margin-bottom: 8px;\n        }\n        #option_input {\n          margin-top: 8px;\n        }\n        .header {\n          margin-top: 8px;\n          margin-bottom: 8px;\n        }\n        .handle {\n          cursor: move; /* fallback if grab cursor is unsupported */\n          cursor: grab;\n          padding-right: 12px;\n          padding-inline-end: 12px;\n          padding-inline-start: initial;\n        }\n        .handle ha-svg-icon {\n          pointer-events: none;\n          height: 24px;\n        }\n        .optioncontent {\n          display: flex;\n          align-items: center;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_select-form\": HaInputSelectForm;\n  }\n}\n"],"names":["_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","state","query","ev","stopPropagation","oldIndex","newIndex","detail","options","this","_options","concat","option","splice","fireEvent","Object","assign","_item","item","_name","name","_icon","icon","updateComplete","then","_this$shadowRoot","shadowRoot","querySelector","focus","hass","html","_t","_","localize","_valueChanged","_optionMoved","length","repeat","index","_t2","_removeOption","_t3","_handleKeyAdd","_addOption","nothing","input","_optionInput","target","showConfirmationDialog","title","text","destructive","_ev$detail","new","configValue","newValue","static","haStyle","css","_t4","LitElement"],"mappings":"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"}