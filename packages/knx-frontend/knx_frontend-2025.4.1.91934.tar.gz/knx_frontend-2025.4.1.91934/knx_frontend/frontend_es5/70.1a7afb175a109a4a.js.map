{"version":3,"file":"70.1a7afb175a109a4a.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/dialogs/image-cropper-dialog/image-cropper-dialog.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport Cropper from \"cropperjs\";\n// @ts-ignore\nimport cropperCss from \"cropperjs/dist/cropper.css\";\nimport type { CSSResultGroup, PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, nothing, LitElement, unsafeCSS } from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport type { HaImageCropperDialogParams } from \"./show-image-cropper-dialog\";\n\n@customElement(\"image-cropper-dialog\")\nexport class HaImagecropperDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: HaImageCropperDialogParams;\n\n  @state() private _open = false;\n\n  @query(\"img\", true) private _image!: HTMLImageElement;\n\n  private _cropper?: Cropper;\n\n  @state() private _isTargetAspectRatio?: boolean;\n\n  public showDialog(params: HaImageCropperDialogParams): void {\n    this._params = params;\n    this._open = true;\n  }\n\n  public closeDialog() {\n    this._open = false;\n    this._params = undefined;\n    this._cropper?.destroy();\n    this._cropper = undefined;\n    this._isTargetAspectRatio = false;\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    if (!changedProperties.has(\"_params\") || !this._params) {\n      return;\n    }\n    if (!this._cropper) {\n      this._image.src = URL.createObjectURL(this._params.file);\n      this._cropper = new Cropper(this._image, {\n        aspectRatio: this._params.options.aspectRatio,\n        viewMode: 1,\n        dragMode: \"move\",\n        minCropBoxWidth: 50,\n        ready: () => {\n          this._isTargetAspectRatio = this._checkMatchAspectRatio();\n          URL.revokeObjectURL(this._image!.src);\n        },\n      });\n    } else {\n      this._cropper.replace(URL.createObjectURL(this._params.file));\n    }\n  }\n\n  private _checkMatchAspectRatio(): boolean {\n    const targetRatio = this._params?.options.aspectRatio;\n    if (!targetRatio) {\n      return true;\n    }\n    const imageData = this._cropper!.getImageData();\n    if (imageData.aspectRatio === targetRatio) {\n      return true;\n    }\n\n    // If the image is not exactly the aspect ratio see if it is within a pixel.\n    if (imageData.naturalWidth > imageData.naturalHeight) {\n      const targetHeight = imageData.naturalWidth / targetRatio;\n      return Math.abs(targetHeight - imageData.naturalHeight) <= 1;\n    }\n    const targetWidth = imageData.naturalHeight * targetRatio;\n    return Math.abs(targetWidth - imageData.naturalWidth) <= 1;\n  }\n\n  protected render(): TemplateResult {\n    return html`<ha-dialog\n      @closed=${this.closeDialog}\n      scrimClickAction\n      escapeKeyAction\n      .open=${this._open}\n    >\n      <div\n        class=\"container ${classMap({\n          round: Boolean(this._params?.options.round),\n        })}\"\n      >\n        <img alt=${this.hass.localize(\"ui.dialogs.image_cropper.crop_image\")} />\n      </div>\n      <mwc-button slot=\"secondaryAction\" @click=${this.closeDialog}>\n        ${this.hass.localize(\"ui.common.cancel\")}\n      </mwc-button>\n      ${this._isTargetAspectRatio\n        ? html`<mwc-button slot=\"primaryAction\" @click=${this._useOriginal}>\n            ${this.hass.localize(\"ui.dialogs.image_cropper.use_original\")}\n          </mwc-button>`\n        : nothing}\n\n      <mwc-button slot=\"primaryAction\" @click=${this._cropImage}>\n        ${this.hass.localize(\"ui.dialogs.image_cropper.crop\")}\n      </mwc-button>\n    </ha-dialog>`;\n  }\n\n  private _cropImage() {\n    this._cropper!.getCroppedCanvas().toBlob(\n      (blob) => {\n        if (!blob) {\n          return;\n        }\n        const file = new File([blob], this._params!.file.name, {\n          type: this._params!.options.type || this._params!.file.type,\n        });\n        this._params!.croppedCallback(file);\n        this.closeDialog();\n      },\n      this._params!.options.type || this._params!.file.type,\n      this._params!.options.quality\n    );\n  }\n\n  private _useOriginal() {\n    this._params!.croppedCallback(this._params!.file);\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ${unsafeCSS(cropperCss)}\n        .container {\n          max-width: 640px;\n        }\n        img {\n          max-width: 100%;\n        }\n        .container.round .cropper-view-box,\n        .container.round .cropper-face {\n          border-radius: 50%;\n        }\n        .cropper-line,\n        .cropper-point,\n        .cropper-point.point-se::before {\n          background-color: var(--primary-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"image-cropper-dialog\": HaImagecropperDialog;\n  }\n}\n"],"names":["HaImagecropperDialog","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","state","query","params","this","_params","_open","_this$_cropper","undefined","_cropper","destroy","_isTargetAspectRatio","changedProperties","has","replace","URL","createObjectURL","file","_image","src","Cropper","aspectRatio","options","viewMode","dragMode","minCropBoxWidth","ready","_checkMatchAspectRatio","revokeObjectURL","_this$_params","targetRatio","imageData","getImageData","naturalWidth","naturalHeight","targetHeight","Math","abs","targetWidth","_this$_params2","html","_t","_","closeDialog","classMap","round","Boolean","hass","localize","_t2","_useOriginal","nothing","_cropImage","getCroppedCanvas","toBlob","blob","File","name","type","croppedCallback","quality","static","haStyleDialog","css","_t3","unsafeCSS","cropperCss","LitElement"],"mappings":"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"}