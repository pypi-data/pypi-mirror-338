{"version":3,"file":"3979.739f9ab0433b9a84.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/valid_entity_id.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/entity/ha-entities-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-entity.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/util/time-cache-function-promise.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity_sources.ts","webpack://knx-frontend/../src/directives/private-async-helpers.ts","webpack://knx-frontend/../src/directives/until.ts"],"sourcesContent":["const validEntityId = /^(\\w+)\\.(\\w+)$/;\n\nexport const isValidEntityId = (entityId: string) =>\n  validEntityId.test(entityId);\n","import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { isValidEntityId } from \"../../common/entity/valid_entity_id\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../../types\";\nimport \"./ha-entity-picker\";\nimport type { HaEntityPickerEntityFilterFunc } from \"./ha-entity-picker\";\n\n@customElement(\"ha-entities-picker\")\nclass HaEntitiesPickerLight extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Array }) public value?: string[];\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property() public helper?: string;\n\n  /**\n   * Show entities from specific domains.\n   * @type {string}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  /**\n   * Show only entities with these unit of measuments.\n   * @type {Array}\n   * @attr include-unit-of-measurement\n   */\n  @property({ type: Array, attribute: \"include-unit-of-measurement\" })\n  public includeUnitOfMeasurement?: string[];\n\n  /**\n   * List of allowed entities to show. Will ignore all other filters.\n   * @type {Array}\n   * @attr include-entities\n   */\n  @property({ type: Array, attribute: \"include-entities\" })\n  public includeEntities?: string[];\n\n  /**\n   * List of entities to be excluded.\n   * @type {Array}\n   * @attr exclude-entities\n   */\n  @property({ type: Array, attribute: \"exclude-entities\" })\n  public excludeEntities?: string[];\n\n  @property({ attribute: \"picked-entity-label\" })\n  public pickedEntityLabel?: string;\n\n  @property({ attribute: \"pick-entity-label\" }) public pickEntityLabel?: string;\n\n  @property({ attribute: false })\n  public entityFilter?: HaEntityPickerEntityFilterFunc;\n\n  @property({ attribute: false, type: Array }) public createDomains?: string[];\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const currentEntities = this._currentEntities;\n    return html`\n      ${currentEntities.map(\n        (entityId) => html`\n          <div>\n            <ha-entity-picker\n              allow-custom-entity\n              .curValue=${entityId}\n              .hass=${this.hass}\n              .includeDomains=${this.includeDomains}\n              .excludeDomains=${this.excludeDomains}\n              .includeEntities=${this.includeEntities}\n              .excludeEntities=${this.excludeEntities}\n              .includeDeviceClasses=${this.includeDeviceClasses}\n              .includeUnitOfMeasurement=${this.includeUnitOfMeasurement}\n              .entityFilter=${this.entityFilter}\n              .value=${entityId}\n              .label=${this.pickedEntityLabel}\n              .disabled=${this.disabled}\n              .createDomains=${this.createDomains}\n              @value-changed=${this._entityChanged}\n            ></ha-entity-picker>\n          </div>\n        `\n      )}\n      <div>\n        <ha-entity-picker\n          allow-custom-entity\n          .hass=${this.hass}\n          .includeDomains=${this.includeDomains}\n          .excludeDomains=${this.excludeDomains}\n          .includeEntities=${this.includeEntities}\n          .excludeEntities=${this._excludeEntities(\n            this.value,\n            this.excludeEntities\n          )}\n          .includeDeviceClasses=${this.includeDeviceClasses}\n          .includeUnitOfMeasurement=${this.includeUnitOfMeasurement}\n          .entityFilter=${this.entityFilter}\n          .label=${this.pickEntityLabel}\n          .helper=${this.helper}\n          .disabled=${this.disabled}\n          .createDomains=${this.createDomains}\n          .required=${this.required && !currentEntities.length}\n          @value-changed=${this._addEntity}\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _excludeEntities = memoizeOne(\n    (\n      value: string[] | undefined,\n      excludeEntities: string[] | undefined\n    ): string[] | undefined => {\n      if (value === undefined) {\n        return excludeEntities;\n      }\n      return [...(excludeEntities || []), ...value];\n    }\n  );\n\n  private get _currentEntities() {\n    return this.value || [];\n  }\n\n  private async _updateEntities(entities) {\n    this.value = entities;\n\n    fireEvent(this, \"value-changed\", {\n      value: entities,\n    });\n  }\n\n  private _entityChanged(event: ValueChangedEvent<string>) {\n    event.stopPropagation();\n    const curValue = (event.currentTarget as any).curValue;\n    const newValue = event.detail.value;\n    if (\n      newValue === curValue ||\n      (newValue !== undefined && !isValidEntityId(newValue))\n    ) {\n      return;\n    }\n    const currentEntities = this._currentEntities;\n    if (!newValue || currentEntities.includes(newValue)) {\n      this._updateEntities(currentEntities.filter((ent) => ent !== curValue));\n      return;\n    }\n    this._updateEntities(\n      currentEntities.map((ent) => (ent === curValue ? newValue : ent))\n    );\n  }\n\n  private async _addEntity(event: ValueChangedEvent<string>) {\n    event.stopPropagation();\n    const toAdd = event.detail.value;\n    if (!toAdd) {\n      return;\n    }\n    (event.currentTarget as any).value = \"\";\n    if (!toAdd) {\n      return;\n    }\n    const currentEntities = this._currentEntities;\n    if (currentEntities.includes(toAdd)) {\n      return;\n    }\n\n    this._updateEntities([...currentEntities, toAdd]);\n  }\n\n  static override styles = css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entities-picker\": HaEntitiesPickerLight;\n  }\n}\n","import type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { EntitySources } from \"../../data/entity_sources\";\nimport { fetchEntitySourcesWithCache } from \"../../data/entity_sources\";\nimport type { EntitySelector } from \"../../data/selector\";\nimport {\n  filterSelectorEntities,\n  computeCreateDomains,\n} from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../entity/ha-entities-picker\";\nimport \"../entity/ha-entity-picker\";\n\n@customElement(\"ha-selector-entity\")\nexport class HaEntitySelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: EntitySelector;\n\n  @state() private _entitySources?: EntitySources;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @state() private _createDomains: string[] | undefined;\n\n  private _hasIntegration(selector: EntitySelector) {\n    return (\n      selector.entity?.filter &&\n      ensureArray(selector.entity.filter).some((filter) => filter.integration)\n    );\n  }\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    if (changedProperties.has(\"selector\") && this.value !== undefined) {\n      if (this.selector.entity?.multiple && !Array.isArray(this.value)) {\n        this.value = [this.value];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      } else if (!this.selector.entity?.multiple && Array.isArray(this.value)) {\n        this.value = this.value[0];\n        fireEvent(this, \"value-changed\", { value: this.value });\n      }\n    }\n  }\n\n  protected render() {\n    if (this._hasIntegration(this.selector) && !this._entitySources) {\n      return nothing;\n    }\n\n    if (!this.selector.entity?.multiple) {\n      return html`<ha-entity-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .includeEntities=${this.selector.entity?.include_entities}\n        .excludeEntities=${this.selector.entity?.exclude_entities}\n        .entityFilter=${this._filterEntities}\n        .createDomains=${this._createDomains}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        allow-custom-entity\n      ></ha-entity-picker>`;\n    }\n\n    return html`\n      ${this.label ? html`<label>${this.label}</label>` : \"\"}\n      <ha-entities-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .includeEntities=${this.selector.entity.include_entities}\n        .excludeEntities=${this.selector.entity.exclude_entities}\n        .entityFilter=${this._filterEntities}\n        .createDomains=${this._createDomains}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-entities-picker>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (\n      changedProps.has(\"selector\") &&\n      this._hasIntegration(this.selector) &&\n      !this._entitySources\n    ) {\n      fetchEntitySourcesWithCache(this.hass).then((sources) => {\n        this._entitySources = sources;\n      });\n    }\n    if (changedProps.has(\"selector\")) {\n      this._createDomains = computeCreateDomains(this.selector);\n    }\n  }\n\n  private _filterEntities = (entity: HassEntity): boolean => {\n    if (!this.selector?.entity?.filter) {\n      return true;\n    }\n    return ensureArray(this.selector.entity.filter).some((filter) =>\n      filterSelectorEntities(filter, entity, this._entitySources)\n    );\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-entity\": HaEntitySelector;\n  }\n}\n","import type { HomeAssistant } from \"../../types\";\n\ninterface CacheResult<T> {\n  result: T;\n  cacheKey: any;\n}\n\n/**\n * Caches a result of a promise for X time. Allows optional extra validation\n * check to invalidate the cache.\n * @param cacheKey the key to store the cache\n * @param cacheTime the time to cache the result\n * @param func the function to fetch the data\n * @param generateCacheKey optional function to generate a cache key based on current hass + cached result. Cache is invalid if generates a different cache key.\n * @param hass Home Assistant object\n * @param args extra arguments to pass to the function to fetch the data\n * @returns\n */\nexport const timeCachePromiseFunc = async <T>(\n  cacheKey: string,\n  cacheTime: number,\n  func: (hass: HomeAssistant, ...args: any[]) => Promise<T>,\n  generateCacheKey:\n    | ((hass: HomeAssistant, lastResult: T) => unknown)\n    | undefined,\n  hass: HomeAssistant,\n  ...args: any[]\n): Promise<T> => {\n  const anyHass = hass as any;\n  const lastResult: Promise<CacheResult<T>> | CacheResult<T> | undefined =\n    anyHass[cacheKey];\n\n  const checkCachedResult = (result: CacheResult<T>): T | Promise<T> => {\n    if (\n      !generateCacheKey ||\n      generateCacheKey(hass, result.result) === result.cacheKey\n    ) {\n      return result.result;\n    }\n\n    anyHass[cacheKey] = undefined;\n    return timeCachePromiseFunc(\n      cacheKey,\n      cacheTime,\n      func,\n      generateCacheKey,\n      hass,\n      ...args\n    );\n  };\n\n  // If we have a cached result, return it if it's still valid\n  if (lastResult) {\n    return lastResult instanceof Promise\n      ? lastResult.then(checkCachedResult)\n      : checkCachedResult(lastResult);\n  }\n\n  const resultPromise = func(hass, ...args);\n  anyHass[cacheKey] = resultPromise;\n\n  resultPromise.then(\n    // When successful, set timer to clear cache\n    (result) => {\n      anyHass[cacheKey] = {\n        result,\n        cacheKey: generateCacheKey?.(hass, result),\n      };\n      setTimeout(() => {\n        anyHass[cacheKey] = undefined;\n      }, cacheTime);\n    },\n    // On failure, clear cache right away\n    () => {\n      anyHass[cacheKey] = undefined;\n    }\n  );\n\n  return resultPromise;\n};\n","import { timeCachePromiseFunc } from \"../common/util/time-cache-function-promise\";\nimport type { HomeAssistant } from \"../types\";\n\ninterface EntitySource {\n  domain: string;\n}\n\nexport type EntitySources = Record<string, EntitySource>;\n\nconst fetchEntitySources = (hass: HomeAssistant): Promise<EntitySources> =>\n  hass.callWS({ type: \"entity/source\" });\n\nexport const fetchEntitySourcesWithCache = (\n  hass: HomeAssistant\n): Promise<EntitySources> =>\n  timeCachePromiseFunc(\n    \"_entitySources\",\n    // cache for 30 seconds\n    30000,\n    fetchEntitySources,\n    // We base the cache on number of states. If number of states\n    // changes we force a refresh\n    (hass2) => Object.keys(hass2.states).length,\n    hass\n  );\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>) {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n"],"names":["validEntityId","isValidEntityId","entityId","test","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Array","Boolean","this","hass","nothing","currentEntities","_currentEntities","html","_t","_","map","_t2","includeDomains","excludeDomains","includeEntities","excludeEntities","includeDeviceClasses","includeUnitOfMeasurement","entityFilter","pickedEntityLabel","disabled","createDomains","_entityChanged","_excludeEntities","pickEntityLabel","helper","required","length","_addEntity","memoizeOne","undefined","entities","fireEvent","event","stopPropagation","curValue","currentTarget","newValue","detail","includes","_updateEntities","ent","filter","toAdd","static","css","_t3","LitElement","HaEntitySelector","state","selector","_selector$entity","entity","ensureArray","some","integration","changedProperties","_this$selector$entity","_this$selector$entity2","has","multiple","isArray","_this$selector$entity3","_this$selector$entity4","_this$selector$entity5","_hasIntegration","_entitySources","label","include_entities","exclude_entities","_filterEntities","_createDomains","changedProps","_superPropGet","fetchEntitySourcesWithCache","then","sources","computeCreateDomains","_this$selector","filterSelectorEntities","timeCachePromiseFunc","async","cacheKey","cacheTime","func","generateCacheKey","anyHass","lastResult","checkCachedResult","result","Promise","resultPromise","setTimeout","fetchEntitySources","callWS","hass2","Object","keys","states","s","t","G","disconnect","reconnect","deref","i","Y","Z","get","pause","resume","call","n","h","c","arguments","_$C_t","_$Cwt","_$Cq","r","_$CK","e","render","find","update","o","isConnected","disconnected","resolve","indexOf","setValue","reconnected","m"],"mappings":"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"}