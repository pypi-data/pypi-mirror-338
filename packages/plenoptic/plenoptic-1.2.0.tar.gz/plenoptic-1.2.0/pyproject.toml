[project]
name = "plenoptic"
dynamic = ["version"]
authors = [{name="Plenoptic authors"}]
description = "Python library for model-based stimulus synthesis."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
]
keywords = ['neuroscience', 'pytorch', 'visual information processing', 'machine learning', 'explainability', 'computational models']

dependencies = [
    "numpy>=1.1",
    "torch>=1.8,!=1.12.0",
    "pyrtools>=1.0.1",
    "scipy>=1.0",
    "matplotlib>=3.3",
    "tqdm>=4.29",
    "imageio>=2.5",
    "scikit-image>=0.15.0",
    "einops>=0.3.0",
    "importlib-resources>=6.0",
    "Deprecated",
]

[build-system]
requires = ["setuptools", "setuptools-scm[toml]"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
docs = [
     'sphinx<8.2',
     # fix sphinx 7 incompatibility issue
     'sphinx_rtd_theme>=1.3.0rc1',
     'numpydoc',
     'nbsphinx',
     'nbsphinx_link',
     'sphinxcontrib-apidoc',
     'sphinx-autodoc-typehints',
     # because of this issue:
     # https://nbsphinx.readthedocs.io/en/0.6.0/installation.html#Pygments-Lexer-for-Syntax-Highlighting
     'ipython',
     'sphinx-copybutton',
     'sphinxemoji',
     'sphinx-inline-tabs',
     'docutils>=0.18.1,<0.21',
]

dev = [
    "pytest>=5.1.2",
    'pytest-cov',
    'pytest-xdist',
    "pooch>=1.2.0",
    "ruff>=0.6.8",
]

nb = [
    'jupyter',
    'ipywidgets',
    'nbclient>=0.5.5',
    "torchvision>=0.3",
    "pooch>=1.2.0",
]

[project.urls]
"Homepage" = "https://github.com/plenoptic-org/plenoptic"
"Documentation" = "https://docs.plenoptic.org"
"Download" = "https://zenodo.org/doi/10.5281/zenodo.10151130"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_scheme = 'python-simplified-semver'
local_scheme = 'no-local-version'

[tool.pytest.ini_options]
addopts = "--cov=plenoptic -n auto"
testpaths = ["tests"]
doctest_optionflags = "NORMALIZE_WHITESPACE NUMBER"

[tool.ruff]
extend-include = ["*.ipynb"]
src = ["src", "tests", "examples"]
# Exclude a variety of commonly ignored directories.
exclude = []

# Set the maximum line length (same as Black)
line-length = 88

indent-width = 4 # same as Black

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes: basic static analysis for common errors like undefined names
    # and missing imports.
    "F",
    # pyupgrade
    "UP",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []
