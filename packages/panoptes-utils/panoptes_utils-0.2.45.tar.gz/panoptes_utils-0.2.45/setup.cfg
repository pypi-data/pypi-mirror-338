[metadata]
name = panoptes-utils
description = Astronomical utilities for PANOPTES
author = PANOPTES Team
author_email = developers@projectpanoptes.org
license = mit
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/panoptes/panoptes-utils
project_urls = 
	Documentation = https://panoptes-utils.readthedocs.io
	POCS Documentation = https://pocs.readthedocs.io
	Project PANOPTES = https://www.projectpanoptes.org
	Forum = https://forum.projectpanoptes.org
platforms = linux
classifiers = 
	Development Status :: 4 - Beta
	Environment :: Console
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: POSIX
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3 :: Only
	Topic :: Scientific/Engineering :: Astronomy
	Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
include_package_data = True
package_dir = 
	=src
scripts = 
install_requires = 
	importlib-metadata; python_version<"3.8"
	astropy
	click
	click-spinner
	colorama
	Deprecated
	loguru
	numpy>=1.19
	pyserial>=3.4
	python-dateutil
	requests
	ruamel.yaml
	typer
python_requires = >=3.7
packages = find_namespace:

[options.packages.find]
where = src
exclude = 
	tests

[options.extras_require]
config = 
	Flask
	PyYAML
	gevent
	requests
	scalpl
docs = 
	myst-parser
	piccolo-theme
	pytest_mpl
	sphinx
examples = 
	matplotlib
	pandas
	seaborn
	streamz
images = 
	matplotlib
	photutils
	pillow>=9.1.1
	scipy
	watchfiles
testing = 
	coverage
	pycodestyle
	pytest
	pytest-cov
	pytest-doctestplus
	pytest-remotedata>=0.3.1
	pytest_mpl
	python-dotenv
	tox
social = 
	requests
	tweepy

[options.entry_points]
console_scripts = 
	panoptes-config-server = panoptes.utils.config.cli:config_server_cli
	panoptes-utils = panoptes.utils.cli.main:app

[test]
extras = True

[tool:pytest]
addopts = 
	--cov panoptes
	--cov-report term-missing:skip-covered
	--cov-report xml:build/coverage.xml
	--strict-markers
	--doctest-modules
	--strict-markers
	-vv
	-ra
	--test-databases memory
norecursedirs = 
	dist
	build
	.tox
testpaths = tests src
doctest_optionflags = ELLIPSIS NORMALIZE_WHITESPACE ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL
filterwarnings = 
	ignore:elementwise == comparison failed:DeprecationWarning
	ignore::pytest.PytestDeprecationWarning
doctest_plus = enabled
markers = 
	plate_solve: tests that require astrometry.net (i.e. solve-field).
	slow: marks tests as slow (deselect with '-m "not slow"').

[aliases]
dists = bdist_wheel

[bdist_wheel]
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[flake8]
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py

[pycodestyle]
max-line-length = 100

[coverage:report]
exclude_lines = 
	pragma: no cover
	noqa
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	
	if 0:
	if __name__ == .__main__.:
show_missing = True
ignore_errors = True

[pyscaffold]
version = 4.2.3
package = utils
extensions = 
	namespace
	no_skeleton
namespace = panoptes

[egg_info]
tag_build = 
tag_date = 0

