Metadata-Version: 2.4
Name: llamavector-llamasearch
Version: 0.1.0
Summary: Vector embedding generation, storage, and similarity search for LlamaAI Ecosystem
Project-URL: Homepage, https://github.com/yourusername/llama-vector
Project-URL: Bug Tracker, https://github.com/yourusername/llama-vector/issues
Project-URL: Documentation, https://yourusername.github.io/llama-vector/
Author-email: llamavector-llamasearch <nikjois@llamasearch.ai>
License: MIT License
        
        Copyright (c) 2024 Your Name # Replace with current year and your name/organization
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
License-File: LICENSE
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Database
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Requires-Dist: annoy>=1.17.0
Requires-Dist: chromadb>=0.4.0
Requires-Dist: faiss-cpu>=1.7.3
Requires-Dist: loguru>=0.7.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: pinecone-client>=2.2.0
Requires-Dist: pydantic>=1.10.0
Requires-Dist: qdrant-client>=1.1.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: sentence-transformers>=2.2.0
Requires-Dist: tqdm>=4.60.0
Requires-Dist: weaviate-client>=3.15.0
Provides-Extra: all
Requires-Dist: llama-vector[api,dev,docs]; extra == 'all'
Provides-Extra: api
Requires-Dist: fastapi>=0.95.0; extra == 'api'
Requires-Dist: uvicorn[standard]>=0.21.0; extra == 'api'
Provides-Extra: dev
Requires-Dist: black>=23.3.0; extra == 'dev'
Requires-Dist: isort>=5.12.0; extra == 'dev'
Requires-Dist: mypy>=1.2.0; extra == 'dev'
Requires-Dist: pre-commit>=3.3.1; extra == 'dev'
Requires-Dist: pytest-cov>=4.1.0; extra == 'dev'
Requires-Dist: pytest-mock>=3.10.0; extra == 'dev'
Requires-Dist: pytest>=7.3.1; extra == 'dev'
Requires-Dist: ruff>=0.0.260; extra == 'dev'
Provides-Extra: docs
Requires-Dist: mkdocs-material>=9.1.6; extra == 'docs'
Requires-Dist: mkdocs>=1.4.2; extra == 'docs'
Requires-Dist: mkdocstrings[python]>=0.20.0; extra == 'docs'
Description-Content-Type: text/markdown

# LlamaVector

[![PyPI version](https://badge.fury.io/py/llamavector.svg)](https://badge.fury.io/py/llamavector)
[![Python Version](https://img.shields.io/pypi/pyversions/llamavector.svg)](https://pypi.org/project/llamavector/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![CI](https://github.com/yourusername/llamavector-pkg/actions/workflows/ci.yml/badge.svg)](https://github.com/yourusername/llamavector-pkg/actions/workflows/ci.yml)

Handles vector embedding generation, storage, and similarity search within the LlamaAI Ecosystem. Provides interfaces to various embedding models and vector databases.

## Features

*   **Embedding Generation**: Supports multiple embedding models (e.g., via `sentence-transformers`).
*   **Vector Storage Adapters**: Interfaces for various vector databases (e.g., FAISS, ChromaDB, Pinecone, Qdrant, Weaviate).
*   **Similarity Search**: Efficiently find vectors similar to a query vector.
*   **Data Models**: Pydantic models for structured vector data.
*   **Indexing Utilities**: Tools for building and managing vector indexes.
*   **(Optional) API**: Can expose functionality via a FastAPI server.

## Installation

```bash
# Core installation
pip install llamavector

# To install with specific vector database support (e.g., ChromaDB):
pip install llamavector[chromadb]

# To install with API support:
pip install llamavector[api]
```

## Quick Start

```python
# Example (TBD after code migration)
# from llamavector import VectorStore, EmbeddingModel

# model = EmbeddingModel(model_name='all-MiniLM-L6-v2')
# store = VectorStore(adapter='chromadb', collection_name='my_vectors')

# texts = ["This is the first document.", "This document is the second document."]
# embeddings = model.encode(texts)
# ids = ["doc1", "doc2"]

# store.add(ids=ids, embeddings=embeddings)

# query_embedding = model.encode(["A query about the second doc"])
# results = store.search(query_embeddings=query_embedding, k=1)
# print(results)
```

## Contributing

Contributions are welcome! Please see `CONTRIBUTING.md`.

## License

MIT License. See `LICENSE` file. 