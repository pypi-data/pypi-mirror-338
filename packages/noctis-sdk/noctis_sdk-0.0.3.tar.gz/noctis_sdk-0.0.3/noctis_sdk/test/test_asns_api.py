# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.api.asns_api import AsnsApi


class TestAsnsApi(unittest.TestCase):
    """AsnsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AsnsApi()

    def tearDown(self) -> None:
        pass

    def test_compute_asn_ground_truth(self) -> None:
        """Test case for compute_asn_ground_truth

        Compute ASN Ground Truth
        """
        pass

    def test_compute_asn_ground_truth_0(self) -> None:
        """Test case for compute_asn_ground_truth_0

        Compute ASN Ground Truth
        """
        pass

    def test_compute_domain_ground_truth(self) -> None:
        """Test case for compute_domain_ground_truth

        Compute Domain Ground Truth
        """
        pass

    def test_compute_ip_ground_truth1(self) -> None:
        """Test case for compute_ip_ground_truth1

        Compute IP Ground Truth
        """
        pass

    def test_compute_organization_ground_truth(self) -> None:
        """Test case for compute_organization_ground_truth

        Compute Prefix Ground Truth
        """
        pass

    def test_compute_prefix_ground_truth(self) -> None:
        """Test case for compute_prefix_ground_truth

        Compute Prefix Ground Truth
        """
        pass

    def test_connection_mapping1(self) -> None:
        """Test case for connection_mapping1

        Maps the network positioning of the given resource.
        """
        pass

    def test_count_list_nodes1(self) -> None:
        """Test case for count_list_nodes1

        Count List Nodes
        """
        pass

    def test_enum_sub_domains1(self) -> None:
        """Test case for enum_sub_domains1

        Enumerating Basic Subdomains
        """
        pass

    def test_file_uploading(self) -> None:
        """Test case for file_uploading

        Detects any hostname in a given file and Explores Domain Relationships
        """
        pass

    def test_find_asn(self) -> None:
        """Test case for find_asn

        Find ASNs by part of name or number
        """
        pass

    def test_get_all_tlds(self) -> None:
        """Test case for get_all_tlds

        Retrieve All Top-Level Domains (TLDs)
        """
        pass

    def test_get_asn_listing_rankings(self) -> None:
        """Test case for get_asn_listing_rankings

        Retrieve Rankings for All ASNs
        """
        pass

    def test_get_asn_listing_statistics(self) -> None:
        """Test case for get_asn_listing_statistics

        Get ASN Listing Statistics
        """
        pass

    def test_get_similar_domains(self) -> None:
        """Test case for get_similar_domains

        Get similar domains
        """
        pass

    def test_get_similar_ips(self) -> None:
        """Test case for get_similar_ips

        Get similar IP addresses
        """
        pass

    def test_infra_mapping1(self) -> None:
        """Test case for infra_mapping1

        Retrieve Infrastructure Mapping for Domain
        """
        pass

    def test_list_all_asns(self) -> None:
        """Test case for list_all_asns

        Retrieve All Autonomous System Numbers (ASNs)
        """
        pass

    def test_list_all_orgs(self) -> None:
        """Test case for list_all_orgs

        Retrieve All Organizations
        """
        pass

    def test_search_black_list1(self) -> None:
        """Test case for search_black_list1

        Search the blacklist for an entry that matches or includes the input
        """
        pass


if __name__ == '__main__':
    unittest.main()
