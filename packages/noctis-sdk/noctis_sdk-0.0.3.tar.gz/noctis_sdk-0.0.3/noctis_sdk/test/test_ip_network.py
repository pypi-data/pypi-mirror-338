# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.ip_network import IpNetwork

class TestIpNetwork(unittest.TestCase):
    """IpNetwork unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IpNetwork:
        """Test IpNetwork
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IpNetwork`
        """
        model = IpNetwork()
        if include_optional:
            return IpNetwork(
                id = '',
                range = noctis_sdk.models.ip_range.IpRange(
                    from = '', 
                    to = '', 
                    cidr = [
                        ''
                        ], 
                    count = 56, ),
                asn = [
                    ''
                    ],
                name = '',
                org = '',
                parent = '',
                parent_id = '',
                customer = '',
                country = '',
                phone = [
                    ''
                    ],
                descr = [
                    ''
                    ],
                contact_keys = noctis_sdk.models.contact_keys.ContactKeys(
                    org = [
                        ''
                        ], 
                    tech = [
                        ''
                        ], 
                    admin = [
                        ''
                        ], 
                    abuse = [
                        ''
                        ], ),
                status = '',
                remarks = [
                    ''
                    ],
                notify_email = [
                    ''
                    ],
                mnt_keys = {
                    'key' : [
                        ''
                        ]
                    },
                created_date = '',
                updated_date = '',
                changed_by = [
                    ''
                    ],
                source = '',
                ref = '',
                other = {
                    'key' : None
                    }
            )
        else:
            return IpNetwork(
        )
        """

    def testIpNetwork(self):
        """Test IpNetwork"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
