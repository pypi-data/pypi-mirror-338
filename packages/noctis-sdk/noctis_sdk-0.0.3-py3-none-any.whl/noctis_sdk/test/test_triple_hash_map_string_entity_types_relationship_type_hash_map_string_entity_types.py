# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.triple_hash_map_string_entity_types_relationship_type_hash_map_string_entity_types import TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes

class TestTripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes(unittest.TestCase):
    """TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes:
        """Test TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes`
        """
        model = TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes()
        if include_optional:
            return TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes(
                left = {
                    'key' : 'MX_HOST'
                    },
                right = {
                    'key' : 'MX_HOST'
                    },
                middle = 'hasContentLink'
            )
        else:
            return TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes(
        )
        """

    def testTripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes(self):
        """Test TripleHashMapStringEntityTypesRelationshipTypeHashMapStringEntityTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
