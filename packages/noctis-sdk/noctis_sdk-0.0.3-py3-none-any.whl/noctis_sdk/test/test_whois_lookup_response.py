# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.whois_lookup_response import WhoisLookupResponse

class TestWhoisLookupResponse(unittest.TestCase):
    """WhoisLookupResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WhoisLookupResponse:
        """Test WhoisLookupResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WhoisLookupResponse`
        """
        model = WhoisLookupResponse()
        if include_optional:
            return WhoisLookupResponse(
                response = noctis_sdk.models.whois_lookup_data.WhoisLookupData(
                    registrant = '', 
                    registration = noctis_sdk.models.registration_info.RegistrationInfo(
                        created = 'YYYY-MM-DD', 
                        expires = 'YYYY-MM-DD', 
                        updated = 'YYYY-MM-DD', 
                        registrar = 'GoDaddy.com, LLC', 
                        statuses = [
                            ''
                            ], ), 
                    name_servers = [
                        ''
                        ], 
                    whois = noctis_sdk.models.whois_record.WhoisRecord(
                        date = '', 
                        record = '', ), 
                    record_source = '', )
            )
        else:
            return WhoisLookupResponse(
        )
        """

    def testWhoisLookupResponse(self):
        """Test WhoisLookupResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
