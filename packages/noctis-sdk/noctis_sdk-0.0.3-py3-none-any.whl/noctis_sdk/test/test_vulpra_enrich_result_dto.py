# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.vulpra_enrich_result_dto import VulpraEnrichResultDTO

class TestVulpraEnrichResultDTO(unittest.TestCase):
    """VulpraEnrichResultDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VulpraEnrichResultDTO:
        """Test VulpraEnrichResultDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VulpraEnrichResultDTO`
        """
        model = VulpraEnrichResultDTO()
        if include_optional:
            return VulpraEnrichResultDTO(
                domain = '',
                whois_url = '',
                adsense = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                alexa = 56,
                popularity_rank = 56,
                active = True,
                google_analytics = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                ga4 = [
                    noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', )
                    ],
                admin_contact = noctis_sdk.models.contact_enrich_dto.ContactEnrichDTO(
                    name = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    org = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    street = , 
                    city = , 
                    state = , 
                    postal = , 
                    country = , 
                    phone = , 
                    fax = , 
                    email = [
                        
                        ], ),
                billing_contact = noctis_sdk.models.contact_enrich_dto.ContactEnrichDTO(
                    name = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    org = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    street = , 
                    city = , 
                    state = , 
                    postal = , 
                    country = , 
                    phone = , 
                    fax = , 
                    email = [
                        
                        ], ),
                registrant_contact = noctis_sdk.models.contact_enrich_dto.ContactEnrichDTO(
                    name = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    org = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    street = , 
                    city = , 
                    state = , 
                    postal = , 
                    country = , 
                    phone = , 
                    fax = , 
                    email = [
                        
                        ], ),
                technical_contact = noctis_sdk.models.contact_enrich_dto.ContactEnrichDTO(
                    name = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    org = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', ), 
                    street = , 
                    city = , 
                    state = , 
                    postal = , 
                    country = , 
                    phone = , 
                    fax = , 
                    email = [
                        
                        ], ),
                create_date = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                website_title = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                expiration_date = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                email_domain = [
                    noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', )
                    ],
                soa_email = [
                    noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', )
                    ],
                ssl_email = [
                    noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', )
                    ],
                additional_whois_email = [
                    noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                        value = '', )
                    ],
                ip = [
                    noctis_sdk.models.ip_info_enrich_dto.IpInfoEnrichDTO(
                        ip_address = '', 
                        country = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        asn = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        ip_type = , 
                        isp = , )
                    ],
                mx = [
                    noctis_sdk.models.mx_info_enrich_dto.MxInfoEnrichDTO(
                        host = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        priority = 56, 
                        ip_address = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        country = , )
                    ],
                name_server = [
                    noctis_sdk.models.name_server_info_enrich_dto.NameServerInfoEnrichDTO(
                        ip_address = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        country = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), )
                    ],
                domain_risk = noctis_sdk.models.domain_risk_dto.DomainRiskDTO(
                    risk_score = 85, 
                    components = [
                        noctis_sdk.models.risk_component_score.RiskComponentScore(
                            name = 'proximity', 
                            risk_score = 70, )
                        ], ),
                redirect = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                redirect_domain = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                registrant_name = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                registrant_org = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                registrar = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                registrar_status = [
                    ''
                    ],
                spf_info = '',
                ssl_info = [
                    noctis_sdk.models.ssl_info_enrich_dto.SslInfoEnrichDTO(
                        issuer = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        subject = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                            value = '', ), 
                        valid_from = , 
                        valid_to = , 
                        serial_number = , 
                        signature_algorithm = , 
                        valid = True, )
                    ],
                tld = '',
                website_response = 56,
                data_updated_timestamp = '',
                server_type = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                first_seen = noctis_sdk.models.generic_value_enrich_dto.GenericValueEnrichDTO(
                    value = '', ),
                tags = [
                    noctis_sdk.models.tag_info_dto.TagInfoDTO(
                        label = 'malware-campaign-xyz', 
                        scope = 'user', 
                        tagged_at = 'YYYY-MM-DDTHH:mm:ssZ', )
                    ]
            )
        else:
            return VulpraEnrichResultDTO(
        )
        """

    def testVulpraEnrichResultDTO(self):
        """Test VulpraEnrichResultDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
