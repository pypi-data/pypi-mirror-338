# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.vulpra_detect_domain_list_response import VulpraDetectDomainListResponse

class TestVulpraDetectDomainListResponse(unittest.TestCase):
    """VulpraDetectDomainListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VulpraDetectDomainListResponse:
        """Test VulpraDetectDomainListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VulpraDetectDomainListResponse`
        """
        model = VulpraDetectDomainListResponse()
        if include_optional:
            return VulpraDetectDomainListResponse(
                watchlist_domains = [
                    noctis_sdk.models.vulpra_detect_domain_dto.VulpraDetectDomainDTO(
                        state = '', 
                        domain = '', 
                        status = 'active', 
                        discovered_date = '', 
                        changed_date = '', 
                        risk_score = 56, 
                        risk_score_status = '', 
                        risk_score_components = noctis_sdk.models.risk_score_components_dto.RiskScoreComponentsDTO(
                            proximity = 56, 
                            threat_profile = noctis_sdk.models.threat_profile_scores_dto.ThreatProfileScoresDTO(
                                phishing = 56, 
                                malware = 56, 
                                spam = 56, 
                                evidence = [domain name, registrant], ), ), 
                        mx_exists = True, 
                        tld = '', 
                        id = '', 
                        escalations = [
                            noctis_sdk.models.escalation_info_dto.EscalationInfoDTO(
                                escalation_type = 'blocked', 
                                id = '', 
                                created = '', 
                                created_by = '', )
                            ], 
                        monitor_ids = [
                            ''
                            ], 
                        name_server = [
                            noctis_sdk.models.name_server_basic_dto.NameServerBasicDTO(
                                host = '', )
                            ], 
                        registrant_contact_email = [
                            ''
                            ], 
                        registrar = '', 
                        create_date = '', 
                        ip = [
                            noctis_sdk.models.ip_basic_dto.IpBasicDTO(
                                country_code = '', 
                                isp = '', )
                            ], 
                        mx = [
                            noctis_sdk.models.name_server_basic_dto.NameServerBasicDTO(
                                host = '', )
                            ], )
                    ],
                total_count = 56,
                count = 56,
                offset = 56,
                limit = 56
            )
        else:
            return VulpraDetectDomainListResponse(
        )
        """

    def testVulpraDetectDomainListResponse(self):
        """Test VulpraDetectDomainListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
