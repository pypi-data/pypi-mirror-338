# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.ip_registrant_monitor_response import IpRegistrantMonitorResponse

class TestIpRegistrantMonitorResponse(unittest.TestCase):
    """IpRegistrantMonitorResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IpRegistrantMonitorResponse:
        """Test IpRegistrantMonitorResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IpRegistrantMonitorResponse`
        """
        model = IpRegistrantMonitorResponse()
        if include_optional:
            return IpRegistrantMonitorResponse(
                response = noctis_sdk.models.ip_registrant_monitor_data.IpRegistrantMonitorData(
                    record_count = 56, 
                    modified = [
                        None
                        ], 
                    page = 56, 
                    added = [
                        noctis_sdk.models.ip_range_change.IpRangeChange(
                            ip_to = '', 
                            organization = '', 
                            record_ip = '', 
                            record_date = 'YYYY-MM-DD', 
                            range = '', 
                            ip_from = '', 
                            server = '', 
                            country = '', )
                        ], 
                    removed = [
                        noctis_sdk.models.ip_range_change.IpRangeChange(
                            ip_to = '', 
                            organization = '', 
                            record_ip = '', 
                            record_date = 'YYYY-MM-DD', 
                            range = '', 
                            ip_from = '', 
                            server = '', 
                            country = '', )
                        ], 
                    has_more_pages = '', 
                    date = 'YYYY-MM-DD', 
                    query = '', )
            )
        else:
            return IpRegistrantMonitorResponse(
        )
        """

    def testIpRegistrantMonitorResponse(self):
        """Test IpRegistrantMonitorResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
