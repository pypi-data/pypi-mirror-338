# coding: utf-8

"""
    NoctisNet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from noctis_sdk.models.domain_profile_data import DomainProfileData

class TestDomainProfileData(unittest.TestCase):
    """DomainProfileData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainProfileData:
        """Test DomainProfileData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainProfileData`
        """
        model = DomainProfileData()
        if include_optional:
            return DomainProfileData(
                registrant = noctis_sdk.models.registrant_info.RegistrantInfo(
                    name = '', 
                    domain = 56, 
                    product_url = '', ),
                server = noctis_sdk.models.server_info.ServerInfo(
                    ip_address = '', 
                    other_domains = 56, 
                    product_url = '', ),
                registration = noctis_sdk.models.registration_info.RegistrationInfo(
                    created = 'YYYY-MM-DD', 
                    expires = 'YYYY-MM-DD', 
                    updated = 'YYYY-MM-DD', 
                    registrar = 'GoDaddy.com, LLC', 
                    statuses = [
                        ''
                        ], ),
                name_servers = [
                    noctis_sdk.models.name_server_info.NameServerInfo(
                        server = 'ns1.example.com', 
                        product_url = '', )
                    ],
                history = noctis_sdk.models.history_summary.HistorySummary(
                    registrar = noctis_sdk.models.history_detail.HistoryDetail(
                        earliest_event = 'YYYY-MM-DD', 
                        events = 56, 
                        product_url = '', ), 
                    name_server = noctis_sdk.models.name_server_history_detail.NameServerHistoryDetail(
                        events = 56, 
                        timespan_in_years = 56, 
                        product_url = '', ), 
                    ip_address = noctis_sdk.models.name_server_history_detail.NameServerHistoryDetail(
                        events = 56, 
                        timespan_in_years = 56, 
                        product_url = '', ), 
                    whois = noctis_sdk.models.whois_history_detail.WhoisHistoryDetail(
                        records = 56, 
                        earliest_event = 'YYYY-MM-DD', 
                        product_url = '', ), ),
                seo = noctis_sdk.models.seo_info.SeoInfo(
                    score = 56, 
                    product_url = '', ),
                website_data = noctis_sdk.models.website_data.WebsiteData(
                    response_code = 200, 
                    title = '', 
                    server = '', 
                    meta = [
                        ''
                        ], 
                    product_url = '', )
            )
        else:
            return DomainProfileData(
        )
        """

    def testDomainProfileData(self):
        """Test DomainProfileData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
