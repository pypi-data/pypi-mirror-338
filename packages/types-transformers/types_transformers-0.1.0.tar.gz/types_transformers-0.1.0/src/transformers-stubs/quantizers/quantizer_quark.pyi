"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, TYPE_CHECKING
from .base import HfQuantizer
from ..modeling_utils import PreTrainedModel
from ..utils import is_accelerate_available

if TYPE_CHECKING:
    ...
if is_accelerate_available():
    ...
logger = ...
CHECKPOINT_KEYS = ...
class QuarkHfQuantizer(HfQuantizer):
    """
    Quark quantizer (https://quark.docs.amd.com/latest/).
    """
    requires_calibration = ...
    required_packages = ...
    requires_parameters_quantization = ...
    def __init__(self, quantization_config, **kwargs) -> None:
        ...
    
    def validate_environment(self, *args, **kwargs): # -> None:
        ...
    
    def check_quantized_param(self, model: PreTrainedModel, param_value: torch.Tensor, param_name: str, state_dict: Dict[str, Any], **kwargs) -> bool:
        ...
    
    def create_quantized_param(self, model, param, param_name, param_device, state_dict, unexpected_keys) -> torch.nn.Parameter:
        ...
    
    def is_serializable(self, safe_serialization=...): # -> Literal[False]:
        ...
    
    @property
    def is_trainable(self): # -> Literal[False]:
        ...
    


