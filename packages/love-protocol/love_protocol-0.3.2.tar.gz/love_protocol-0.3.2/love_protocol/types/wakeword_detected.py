# generated by datamodel-codegen:
#   filename:  WAKEWORD_DETECTED.json

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field, confloat, constr


class Type(Enum):
    AUDIO_CHUNK = 'AUDIO_CHUNK'
    AUDIO_START = 'AUDIO_START'
    AUDIO_STOP = 'AUDIO_STOP'
    COMMAND = 'COMMAND'
    ERROR = 'ERROR'
    HELLO = 'HELLO'
    HELLO_ACK = 'HELLO_ACK'
    INTENT_DETECTED = 'INTENT_DETECTED'
    MEDIA_CONTROL = 'MEDIA_CONTROL'
    MEDIA_PLAY = 'MEDIA_PLAY'
    SENSOR_EVENT = 'SENSOR_EVENT'
    TRANSCRIPTION = 'TRANSCRIPTION'
    TTS_OUTPUT = 'TTS_OUTPUT'
    WAKEWORD_DETECTED = 'WAKEWORD_DETECTED'


class Capabilities(BaseModel):
    class Config:
        extra = Extra.forbid

    mic: bool
    speaker: bool
    wakeword: Optional[bool] = None
    tts: Optional[bool] = None


class LOVEMESSAGE(BaseModel):
    class Config:
        extra = Extra.allow

    protocol: constr(regex=r'^LOVE/\d+\.\d+$')
    type: Type
    device_id: constr(min_length=1)
    timestamp: confloat(ge=0.0)
    session: Optional[str] = None
    capabilities: Optional[Capabilities] = None


class WAKEWORDDETECTED(LOVEMESSAGE):
    type: str = Field('WAKEWORD_DETECTED', const=True)
    wakeword: str
    confidence: Optional[confloat(ge=0.0, le=1.0)] = None
    session: str
