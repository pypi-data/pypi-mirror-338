Metadata-Version: 2.4
Name: zagen
Version: 0.1.2
Summary: Agentic package to build your next AI Workflows
Keywords: agent,agentic workflow,mcp,multi mcp client
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Classifier: Topic :: Software Development
Requires-Python: >=3.12
Requires-Dist: mcp>=1.6.0
Requires-Dist: openai>=1.69.0
Requires-Dist: ruff>=0.11.2
Description-Content-Type: text/markdown

![zagen](./asset/zagen.png)

Accessible and customizable agent components that you can copy and paste into your apps. Free. Open Source. Use this to build your own agentic workflows.

### ðŸ‘‰ Getting Started

#### Install using uv:

```bash
uv add zagen
```

#### Install using pip:

```bash
pip install zagen
```

### ðŸ¤© Feel The Magic

```python
from zagen.agent import OpenAIAgent, OpenAIAgentConfig
from zagen.mcp import MCPServer

def get_weather(loc: str) -> Literal["Sunny", "Cloudy", "Rainy"]:
    """Get the weather of current locations"""
    return "Sunny"

triage_agent = OpenAIAgent(
    name="Triage Agent",
    instructions="""You are the Triage Agent.
    """,
    mcp={
        "weather": MCPServer(
            type="lambda",
            function=[get_weather],
        ),
        "slack": MCPServer(
            type="sse",
            url="https://"
        ),
    },
    config=OpenAIAgentConfig(
        model="gpt-4o",
        base_url="",
        api_key="",
    ),
)
```
