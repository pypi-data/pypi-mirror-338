# serializer version: 1
# name: test_mutation_schemas[create_mutation]
  '''
  """Date (isoformat)"""
  scalar Date
  
  """Date with time (isoformat)"""
  scalar DateTime
  
  """Decimal (fixed-point)"""
  scalar Decimal
  
  """
  The `Interval` scalar type represents a duration of time as specified by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Durations).
  """
  scalar Interval @specifiedBy(url: "https://en.wikipedia.org/wiki/ISO_8601#Durations")
  
  """
  The `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf).
  """
  scalar JSON @specifiedBy(url: "https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf")
  
  type Mutation {
    """Fetch object from the SQLDataTypesType collection by id"""
    createDataType(data: SQLDataTypesCreate!): SQLDataTypesType!
  
    """Fetch objects from the SQLDataTypesType collection"""
    createDataTypes(data: [SQLDataTypesCreate!]!): [SQLDataTypesType!]!
  }
  
  type Query {
    hello: String!
  }
  
  """GraphQL input type"""
  input SQLDataTypesCreate {
    id: UUID!
    dateCol: Date!
    timeCol: Time!
    timeDeltaCol: Interval!
    datetimeCol: DateTime!
    strCol: String!
    intCol: Int!
    floatCol: Float!
    decimalCol: Decimal!
    boolCol: Boolean!
    uuidCol: UUID!
    dictCol: JSON!
    arrayStrCol: [String!]!
  }
  
  """GraphQL type"""
  type SQLDataTypesType {
    id: UUID!
    dateCol: Date!
    timeCol: Time!
    timeDeltaCol: Interval!
    datetimeCol: DateTime!
    strCol: String!
    intCol: Int!
    floatCol: Float!
    decimalCol: Decimal!
    boolCol: Boolean!
    uuidCol: UUID!
    dictCol: JSON!
    arrayStrCol: [String!]!
  }
  
  """Time (isoformat)"""
  scalar Time
  
  scalar UUID
  '''
# ---
