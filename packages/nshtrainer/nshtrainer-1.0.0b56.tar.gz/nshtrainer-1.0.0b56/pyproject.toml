[tool.poetry]
name = "nshtrainer"
version = "1.0.0-beta56"
description = ""
authors = ["Nima Shoghi <nimashoghi@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
nshrunner = { version = "*" }
nshconfig = "*"
nshutils = { version = "*", optional = true }
psutil = "*"
numpy = "*"
torch = "*"
typing-extensions = "*"
packaging = "*"
lightning = "*"
pytorch-lightning = "*"
torchmetrics = "*"
wrapt = { version = "*", optional = true }
GitPython = { version = "*", optional = true }
wandb = { version = "*", optional = true }
tensorboard = { version = "*", optional = true }
huggingface-hub = { version = "*", optional = true }

[tool.poetry.group.dev.dependencies]
basedpyright = "*"
ruff = "*"
ipykernel = "*"
ipywidgets = "*"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.basedpyright]
typeCheckingMode = "standard"
deprecateTypingAliases = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportPrivateImportUsage = false

[tool.ruff.lint]
select = ["FA102", "FA100"]
ignore = ["F722", "F821", "E731", "E741"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.poetry.extras]
extra = [
    "wrapt",
    "GitPython",
    "wandb",
    "tensorboard",
    "huggingface-hub",
    "nshutils",
]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

[tool.pytest.ini_options]
minversion = "6.0"
# addopts = "--cov=src/nshtrainer --cov-report=term-missing --cov-report=xml --"
addopts = [
    "--import-mode=importlib",
    "--cov=src/nshtrainer",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
