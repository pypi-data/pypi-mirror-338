[project]
name = "mergeron"
authors = [{ name = "Murthy Kambhampaty", email = "smk@capeconomics.com" }]
description = "Python for analyzing merger enforcement policy"
readme = "README.rst"
license = "MIT"
keywords = [
    "merger enforcement policy",
    "merger guidelines",
    "merger screening",
    "enforcement presumptions",
    "concentration standards",
    "diversion ratio",
    "upward pricing pressure",
    "GUPPI",
]
version = "2025.739341.9"

# Classifiers list: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]

requires-python = ">=3.12"

dynamic = ["dependencies"]

[project.urls]
Documentation = "https://capeconomics.github.io/mergeron/"
Repository = "https://github.com/capeconomics/mergeron.git"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.dependencies]
# You may need to apply the fixes in, https://github.com/python-poetry/poetry/issues/3365
# if poetry dependency resolution appears to hang (read the page at link to the end)
aenum = "^3.1.15"
attrs = ">=23.2"
bs4 = ">=0.0.1"
jinja2 = ">=3.1"
joblib = ">=1.3"
matplotlib = ">=3.8"
mpmath = ">=1.3"
python = "^3.12"
scipy = ">=1.12"
sympy = ">=1.12"
certifi = ">=2023.11.17"
types-beautifulsoup4 = ">=4.11.2"
urllib3 = "^2.2.2"
ruamel-yaml = "^0.18.10"
h5py = "^3.13.0"
linuxdoc = "^20240924"
lxml = "^5.3.1"
python-calamine = "^0.3.1"


[tool.poetry.group.dev.dependencies]
jinja2 = ">=3.1.5"
mypy = ">=1.8"
ruff = ">=0.5"
poetry-plugin-export = "^1.8.0"
pytest = ">=8.0"
sphinx = ">8.1"
semver = ">=3.0"
sphinx-autodoc-typehints = ">=2.0.0"
sphinx-autoapi = ">=3.6.0"
sphinx-immaterial = ">0.11"
pipdeptree = ">=2.15.1"
virtualenv = ">=20.28.0"
pytest-cov = "^6.0.0"
pendulum = "^3.0.0"
rstcheck = "^6.2.4"
ipython-pygments-lexers = "^1.1.1"


[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

target-version = "py312"
fix = true

# Same as Black.
line-length = 88
indent-width = 4


[tool.ruff.lint]
# Borrowed primaryly from,
#   https://github.com/sphinx-doc/sphinx/blob/master/pyproject.toml

select = [
    "D", # docstrings
    "E", # pycodestyle
    "F", # Pyflakes
    "I", # isort
    "W", # pycodestyle
    # plugins:
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "FURB", # refurb
    "ICN",  # flake8-import-conventions
    "NPY",  # NumPy-specific rules
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TC",   # flake8-type-checking
    "UP",   # pyupgrade
    "RUF",  # ruff-specific
]

ignore = [
    # flake-8 line length
    "E501",
    # pycodestyle
    "E741",
    # flake8-bugbear
    "B006",
    "B023",
    # flake8-bugbear opinionated (disabled by default in flake8)
    "B904",
    "B905",
    "PLC2801", # unnecessary-dunder-call
    "PLR2004", # avoid magic values
    # RUF
    "RUF052",
    # flake8-type-checking
    "TC001", # move application import into a type-checking block
    "TC002", # move third-party import into a type-checking block
    "TC003", # move third-party import into a type-checking block
    # Use typing.TypeAlias for now:
    # mypy yet to implements PEP 695 type aliases;
    # sphinx (as setup here) gives different results with TypeAlias and typing statement
    "UP040",
]
isort.split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "lf"
preview = true

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = false
strict = true
enable_incomplete_feature = ["PreciseTupleTypes"]

show_column_numbers = true
show_error_codes = true
show_error_context = true

no_implicit_optional = true
no_implicit_reexport = true

allow_redefinition = true

plugins = "numpy.typing.mypy_plugin"

[tool.pytest.ini_options]
log_auto_indent = 4
minversion = "8.0"
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
    "--cov=mergeron",
    "--cov-report=html:../tests/cov_html",
]
filterwarnings = [
    "all",
    "ignore::DeprecationWarning:dateutil.tz.tz",
    "ignore::DeprecationWarning:jinja2.lexer",
    "ignore::DeprecationWarning:joblib._utils",
    "ignore::RuntimeWarning:mergeron.core.empirical_margin_distribution",
    "ignore::RuntimeWarning:mergeron.core.proportions_tests",
    "ignore::RuntimeWarning:mergeron.gen.enforcement_stats",
]
tmp_path_retention_policy = "failed"
