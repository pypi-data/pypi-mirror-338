# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: debian:testing-slim

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

sast:
  stage: test
  artifacts:
    paths:
      - gl-sast-report.json
include:
  - template: Security/SAST.gitlab-ci.yml

unittest:
  image: python:latest
  stage: test
  script:
    - apt-get -qq update
    - apt-get -qqy install cmake libgirepository-2.0-dev libpython3-all-dev gsettings-desktop-schemas
    - pip install tox
    - tox
  allow_failure: true

build:
  stage: build
  script:
    - apt-get -qq update
    - apt-get -qqy install flit git
    - rm -f .cache
    - rm -f gl-sast-report.json
    - flit build
  artifacts:
    paths:
      - dist

deploy:
  stage: deploy
  script:
    - apt-get -qq update
    - apt-get -qqy install twine
    - twine upload --non-interactive --disable-progress-bar --skip-existing dist/*
  only:
    - tags
  except:
    - branches

stages:
  - test
  - build
  - deploy
