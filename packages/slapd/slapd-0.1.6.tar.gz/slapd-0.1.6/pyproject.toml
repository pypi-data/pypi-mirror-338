[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "slapd"
version = "0.1.6"
description = "Controls a slapd process in a pythonic way"
license = "MIT"
keywords = ["ldap", "slapd"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
authors = [{name="python-ldap team", email="python-ldap@python.org"}]
maintainers = [{name="Ã‰loi Rivard", email="eloi.rivard@aquilenet.fr"}]
readme = "README.md"
requires-python = ">=3.9"

[project.urls]
homepage = "https://slapd.readthedocs.io/en/latest"
documentation = "https://slapd.readthedocs.io/en/latest"
repository = "https://gitlab.com/python-ldap/python-slapd"

[dependency-groups]
dev = [
    "coverage",
    "pytest",
    "pytest-cov",
    "tox",
    "mock",
]

doc = [
    "recommonmark",
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-issues",
]

[tool.hatch.build]
include = [
    "slapd/",
    "doc/",
    "tests/",
    "CHANGES.rst",
    "LICENSE.md",
    "README.md",
]

[tool.coverage.run]
source = [
    "tests",
    "slapd",
]

omit = [
    ".tox/*",
]

[tool.ruff.lint]
select = [
    "D", # pydocstyle
    "B", # flake8-bugbear
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "E722", # bare-except
    "D100", # public module
    "D101", # public class
    "D102", # public method
    "D103", # public function
    "D104", # public package
    "D105", # magic method
    "D106", # nested class
    "D107", # public init
    "D203", # no-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
addopts = "--durations=10 --color=yes --showlocals --full-trace --doctest-modules --doctest-glob='*.rst'"
norecursedirs = ".tox tests/perf .eggs .git build doc"
doctest_optionflags= "ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL ELLIPSIS"

[tool.tox]
env_list = [
    "style",
    "py39",
    "py310",
    "py311",
    "py312",
    "py313",
    "doc",
    "coverage",
]

[tool.tox.env_run_base]
dependency_groups = ["dev"]
commands = [
    ["pytest", "{posargs}"],
]

[tool.tox.env.doc]
dependency_groups = ["doc"]
commands = [
    ["sphinx-build", "--builder", "html", "--fail-on-warning", "doc", "build/sphinx/html"],
]

[tool.tox.env.coverage]
commands = [
    ["pytest", "--cov", "--cov-report", "term:skip-covered", "{posargs}"],
    ["coverage", "html"],
]
