Metadata-Version: 2.1
Name: china-division
Version: 2.0
Summary: 中国行政区划查询工具
Home-page: https://github.com/zgxdxf/china-division
Author: wangxueming
Author-email: zgxdxf@hotmail.com
License: UNKNOWN
Description: # China Division 中国行政区划查询工具
        
        [![PyPI version](https://img.shields.io/pypi/v/china-division)](https://pypi.org/project/china-division/)
        [![Python versions](https://img.shields.io/pypi/pyversions/china-division)](https://pypi.org/project/china-division/)
        
        一个高效查询中国行政区划的Python库，支持：
        - 按代码或名称查询行政区划
        - 智能分级匹配算法
        - 上下级关系查询
        
        ## 安装方式
        
        ```bash
        pip install china-division
        ```
        
        ## 快速开始
        
        ```python
        from china_division import search_division, get_division_info
        
        # 通过名称查询
        print(search_division("阿鲁科尔沁旗"))  # 输出: "150421"
        print(search_division("铁东"))         # 输出: "210302:辽宁省鞍山市铁东区|220303:吉林省四平市铁东区"
        
        # 通过代码查询
        print(get_division_info("150421"))     # 输出: "内蒙古自治区赤峰市阿鲁科尔沁旗"
        ```
        
        ## 主要功能
        
        ### 1. 行政区划查询
        
        ```python
        # 搜索行政区划（支持模糊匹配）
        result = search_division("北京朝阳")
        
        # 获取完整信息
        info = get_division_info("110105")  # 北京市朝阳区
        ```
        
        ### 2. 层级关系查询
        
        ```python
        from china_division import get_parent_division, get_child_divisions
        
        # 获取上级行政区划
        parent = get_parent_division("150421")  # ("150400", "赤峰市")
        
        # 获取下级行政区划
        children = get_child_divisions("110000")  # [("110101", "东城区"), ...]
        ```
        
        ### 3. 智能搜索特性
        
        - **分级匹配**：`search_division("内蒙阿鲁")` → 自动匹配"阿鲁科尔沁旗"
        - **多结果合并**：多个结果用`|`分隔显示
        - **容错处理**：无结果返回提示信息
        
        ## 数据来源
        
        内置最新行政区划数据，包含：
        - 省级行政区(23省、5自治区、4直辖市、2特别行政区)
        - 地级市(300+)
        - 县级区划(2800+)
        
        ## 贡献指南
        
        欢迎提交Issue或Pull Request：
        1. Fork项目
        2. 创建分支(`git checkout -b feature/your-feature`)
        3. 提交更改(`git commit -am 'Add some feature'`)
        4. 推送到分支(`git push origin feature/your-feature`)
        5. 创建Pull Request
        
        ## 许可证
        
        [MIT License](LICENSE)
        
        
        ## 版本说明
        
        ### 与 chinese_administrative_divisions 的关系
        
        本项目是原 chinese_administrative_divisions 库的升级版本，主要改进包括：
        
        | 特性                     | 本版本 (china-division)         | 旧版本 (chinese_administrative_divisions) |
        |------------------------------------|-------------------------------------|--------------------------------------------|
        | **包名称**                 | china-division               | chinese_administrative_divisions       
        |                        
        | **查询接口**                | 统一字符串输出格式             |  统一字符串输出格式                      |                        
        |
        | **搜索算法**                | 智能分级匹配                 | 基础关键词匹配                            |
        | **数据更新**                | 2023年最新行政区划             | 2023年最新行政区划                                |  
        | **依赖关系**                | 零依赖                     | 零依赖                            |
        
        ## 迁移指南
        
        旧版本用户升级建议：
        
        Python
        #旧版代码
        from chinese_administrative_divisions import get_division
        
        #新版替代方案
        from china_division import search_division, get_division_info
        
        #查询逻辑需要调整（新版始终返回字符串）
        result = search_division("朝阳区")  # 返回 "110105:北京市朝阳区"
        
        ## 版本兼容性提示
        
        本版本不保证与旧版API完全兼容，主要变更：
        - 删除了一些旧版函数
        - 统一了返回格式
        - 优化了搜索算法
        
Keywords: china administrative division
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
