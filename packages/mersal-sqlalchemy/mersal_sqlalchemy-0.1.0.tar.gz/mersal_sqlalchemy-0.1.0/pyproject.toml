[project]
name = "mersal_sqlalchemy"
version = "0.1.0"
description = "SQLAlchemy support for Mersal"
authors = [
    { name = "Abdulhaq Emhemmed", email = "abdulhaq.emhemmed@gmail.com" }
]
dependencies = [
    "mersal",
    "sqlalchemy"
]
readme = "README.rst"
requires-python = ">= 3.10"

[dependency-groups]
build = ["bump-my-version"]
dev = [
  { include-group = "build" },
  { include-group = "docs" },
  { include-group = "linting" },
  { include-group = "test" },
  "sqlalchemy",
  "asyncpg",
]
docs = [
    "furo>=2024.8.6",
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
    "sphinxcontrib-bibtex>=2.6.3",
    'mersal',
]
linting = [
    "basedpyright>=1.28.1",
    "mypy>=1.15.0",
    "pre-commit>=4.1.0",
    "ruff>=0.9.10",
]
test = [
    "pytest",
    "anyio",
    "mersal-msgspec",
]

[tool.uv]
managed = true

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
filterwarnings = [
    "ignore::DeprecationWarning",
]
log_cli = true

[tool.ruff]
include = [
  "mersal_sqlalchemy/**/*.{py,pyi}",
  "tests/**/*.{py,pyi}",
  "docs/examples/**/*.{py,pyi}",
  "pyproject.toml"
]
target-version = "py310"
line-length = 120

lint.select = [
  "A",   # flake8-builtins
  "B",   # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "C90", # mccabe
  "D",   # pydocstyle
  "DJ",  # flake8-django
  "DTZ", # flake8-datetimez
  "E",   # pycodestyle errors
  "ERA", # eradicate
  "EXE", # flake8-executable
  "F",   # pyflakes
  "G",   # flake8-logging-format
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PIE", # flake8-pie
  "PLC", # pylint - convention
  "PLE", # pylint - error
  "PLW", # pylint - warning
  "PTH", # flake8-use-pathlib
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RUF", # Ruff-specific rules
  "S",   # flake8-bandit
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TC",  # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "W",   # pycodestyle - warning
  "YTT", # flake8-2020
]
lint.ignore = [
  "A003",    # flake8-builtins - class attribute {name} is shadowing a python builtin
  "B010",    # flake8-bugbear - do not call setattr with a constant attribute value
  "D100",    # pydocstyle - missing docstring in public module
  "D101",    # pydocstyle - missing docstring in public class
  "D102",    # pydocstyle - missing docstring in public method
  "D103",    # pydocstyle - missing docstring in public function
  "D104",    # pydocstyle - missing docstring in public package
  "D105",    # pydocstyle - missing docstring in magic method
  "D106",    # pydocstyle - missing docstring in public nested class
  "D107",    # pydocstyle - missing docstring in __init__
  "D202",    # pydocstyle - no blank lines allowed after function docstring
  "D205",    # pydocstyle - 1 blank line required between summary line and description
  "D415",    # pydocstyle - first line should end with a period, question mark, or exclamation point
  "E501",    # pycodestyle line too long, handled by ruff format
  "PLW2901", # pylint - for loop variable overwritten by assignment target
  "RUF012",  # Ruff-specific rule - annotated with classvar
  "ISC001",  # Ruff formatter incompatible
  "CPY001",  # ruff - copyright notice at the top of the file
]
src = [
  "mersal_sqlalchemy",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/testing/**/*.py" = [
  "S101", # flake8-bandit - use of assert detected
]
"**/tests/**/*.py" = [
  "B017", # flake8-bugbear - assert-raises-exception
  "N818", # pep8-naming - error-suffix-on-exception-name
  "S101", # flake8-bandit - use of assert detected
]
"**/*/conftest.py" = [
  "F403", # Pyflakes - undefined-local-with-import-star
]

[tool.ruff.lint.isort]
known-first-party = [
"mersal",
"mersal_testing",
"mersal_sqlalchemy",
"mersal_msgspec",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mersal_sqlalchemy"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
dev-mode-dirs = ["."]
exclude = ["/.github", "/docs"]

# Type checking configuration
[tool.mypy]
python_version = "3.10"
enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
]
packages = [
  "mersal_sqlalchemy",
]
disallow_any_generics = false
local_partial_types = true
show_error_codes = true
strict = true
warn_unreachable = true

[tool.basedpyright]
typeCheckingMode = "standard"
pythonVersion = "3.10"
include = [
  "mersal_sqlalchemy",
  "tests",
]
