name: Build and Test Python Wheels

on:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        # macos-13 is an intel runner, macos-14 is apple silicon
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        if: runner.os != 'Linux'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* pp38-* pp39-* pp310-*"
          CIBW_SKIP: "*-musllinux_i686"
          CIBW_BEFORE_ALL_LINUX: >
            set -ex &&
            if command -v yum > /dev/null; then
              yum update -y &&
              yum install -y libatomic curl &&
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable;
            elif command -v apk > /dev/null; then
              apk add --no-cache curl &&
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable;
            else
              echo "Unsupported package manager" && exit 1;
            fi
          CIBW_ENVIRONMENT_LINUX: PATH="$HOME/.cargo/bin:$PATH"
          CIBW_BEFORE_ALL_WINDOWS: rustup target add i686-pc-windows-msvc
          MACOSX_DEPLOYMENT_TARGET: "10.12"
          # CIBW_TEST_COMMAND: pytest --pyargs affinitree
          # CIBW_TEST_REQUIRES: pytest torch
          # CIBW_TEST_SKIP: "*i686 *win32 *linux*"
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "pyproject.toml"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl