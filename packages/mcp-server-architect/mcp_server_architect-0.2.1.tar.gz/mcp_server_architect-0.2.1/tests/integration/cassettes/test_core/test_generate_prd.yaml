interactions:
- request:
    body: '{"contents":[{"role":"user","parts":[{"text":"\n            Create a Product
      Requirements Document (PRD) or High-Level Design Document based on the following
      task.\n            \n            IMPORTANT: Before beginning analysis, use the
      code_reader tool to examine the codebase structure\n            and understand
      the existing architecture.\n            \n            Your PRD should include:\n            1.
      Overview of the requested feature/task\n            2. Technical requirements
      and constraints\n            3. Proposed architecture/design\n            4.
      Implementation plan with specific files to modify\n            5. Potential
      challenges and mitigations\n            \n            Task details: Create a
      simple calculator app with basic operations\n            "}]}],"system_instruction":{"role":"user","parts":[{"text":"\n        You
      are an expert software architect and technical lead with deep expertise in software
      design and development.\n        \n        You can provide several types of
      assistance:\n        1. Create Product Requirements Documents (PRDs) or High-Level
      Design Documents\n        2. Analyze code and architecture\n        3. Provide
      deep reasoning assistance and solutions for complex coding problems\n        \n        Use
      the tools strategically to gather all the information you need:\n        - code_reader:
      Read source code files from the codebase to understand the architecture\n        -
      web_search: Find relevant technical information online\n        - llm: Use external
      LLM assistance when needed\n        \n        Format your responses in markdown.
      Be concise but thorough.\n        "}]},"tools":{"function_declarations":[{"name":"code_reader","description":"<summary>Read
      and analyze source code files from the specified codebase path, combining them\ninto
      a unified code context for the agent to analyze.</summary>\n<returns>\n<description>A
      string containing the code context or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the code reader tool.","properties":{"paths":{"description":"List
      of file or directory paths to read, relative to the base codebase path","items":{"type":"string"},"type":"array"},"filter_extensions":{"items":{"type":"string"},"type":"array","nullable":true},"max_files":{"type":"integer","nullable":true}},"required":["paths"],"type":"object"}},{"name":"web_search","description":"<summary>Search
      the web for information on a given query using Exa API.</summary>\n<returns>\n<description>A
      string containing the search results or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the web search tool.","properties":{"query":{"description":"The search
      query to execute","type":"string"},"num_results":{"type":"integer","nullable":true}},"required":["query"],"type":"object"}},{"name":"llm","description":"<summary>Execute
      a prompt against a configured LLM using litellm.</summary>\n<returns>\n<description>The
      text response from the LLM or an error message</description>\n</returns>","parameters":{"description":"Input
      schema for the LLM tool.","properties":{"prompt":{"description":"The prompt
      to send to the LLM","type":"string"},"model":{"type":"string","nullable":true},"temperature":{"type":"number","nullable":true}},"required":["prompt"],"type":"object"}}]}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3321'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - pydantic-ai/0.0.48
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-exp-03-25:generateContent
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAC/3WSTW+CQBCG7/yKzV56EWM0eujV9tjYtKRpUo0ZYcSNyy7ZHRKM8b93QEGgdQ9k
        mXc+n51zIISMwSQqAUIvn8UPW4Q4199Ks4bQEAuNiY05OLr7Xs+5c2cXwrIKkqsjnEZCIz154Ynj
        xO4ksIRMGWVSQQcUsU1wBx5Zd0VMhcPx2qyN7CS8jB5X2hcmJmXNErTutXnTDWRYdVKV2TqEBJ0c
        DZ3Apf6fYFYyKLd7pWs208kwsIZBhyGMVhzLP9bNwHIJHv3d75t7XemsrufJeB7dpG8ByT2D9YcP
        BG9N5fYZrd7beaUyCZZsngRNgTq1LDyk+IYEvAbQgpC5s1lOkT2iWdqiXoPF7AahszY9h9nippMl
        0P3YRaN1EvsXLqt0F2Fn1XhK0IpO1SjR63fUeTou0O+rYRE0mGsqV1Bf6Ly6EkmxWr5wOp6H3EaI
        ZR5OZuF0LoNL8AuqIyKTEAMAAA==
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 01 Apr 2025 08:59:40 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=5218
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
    status:
      code: 200
      message: OK
- request:
    body: '{"contents":[{"role":"user","parts":[{"text":"\n            Create a Product
      Requirements Document (PRD) or High-Level Design Document based on the following
      task.\n            \n            IMPORTANT: Before beginning analysis, use the
      code_reader tool to examine the codebase structure\n            and understand
      the existing architecture.\n            \n            Your PRD should include:\n            1.
      Overview of the requested feature/task\n            2. Technical requirements
      and constraints\n            3. Proposed architecture/design\n            4.
      Implementation plan with specific files to modify\n            5. Potential
      challenges and mitigations\n            \n            Task details: Create a
      simple calculator app with basic operations\n            "}]},{"role":"model","parts":[{"text":"Okay,
      let''s start by examining the codebase structure.\n\n"},{"functionCall":{"name":"code_reader","args":{"max_files":20,"paths":["."]}}}]},{"role":"user","parts":[{"functionResponse":{"name":"code_reader","response":{"return_value":"#
      Code Context\nIncluding 1 files from the specified paths.\n\n# File: main.py\n```\n\ndef
      add(a, b):\n    \"\"\"Add two numbers.\"\"\"\n    return a + b\n\ndef subtract(a,
      b):\n    \"\"\"Subtract b from a.\"\"\"\n    return a - b\n\n```\n\n"}}}]}],"system_instruction":{"role":"user","parts":[{"text":"\n        You
      are an expert software architect and technical lead with deep expertise in software
      design and development.\n        \n        You can provide several types of
      assistance:\n        1. Create Product Requirements Documents (PRDs) or High-Level
      Design Documents\n        2. Analyze code and architecture\n        3. Provide
      deep reasoning assistance and solutions for complex coding problems\n        \n        Use
      the tools strategically to gather all the information you need:\n        - code_reader:
      Read source code files from the codebase to understand the architecture\n        -
      web_search: Find relevant technical information online\n        - llm: Use external
      LLM assistance when needed\n        \n        Format your responses in markdown.
      Be concise but thorough.\n        "}]},"tools":{"function_declarations":[{"name":"code_reader","description":"<summary>Read
      and analyze source code files from the specified codebase path, combining them\ninto
      a unified code context for the agent to analyze.</summary>\n<returns>\n<description>A
      string containing the code context or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the code reader tool.","properties":{"paths":{"description":"List
      of file or directory paths to read, relative to the base codebase path","items":{"type":"string"},"type":"array"},"filter_extensions":{"items":{"type":"string"},"type":"array","nullable":true},"max_files":{"type":"integer","nullable":true}},"required":["paths"],"type":"object"}},{"name":"web_search","description":"<summary>Search
      the web for information on a given query using Exa API.</summary>\n<returns>\n<description>A
      string containing the search results or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the web search tool.","properties":{"query":{"description":"The search
      query to execute","type":"string"},"num_results":{"type":"integer","nullable":true}},"required":["query"],"type":"object"}},{"name":"llm","description":"<summary>Execute
      a prompt against a configured LLM using litellm.</summary>\n<returns>\n<description>The
      text response from the LLM or an error message</description>\n</returns>","parameters":{"description":"Input
      schema for the LLM tool.","properties":{"prompt":{"description":"The prompt
      to send to the LLM","type":"string"},"model":{"type":"string","nullable":true},"temperature":{"type":"number","nullable":true}},"required":["prompt"],"type":"object"}}]}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3838'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - pydantic-ai/0.0.48
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-exp-03-25:generateContent
  response:
    body:
      string: !!binary |
        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
        RkeMCNSibHzwanx4NHj25dl/AbVdV4FsHAAA
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 01 Apr 2025 08:59:57 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=16917
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
    status:
      code: 200
      message: OK
version: 1
