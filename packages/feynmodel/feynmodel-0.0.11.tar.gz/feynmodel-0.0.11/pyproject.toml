[tool.poetry]
name = "feynmodel"
version = "0.0.11"
description = "Models for constructing Feynman diagrams"
authors = ["Alexander Puck Neuwirth <alexander@neuwirth-informatik.de>"]
readme = "README.md"
repository = "https://github.com/APN-Pucky/feynmodel"

[tool.poetry.dependencies]
python = "^3.8"
# These must remain flexible to allow for different versions of the same package
# and let the user decide which version to use
ufo_sm = "*"
ufo_mssm = "*"
particle = "*"
xsdata = {version = "*", extras = ["cli","lxml","soap"]}
#pyqgraf = {path= "../pyqgraf", develop = true }
#ipyparallel = "*"
deprecated = "*"
deprecation = "*"
smpl_io = "*"
smpl_doc = "*"
smpl_util= "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = ">=2.20,<4.0"
pytest = "*"
pytest-cov =  "*"
pytest-profiling =  "*"
pytest-line-profiler-apn = ">=0.1.3"
ipython =  "*"
jupyterlab =  "*"
jupyter = "*"
poetry-dynamic-versioning = {extras = ["plugin"], version = "^0.21.1"}

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"
dirty = true
# modified dunami default pattern without v
pattern = '(?x)(?# ignore whitespace)^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)(?# v1.2.3 or v1!2000.1.2)([-._]?((?P<stage>[a-zA-Z]+)[-._]?(?P<revision>\d+)?))?(?# b0)(\+(?P<tagged_metadata>.+))?$(?# +linux)'
strict = true
format-jinja = "{% if distance == 0 %}{{ base }}{% else %}{{ base }}.{{ distance }}{% endif %}"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = [ "-Werror", "-v", "--cov=feynmodel", "--cov-config=.coveragerc","--cov-append", "--cov-report=term", "--cov-report=xml", "--doctest-modules", "--ignore=docs/source/conf.py", "--ignore=debug"]
filterwarnings = [
    'ignore: pkg_resources is deprecated as an API:DeprecationWarning'
]
