# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.api.proposals_api import ProposalsApi


class TestProposalsApi(unittest.TestCase):
    """ProposalsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProposalsApi()

    def tearDown(self) -> None:
        pass

    def test_proposals_controller_count(self) -> None:
        """Test case for proposals_controller_count

        It returns the number of proposals.
        """
        pass

    def test_proposals_controller_create(self) -> None:
        """Test case for proposals_controller_create

        It creates a new proposal.
        """
        pass

    def test_proposals_controller_create_attachment(self) -> None:
        """Test case for proposals_controller_create_attachment

        It creates a new attachement for the proposal specified.
        """
        pass

    def test_proposals_controller_find_all(self) -> None:
        """Test case for proposals_controller_find_all

        It returns a list of proposals.
        """
        pass

    def test_proposals_controller_find_all_attachments(self) -> None:
        """Test case for proposals_controller_find_all_attachments

        It returns all the attachments for the proposal specified.
        """
        pass

    def test_proposals_controller_find_all_datasets(self) -> None:
        """Test case for proposals_controller_find_all_datasets

        It returns all the datasets associated with the proposal indicated.
        """
        pass

    def test_proposals_controller_find_by_id(self) -> None:
        """Test case for proposals_controller_find_by_id

        It returns the proposal requested.
        """
        pass

    def test_proposals_controller_find_by_id_access(self) -> None:
        """Test case for proposals_controller_find_by_id_access

        Check user access to a specific proposal.
        """
        pass

    def test_proposals_controller_find_one_attachment_and_remove(self) -> None:
        """Test case for proposals_controller_find_one_attachment_and_remove

        It deletes the attachment from the proposal.
        """
        pass

    def test_proposals_controller_find_one_attachment_and_update(self) -> None:
        """Test case for proposals_controller_find_one_attachment_and_update

        It updates the attachment specified for the proposal indicated.
        """
        pass

    def test_proposals_controller_fullfacet(self) -> None:
        """Test case for proposals_controller_fullfacet

        It returns a list of proposal facets matching the filter provided.
        """
        pass

    def test_proposals_controller_fullquery(self) -> None:
        """Test case for proposals_controller_fullquery

        It returns a list of proposals matching the query provided.
        """
        pass

    def test_proposals_controller_is_valid(self) -> None:
        """Test case for proposals_controller_is_valid

        It validates the proposal provided as input.
        """
        pass

    def test_proposals_controller_remove(self) -> None:
        """Test case for proposals_controller_remove

        It deletes the proposal.
        """
        pass

    def test_proposals_controller_update(self) -> None:
        """Test case for proposals_controller_update

        It updates the proposal.
        """
        pass


if __name__ == '__main__':
    unittest.main()
