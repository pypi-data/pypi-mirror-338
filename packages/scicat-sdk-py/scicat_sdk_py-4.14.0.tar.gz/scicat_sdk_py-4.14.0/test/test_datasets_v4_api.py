# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.api.datasets_v4_api import DatasetsV4Api


class TestDatasetsV4Api(unittest.TestCase):
    """DatasetsV4Api unit test stubs"""

    def setUp(self) -> None:
        self.api = DatasetsV4Api()

    def tearDown(self) -> None:
        pass

    def test_datasets_v4_controller_count(self) -> None:
        """Test case for datasets_v4_controller_count

        It returns the number of datasets.
        """
        pass

    def test_datasets_v4_controller_create(self) -> None:
        """Test case for datasets_v4_controller_create

        It creates a new dataset. Type should be raw, derived or any of the customized types available in your instance
        """
        pass

    def test_datasets_v4_controller_find_all(self) -> None:
        """Test case for datasets_v4_controller_find_all

        It returns a list of datasets.
        """
        pass

    def test_datasets_v4_controller_find_by_id(self) -> None:
        """Test case for datasets_v4_controller_find_by_id

        """
        pass

    def test_datasets_v4_controller_find_by_id_and_delete(self) -> None:
        """Test case for datasets_v4_controller_find_by_id_and_delete

        It deletes the dataset.
        """
        pass

    def test_datasets_v4_controller_find_by_id_and_replace(self) -> None:
        """Test case for datasets_v4_controller_find_by_id_and_replace

        It updates the dataset.
        """
        pass

    def test_datasets_v4_controller_find_by_id_and_update(self) -> None:
        """Test case for datasets_v4_controller_find_by_id_and_update

        It partially updates the dataset.
        """
        pass

    def test_datasets_v4_controller_find_logbook_by_pid(self) -> None:
        """Test case for datasets_v4_controller_find_logbook_by_pid

        Retrive logbook associated with dataset.
        """
        pass

    def test_datasets_v4_controller_find_one(self) -> None:
        """Test case for datasets_v4_controller_find_one

        It returns the first dataset found.
        """
        pass

    def test_datasets_v4_controller_fullfacet(self) -> None:
        """Test case for datasets_v4_controller_fullfacet

        """
        pass

    def test_datasets_v4_controller_is_valid(self) -> None:
        """Test case for datasets_v4_controller_is_valid

        It validates the dataset provided as input.
        """
        pass

    def test_datasets_v4_controller_metadata_keys(self) -> None:
        """Test case for datasets_v4_controller_metadata_keys

        It returns a list of metadata keys contained in the datasets matching the filter provided.
        """
        pass


if __name__ == '__main__':
    unittest.main()
