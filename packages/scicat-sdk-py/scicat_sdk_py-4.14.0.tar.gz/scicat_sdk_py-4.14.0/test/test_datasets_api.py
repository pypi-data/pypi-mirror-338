# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.api.datasets_api import DatasetsApi


class TestDatasetsApi(unittest.TestCase):
    """DatasetsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DatasetsApi()

    def tearDown(self) -> None:
        pass

    def test_datasets_controller_append_to_array_field(self) -> None:
        """Test case for datasets_controller_append_to_array_field

        It appends a new value to the specific field.
        """
        pass

    def test_datasets_controller_count(self) -> None:
        """Test case for datasets_controller_count

        It returns the number of datasets.
        """
        pass

    def test_datasets_controller_create(self) -> None:
        """Test case for datasets_controller_create

        It creates a new dataset which can be a raw, derived or custom one.
        """
        pass

    def test_datasets_controller_create_attachment(self) -> None:
        """Test case for datasets_controller_create_attachment

        It creates a new attachement for the dataset specified.
        """
        pass

    def test_datasets_controller_create_datablock(self) -> None:
        """Test case for datasets_controller_create_datablock

        It creates a new datablock for the dataset specified.
        """
        pass

    def test_datasets_controller_create_orig_datablock(self) -> None:
        """Test case for datasets_controller_create_orig_datablock

        It creates a new origDatablock for the dataset specified.
        """
        pass

    def test_datasets_controller_find_all(self) -> None:
        """Test case for datasets_controller_find_all

        It returns a list of datasets.
        """
        pass

    def test_datasets_controller_find_all_attachments(self) -> None:
        """Test case for datasets_controller_find_all_attachments

        It returns all the attachments for the dataset specified.
        """
        pass

    def test_datasets_controller_find_all_datablocks(self) -> None:
        """Test case for datasets_controller_find_all_datablocks

        It returns all the datablock for the dataset specified.
        """
        pass

    def test_datasets_controller_find_all_orig_datablocks(self) -> None:
        """Test case for datasets_controller_find_all_orig_datablocks

        It returns all the origDatablock for the dataset specified.
        """
        pass

    def test_datasets_controller_find_by_id(self) -> None:
        """Test case for datasets_controller_find_by_id

        """
        pass

    def test_datasets_controller_find_by_id_and_delete(self) -> None:
        """Test case for datasets_controller_find_by_id_and_delete

        It deletes the dataset.
        """
        pass

    def test_datasets_controller_find_by_id_and_replace(self) -> None:
        """Test case for datasets_controller_find_by_id_and_replace

        It updates the dataset.
        """
        pass

    def test_datasets_controller_find_by_id_and_update(self) -> None:
        """Test case for datasets_controller_find_by_id_and_update

        It partially updates the dataset.
        """
        pass

    def test_datasets_controller_find_logbook_by_pid(self) -> None:
        """Test case for datasets_controller_find_logbook_by_pid

        Retrive logbook associated with dataset.
        """
        pass

    def test_datasets_controller_find_one(self) -> None:
        """Test case for datasets_controller_find_one

        It returns the first dataset found.
        """
        pass

    def test_datasets_controller_find_one_attachment_and_remove(self) -> None:
        """Test case for datasets_controller_find_one_attachment_and_remove

        It deletes the attachment from the dataset.
        """
        pass

    def test_datasets_controller_find_one_attachment_and_update(self) -> None:
        """Test case for datasets_controller_find_one_attachment_and_update

        It updates the attachment specified for the dataset indicated.
        """
        pass

    def test_datasets_controller_find_one_datablock_and_remove(self) -> None:
        """Test case for datasets_controller_find_one_datablock_and_remove

        It deletes the datablock from the dataset.
        """
        pass

    def test_datasets_controller_find_one_datablock_and_update(self) -> None:
        """Test case for datasets_controller_find_one_datablock_and_update

        It updates the datablocks specified for the dataset indicated.
        """
        pass

    def test_datasets_controller_find_one_orig_datablock_and_remove(self) -> None:
        """Test case for datasets_controller_find_one_orig_datablock_and_remove

        It deletes the origdatablock from the dataset.
        """
        pass

    def test_datasets_controller_find_one_orig_datablock_and_update(self) -> None:
        """Test case for datasets_controller_find_one_orig_datablock_and_update

        It updates the origDatablocks specified for the dataset indicated.
        """
        pass

    def test_datasets_controller_fullfacet(self) -> None:
        """Test case for datasets_controller_fullfacet

        """
        pass

    def test_datasets_controller_fullquery(self) -> None:
        """Test case for datasets_controller_fullquery

        It returns a list of datasets matching the query provided.
        """
        pass

    def test_datasets_controller_is_valid(self) -> None:
        """Test case for datasets_controller_is_valid

        It validates the dataset provided as input.
        """
        pass

    def test_datasets_controller_metadata_keys(self) -> None:
        """Test case for datasets_controller_metadata_keys

        It returns a list of metadata keys contained in the datasets matching the filter provided.
        """
        pass

    def test_datasets_controller_orig_datablock_is_valid(self) -> None:
        """Test case for datasets_controller_orig_datablock_is_valid

        It validates the origDatablock values passed.
        """
        pass

    def test_datasets_controller_thumbnail(self) -> None:
        """Test case for datasets_controller_thumbnail

        It returns the thumbnail associated with the dataset.
        """
        pass


if __name__ == '__main__':
    unittest.main()
