name: Check Release
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Get pip cache dir
        id: pip-cache
        shell: bash
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ env.CACHE_PREFIX }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('setup.cfg', 'setup.py', '**/requirements.txt') }}
          restore-keys: |
            ${{ env.CACHE_PREFIX }}-pip-${{ env.PYTHON_VERSION }}
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          corepack enable
          yarn set version 3.5.0
          echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: |
          pip install -e .
      - name: Check Release
        uses: jupyter-server/jupyter_releaser/.github/actions/check-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Distributions
        uses: actions/upload-artifact@v4
        with:
          name: jupyter-iam-releaser-dist-${{ github.run_number }}
          path: .jupyter_releaser_checkout/dist