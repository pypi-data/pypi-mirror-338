[buildout]
extends =
    https://raw.githubusercontent.com/syslabcom/metabase.buildout/b8bc51384654cb2796ce73bfeeb6b80bd6e5ce8f/base.cfg
    picked-versions.cfg
metabase-instances =
    metabase-global
    metabase-countries
parts +=
    ${:metabase-instances}
    alembic.ini
    alembic
    create-databases.sql
    dump-metabase
    restore-metabase
    init-metabase
    clear-metabase
    wait-metabase
develop = .

[secrets]
# Placeholder, see README

[metabase-jar]
recipe = hexagonit.recipe.download
url = https://downloads.metabase.com/v0.45.1/metabase.jar
md5sum = e4e41a7a2ad40b61287a365321bcca03
download-only = true

[metabase-instance]
metabase-user = admin@syslab.com
metabase-password = ${secrets:metabase-password}
ldap-host = 194.30.34.30
ldap-port = 389
ldap-bind-dn = uid=oshwikiwriter,dc=osha,dc=europa,dc=eu
ldap-password = ${secrets:ldap-password}
ldap-user-base = ou=people,dc=osha,dc=europa,dc=eu
ldap-user-filter = (mail={login}) 
ldap-attribute-firstname = uid

[metabase-global]
<= metabase-instance
metabase-port = 3001
database-name = metabase_global
database-name-statistics = statistics_global
global-statistics = true

[metabase-countries]
<= metabase-instance
metabase-port = 3010
database-name = metabase_countries
countries = eu,be,bg,de,hr,cy,cz,fi,fr,gr,hu,is,it,lv,lt,mt,nl,pt,si,sk,es

[alembic.ini]
recipe = collective.recipe.genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[alembic]
recipe = zc.recipe.egg:scripts
eggs =
    alembic
    oira.statistics.deployment
scripts =
    alembic

[sqlformat]
recipe = zc.recipe.egg:scripts
eggs =
    sqlparse

[dump-metabase]
<= metabase-instance
=> sqlformat
recipe = collective.recipe.template
input = ${buildout:directory}/templates/${:_buildout_section_name_}.tmpl
output = ${buildout:directory}/bin/${:_buildout_section_name_}
mode = 755

[restore-metabase]
<= metabase-instance
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}.tmpl
output = ${buildout:directory}/bin/${:_buildout_section_name_}
mode = 755

[create-databases.sql]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/create-databases.sql.tmpl
output = ${buildout:directory}/scripts/${:_buildout_section_name_}

[oira-scripts]
recipe = zc.recipe.egg
eggs =
    oira.statistics.deployment

[init-metabase]
=> oira-scripts
=> wait-metabase
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/init-metabase.tmpl
output = ${buildout:directory}/bin/${:_buildout_section_name_}
mode = 755

[clear-metabase]
=> oira-scripts
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/clear-metabase.tmpl
output = ${buildout:directory}/bin/${:_buildout_section_name_}
mode = 755

[wait-metabase]
=> oira-scripts
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/wait-metabase.tmpl
output = ${buildout:directory}/bin/${:_buildout_section_name_}
mode = 755

[supervisor]
programs =
    200 metabase-global     (environment=MB_JETTY_HOST=${metabase-global:metabase-host},MB_JETTY_PORT=${metabase-global:metabase-port},MB_DB_DBNAME=${metabase-global:database-name}) java [-jar ${metabase-jar:location}/metabase.jar] ${metabase-jar:location} true
    300 metabase-countries  (environment=MB_JETTY_HOST=${metabase-countries:metabase-host},MB_JETTY_PORT=${metabase-countries:metabase-port},MB_DB_DBNAME=${metabase-countries:database-name})         java [-jar ${metabase-jar:location}/metabase.jar] ${metabase-jar:location} true
