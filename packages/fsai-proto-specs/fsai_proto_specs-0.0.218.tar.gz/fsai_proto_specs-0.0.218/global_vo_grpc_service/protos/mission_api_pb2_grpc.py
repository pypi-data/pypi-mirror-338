# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from global_vo_grpc_service.protos import mission_api_pb2 as global__vo__grpc__service_dot_protos_dot_mission__api__pb2


class MissionApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMission = channel.unary_unary(
                '/MissionApi/CreateMission',
                request_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.CreateMissionRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.CreateMissionResponse.FromString,
                )
        self.ListMissions = channel.unary_unary(
                '/MissionApi/ListMissions',
                request_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsResponse.FromString,
                )
        self.ListMissionsByTaskIds = channel.unary_unary(
                '/MissionApi/ListMissionsByTaskIds',
                request_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsByTaskIdsRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsByTaskIdsResponse.FromString,
                )
        self.FindMissionById = channel.unary_unary(
                '/MissionApi/FindMissionById',
                request_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.FindMissionByIdRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.FindMissionByIdResponse.FromString,
                )
        self.DeleteMission = channel.unary_unary(
                '/MissionApi/DeleteMission',
                request_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.DeleteMissionRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.DeleteMissionResponse.FromString,
                )
        self.UpdateMissionById = channel.unary_unary(
                '/MissionApi/UpdateMissionById',
                request_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.UpdateMissionByIdRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.UpdateMissionByIdResponse.FromString,
                )


class MissionApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMissionsByTaskIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindMissionById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMissionById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MissionApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMission': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMission,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.CreateMissionRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.CreateMissionResponse.SerializeToString,
            ),
            'ListMissions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMissions,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsResponse.SerializeToString,
            ),
            'ListMissionsByTaskIds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMissionsByTaskIds,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsByTaskIdsRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsByTaskIdsResponse.SerializeToString,
            ),
            'FindMissionById': grpc.unary_unary_rpc_method_handler(
                    servicer.FindMissionById,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.FindMissionByIdRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.FindMissionByIdResponse.SerializeToString,
            ),
            'DeleteMission': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMission,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.DeleteMissionRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.DeleteMissionResponse.SerializeToString,
            ),
            'UpdateMissionById': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMissionById,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.UpdateMissionByIdRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_mission__api__pb2.UpdateMissionByIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MissionApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MissionApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MissionApi/CreateMission',
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.CreateMissionRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.CreateMissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MissionApi/ListMissions',
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMissionsByTaskIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MissionApi/ListMissionsByTaskIds',
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsByTaskIdsRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.ListMissionsByTaskIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindMissionById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MissionApi/FindMissionById',
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.FindMissionByIdRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.FindMissionByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MissionApi/DeleteMission',
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.DeleteMissionRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.DeleteMissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMissionById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MissionApi/UpdateMissionById',
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.UpdateMissionByIdRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_mission__api__pb2.UpdateMissionByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
