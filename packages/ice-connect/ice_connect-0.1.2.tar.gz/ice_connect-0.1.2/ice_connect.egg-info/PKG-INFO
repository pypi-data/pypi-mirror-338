Metadata-Version: 2.4
Name: ice_connect
Version: 0.1.2
Summary: A Python package for Interactive Connectivity Establishment (RFC 5245) with user-defined STUN servers.
Home-page: https://github.com/yetiman45/ice_connect
Author: Dipin Niroula
Author-email: dipinniroula@hotmail.com
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: pystun3
Requires-Dist: asyncio
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# ICE Connect

ICE Connect is a Python package that implements Interactive Connectivity Establishment (ICE) as specified in RFC 5245.
It allows dynamic STUN server configuration for gathering local candidates.

## Installation
```sh
pip install ice_connect
```

## Usage
```python
from ice_connect import IceAgent
import asyncio

async def main():
    agent = IceAgent(stun_server="stun.l.google.com")
    await agent.gather_local_candidates()
    agent.add_remote_candidate("192.168.1.2", 3478)
    success = await agent.establish_connection()
    if success:
        print("Connection verified with HELLO message exchange.")
    else:
        print("Connection could not be established.")

asyncio.run(main())
```
