# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from binance.subaccount.models.subaccount_create_sub_account_sub_account_api_ip_restriction_v2_resp import SubaccountCreateSubAccountSubAccountApiIpRestrictionV2Resp
from binance.subaccount.models.subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_resp import SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp
from binance.subaccount.models.subaccount_get_sub_account_sub_account_api_ip_restriction_v1_resp import SubaccountGetSubAccountSubAccountApiIpRestrictionV1Resp

from binance.subaccount.api_client import ApiClient, RequestSerialized
from binance.subaccount.api_response import ApiResponse
from binance.subaccount.rest import RESTResponseType


class ApiManagementApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def subaccount_create_sub_account_sub_account_api_ip_restriction_v2(
        self,
        email: StrictStr,
        status: StrictStr,
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        ip_address: Optional[StrictStr] = None,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SubaccountCreateSubAccountSubAccountApiIpRestrictionV2Resp:
        """Add IP Restriction for Sub-Account API key(For Master Account)

        Add IP Restriction for Sub-Account API key

        :param email: (required)
        :type email: str
        :param status: (required)
        :type status: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param ip_address:
        :type ip_address: str
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_create_sub_account_sub_account_api_ip_restriction_v2_serialize(
            email=email,
            status=status,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            ip_address=ip_address,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountCreateSubAccountSubAccountApiIpRestrictionV2Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def subaccount_create_sub_account_sub_account_api_ip_restriction_v2_with_http_info(
        self,
        email: StrictStr,
        status: StrictStr,
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        ip_address: Optional[StrictStr] = None,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SubaccountCreateSubAccountSubAccountApiIpRestrictionV2Resp]:
        """Add IP Restriction for Sub-Account API key(For Master Account)

        Add IP Restriction for Sub-Account API key

        :param email: (required)
        :type email: str
        :param status: (required)
        :type status: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param ip_address:
        :type ip_address: str
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_create_sub_account_sub_account_api_ip_restriction_v2_serialize(
            email=email,
            status=status,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            ip_address=ip_address,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountCreateSubAccountSubAccountApiIpRestrictionV2Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def subaccount_create_sub_account_sub_account_api_ip_restriction_v2_without_preload_content(
        self,
        email: StrictStr,
        status: StrictStr,
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        ip_address: Optional[StrictStr] = None,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Add IP Restriction for Sub-Account API key(For Master Account)

        Add IP Restriction for Sub-Account API key

        :param email: (required)
        :type email: str
        :param status: (required)
        :type status: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param ip_address:
        :type ip_address: str
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_create_sub_account_sub_account_api_ip_restriction_v2_serialize(
            email=email,
            status=status,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            ip_address=ip_address,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountCreateSubAccountSubAccountApiIpRestrictionV2Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _subaccount_create_sub_account_sub_account_api_ip_restriction_v2_serialize(
        self,
        email,
        status,
        sub_account_api_key,
        timestamp,
        ip_address,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        if email is not None:
            _form_params.append(('email', email))
        if ip_address is not None:
            _form_params.append(('ipAddress', ip_address))
        if recv_window is not None:
            _form_params.append(('recvWindow', recv_window))
        if status is not None:
            _form_params.append(('status', status))
        if sub_account_api_key is not None:
            _form_params.append(('subAccountApiKey', sub_account_api_key))
        if timestamp is not None:
            _form_params.append(('timestamp', timestamp))
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/x-www-form-urlencoded'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sapi/v2/sub-account/subAccountApi/ipRestriction',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1(
        self,
        email: Annotated[StrictStr, Field(description="<a href=\"/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address\">Sub-account email</a>")],
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        ip_address: Annotated[Optional[StrictStr], Field(description="Can be added in batches, separated by commas")] = None,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp:
        """Delete IP List For a Sub-account API Key(For Master Account)

        Delete IP List For a Sub-account API Key

        :param email: <a href=\"/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address\">Sub-account email</a> (required)
        :type email: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param ip_address: Can be added in batches, separated by commas
        :type ip_address: str
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_serialize(
            email=email,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            ip_address=ip_address,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_with_http_info(
        self,
        email: Annotated[StrictStr, Field(description="<a href=\"/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address\">Sub-account email</a>")],
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        ip_address: Annotated[Optional[StrictStr], Field(description="Can be added in batches, separated by commas")] = None,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp]:
        """Delete IP List For a Sub-account API Key(For Master Account)

        Delete IP List For a Sub-account API Key

        :param email: <a href=\"/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address\">Sub-account email</a> (required)
        :type email: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param ip_address: Can be added in batches, separated by commas
        :type ip_address: str
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_serialize(
            email=email,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            ip_address=ip_address,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_without_preload_content(
        self,
        email: Annotated[StrictStr, Field(description="<a href=\"/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address\">Sub-account email</a>")],
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        ip_address: Annotated[Optional[StrictStr], Field(description="Can be added in batches, separated by commas")] = None,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete IP List For a Sub-account API Key(For Master Account)

        Delete IP List For a Sub-account API Key

        :param email: <a href=\"/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address\">Sub-account email</a> (required)
        :type email: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param ip_address: Can be added in batches, separated by commas
        :type ip_address: str
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_serialize(
            email=email,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            ip_address=ip_address,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _subaccount_delete_sub_account_sub_account_api_ip_restriction_ip_list_v1_serialize(
        self,
        email,
        sub_account_api_key,
        timestamp,
        ip_address,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if email is not None:
            
            _query_params.append(('email', email))
            
        if sub_account_api_key is not None:
            
            _query_params.append(('subAccountApiKey', sub_account_api_key))
            
        if ip_address is not None:
            
            _query_params.append(('ipAddress', ip_address))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def subaccount_get_sub_account_sub_account_api_ip_restriction_v1(
        self,
        email: Annotated[StrictStr, Field(description="<a href=\"/docs/sub_account/api-management#email-address\">Sub-account email</a>")],
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SubaccountGetSubAccountSubAccountApiIpRestrictionV1Resp:
        """Get IP Restriction for a Sub-account API Key(For Master Account)

        Get IP Restriction for a Sub-account API Key

        :param email: <a href=\"/docs/sub_account/api-management#email-address\">Sub-account email</a> (required)
        :type email: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_get_sub_account_sub_account_api_ip_restriction_v1_serialize(
            email=email,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountGetSubAccountSubAccountApiIpRestrictionV1Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def subaccount_get_sub_account_sub_account_api_ip_restriction_v1_with_http_info(
        self,
        email: Annotated[StrictStr, Field(description="<a href=\"/docs/sub_account/api-management#email-address\">Sub-account email</a>")],
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SubaccountGetSubAccountSubAccountApiIpRestrictionV1Resp]:
        """Get IP Restriction for a Sub-account API Key(For Master Account)

        Get IP Restriction for a Sub-account API Key

        :param email: <a href=\"/docs/sub_account/api-management#email-address\">Sub-account email</a> (required)
        :type email: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_get_sub_account_sub_account_api_ip_restriction_v1_serialize(
            email=email,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountGetSubAccountSubAccountApiIpRestrictionV1Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def subaccount_get_sub_account_sub_account_api_ip_restriction_v1_without_preload_content(
        self,
        email: Annotated[StrictStr, Field(description="<a href=\"/docs/sub_account/api-management#email-address\">Sub-account email</a>")],
        sub_account_api_key: StrictStr,
        timestamp: StrictInt,
        recv_window: Optional[StrictInt] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get IP Restriction for a Sub-account API Key(For Master Account)

        Get IP Restriction for a Sub-account API Key

        :param email: <a href=\"/docs/sub_account/api-management#email-address\">Sub-account email</a> (required)
        :type email: str
        :param sub_account_api_key: (required)
        :type sub_account_api_key: str
        :param timestamp: (required)
        :type timestamp: int
        :param recv_window:
        :type recv_window: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._subaccount_get_sub_account_sub_account_api_ip_restriction_v1_serialize(
            email=email,
            sub_account_api_key=sub_account_api_key,
            timestamp=timestamp,
            recv_window=recv_window,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SubaccountGetSubAccountSubAccountApiIpRestrictionV1Resp",
            '4XX': "APIError",
            '5XX': "APIError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _subaccount_get_sub_account_sub_account_api_ip_restriction_v1_serialize(
        self,
        email,
        sub_account_api_key,
        timestamp,
        recv_window,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if email is not None:
            
            _query_params.append(('email', email))
            
        if sub_account_api_key is not None:
            
            _query_params.append(('subAccountApiKey', sub_account_api_key))
            
        if recv_window is not None:
            
            _query_params.append(('recvWindow', recv_window))
            
        if timestamp is not None:
            
            _query_params.append(('timestamp', timestamp))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sapi/v1/sub-account/subAccountApi/ipRestriction',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


