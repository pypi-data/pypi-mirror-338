[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spatialoperations"
version = "0.1.24"
requires-python = '>=3.12, <3.13'
readme = "README.md"
description = "Geospatial analysis environment."
authors = [
    { name = "Chris Lowrie", email = "lowriechris779@gmail.com" }
]
classifiers = [
    'Programming Language :: Python :: 3',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent'
]
license = { text = "MIT" }
# For some reason boto3 fails when I pin the version with an error in dask
dependencies = [
    "boto3",
    "python-dotenv",
    "coastal_resilience_utilities>=0.1.36",
    "dask[array,dataframe,diagnostics,distributed]>=2025.2.0",
    "dask>=2025.2.0",
    "duckdb>=1.2.0",
    "fastparquet>=2024.11.0",
    "fiona>=1.10.1",
    "fsspec>=2025.2.0",
    "gcsfs>=2025.2.0",
    "geopandas>=1.0.1",
    "google-cloud-storage>=3.0.0",
    "h5netcdf>=1.5.0",
    "jinja2>=2.11.2",
    "joblib>=1.4.2",
    "kubernetes>=12.0.0",
    "matplotlib>=3.10.0",
    "memory-profiler>=0.61.0",
    "numba==0.60.0",
    "numpy>=2.0.2",
    "odc-geo>=0.4.9.post0",
    "pandas>=2.2.3",
    "pyarrow>=19.0.0",
    "pytest>=8.3.4",
    "pytimeparse>=1.1.8",
    "pyyaml>=5.1",
    "rasterio>=1.4.3",
    "rioxarray>=0.18.2",
    "s2sphere>=0.2.5",
    "s3fs>=2025.2.0",
    "toml>=0.10.2",
    "tqdm>=4.67.1",
    "xarray>=2025.1.2",
    "xarray-spatial>=0.4.0",
    "zarr>=3.0.3",
]

[tool.setuptools]
packages = { find = { include = ["spatialoperations", "spatialoperations.*"], exclude = ["Dockerfiles", "installation_tests", "charts", "deployment", "version_info"] } }

#[tool.uv.sources]
# geospatial-analysis-environment = { workspace = true }

[tool.uv.workspace]
members = ["services/cog_server"]
