# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: briton.proto
# Protobuf Python Version: 5.28.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    1,
    '',
    'briton.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x62riton.proto\x12\x06\x62riton\"r\n\x06Tensor\x12#\n\x05shape\x18\x01 \x01(\x0b\x32\x14.briton.Tensor.Shape\x12\x1f\n\x05\x64type\x18\x02 \x01(\x0e\x32\x10.briton.DataType\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x1a\x14\n\x05Shape\x12\x0b\n\x03\x64im\x18\x01 \x03(\x03\"\x1c\n\x05\x42\x61tch\x12\x13\n\x0brequest_ids\x18\x01 \x03(\x03\"a\n\x17LookaheadDecodingConfig\x12\x13\n\x0bwindow_size\x18\x01 \x01(\x05\x12\x12\n\nngram_size\x18\x02 \x01(\x05\x12\x1d\n\x15verification_set_size\x18\x03 \x01(\x05\"\xb5\x01\n\x14GuidedDecodingParams\x12:\n\nguide_type\x18\x01 \x01(\x0e\x32&.briton.GuidedDecodingParams.GuideType\x12\x12\n\x05guide\x18\x02 \x01(\tH\x00\x88\x01\x01\"C\n\tGuideType\x12\x08\n\x04JSON\x10\x00\x12\x0f\n\x0bJSON_SCHEMA\x10\x01\x12\t\n\x05REGEX\x10\x02\x12\x10\n\x0c\x45\x42NF_GRAMMAR\x10\x03\x42\x08\n\x06_guide\"\xa1\t\n\x10InferenceRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\x03\x12\x17\n\ninput_text\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x11\n\tinput_ids\x18\x03 \x03(\x05\x12\x1f\n\x12request_output_len\x18\x05 \x01(\rH\x01\x88\x01\x01\x12\x13\n\x06\x65nd_id\x18\x06 \x01(\rH\x02\x88\x01\x01\x12\x13\n\x06pad_id\x18\x07 \x01(\rH\x03\x88\x01\x01\x12\x17\n\nbeam_width\x18\n \x01(\rH\x04\x88\x01\x01\x12\x18\n\x0btemperature\x18\x0b \x01(\x02H\x05\x88\x01\x01\x12\x1a\n\rruntime_top_k\x18\x0c \x01(\rH\x06\x88\x01\x01\x12\x1a\n\rruntime_top_p\x18\r \x01(\x02H\x07\x88\x01\x01\x12\x18\n\x0blen_penalty\x18\x0e \x01(\x02H\x08\x88\x01\x01\x12\x1f\n\x12repetition_penalty\x18\x0f \x01(\x02H\t\x88\x01\x01\x12\x1d\n\x10presence_penalty\x18\x10 \x01(\x02H\n\x88\x01\x01\x12\x1e\n\x11\x66requency_penalty\x18\x11 \x01(\x02H\x0b\x88\x01\x01\x12\x15\n\x08logprobs\x18\x12 \x01(\x08H\x0c\x88\x01\x01\x12\x19\n\x0ctop_logprobs\x18\x13 \x01(\rH\r\x88\x01\x01\x12\x11\n\tbad_words\x18\x14 \x03(\t\x12\x12\n\nstop_words\x18\x15 \x03(\t\x12\x19\n\x0clora_task_id\x18\x16 \x01(\x04H\x0e\x88\x01\x01\x12)\n\x0clora_weights\x18\x17 \x01(\x0b\x32\x0e.briton.TensorH\x0f\x88\x01\x01\x12(\n\x0blora_config\x18\x18 \x01(\x0b\x32\x0e.briton.TensorH\x10\x88\x01\x01\x12\x18\n\x0brandom_seed\x18\x19 \x01(\x03H\x11\x88\x01\x01\x12\x17\n\x0f\x64raft_input_ids\x18\x1a \x03(\x05\x12!\n\x05\x62\x61tch\x18\x1f \x01(\x0b\x32\r.briton.BatchH\x12\x88\x01\x01\x12G\n\x19lookahead_decoding_config\x18  \x01(\x0b\x32\x1f.briton.LookaheadDecodingConfigH\x13\x88\x01\x01\x12\x41\n\x16guided_decoding_params\x18! \x01(\x0b\x32\x1c.briton.GuidedDecodingParamsH\x14\x88\x01\x01\x42\r\n\x0b_input_textB\x15\n\x13_request_output_lenB\t\n\x07_end_idB\t\n\x07_pad_idB\r\n\x0b_beam_widthB\x0e\n\x0c_temperatureB\x10\n\x0e_runtime_top_kB\x10\n\x0e_runtime_top_pB\x0e\n\x0c_len_penaltyB\x15\n\x13_repetition_penaltyB\x13\n\x11_presence_penaltyB\x14\n\x12_frequency_penaltyB\x0b\n\t_logprobsB\x0f\n\r_top_logprobsB\x0f\n\r_lora_task_idB\x0f\n\r_lora_weightsB\x0e\n\x0c_lora_configB\x0e\n\x0c_random_seedB\x08\n\x06_batchB\x1c\n\x1a_lookahead_decoding_configB\x19\n\x17_guided_decoding_params\"\xc1\x01\n\x13InferenceAnswerPart\x12\x12\n\nrequest_id\x18\x01 \x01(\x03\x12\x13\n\x0boutput_text\x18\x02 \x01(\t\x12\x12\n\noutput_ids\x18\x03 \x03(\x05\x12\x30\n\rfinish_reason\x18\x05 \x01(\x0e\x32\x14.briton.FinishReasonH\x00\x88\x01\x01\x12)\n\x0ctop_logprobs\x18\x06 \x03(\x0b\x32\x13.briton.TopLogProbsB\x10\n\x0e_finish_reason\"\x84\x01\n\x0bTopLogProbs\x12\x0f\n\x07logprob\x18\x01 \x01(\x02\x12\x33\n\x08logprobs\x18\x02 \x03(\x0b\x32!.briton.TopLogProbs.LogprobsEntry\x1a/\n\rLogprobsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\xe2\x01\n\nAddedToken\x12\x14\n\x07\x63ontent\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x18\n\x0bsingle_word\x18\x02 \x01(\x08H\x01\x88\x01\x01\x12\x13\n\x06lstrip\x18\x03 \x01(\x08H\x02\x88\x01\x01\x12\x13\n\x06rstrip\x18\x04 \x01(\x08H\x03\x88\x01\x01\x12\x17\n\nnormalized\x18\x05 \x01(\x08H\x04\x88\x01\x01\x12\x14\n\x07special\x18\x06 \x01(\x08H\x05\x88\x01\x01\x42\n\n\x08_contentB\x0e\n\x0c_single_wordB\t\n\x07_lstripB\t\n\x07_rstripB\r\n\x0b_normalizedB\n\n\x08_special\"1\n\x0b\x41\x64\x64\x65\x64Tokens\x12\"\n\x06tokens\x18\x01 \x03(\x0b\x32\x12.briton.AddedToken\"V\n\x0eXGrammarConfig\x12\x15\n\rencoded_vocab\x18\x01 \x03(\t\x12\x15\n\rtokenizer_str\x18\x02 \x01(\t\x12\x16\n\x0estop_token_ids\x18\x03 \x03(\x05\"\x9c\x0b\n\x0c\x42ritonConfig\x12\x13\n\x0b\x65ngine_path\x18\x01 \x01(\t\x12\x14\n\x0chf_tokenizer\x18\x02 \x01(\t\x12\x11\n\x04port\x18\x03 \x01(\rH\x00\x88\x01\x01\x12N\n\x16\x62\x61tch_scheduler_policy\x18\x05 \x01(\x0e\x32).briton.BritonConfig.BatchSchedulerPolicyH\x01\x88\x01\x01\x12\x1f\n\x12\x65nable_trt_overlap\x18\x06 \x01(\x08H\x02\x88\x01\x01\x12)\n\x1cmax_tokens_in_paged_kv_cache\x18\n \x01(\x04H\x03\x88\x01\x01\x12+\n\x1ekv_cache_free_gpu_mem_fraction\x18\x0b \x01(\x02H\x04\x88\x01\x01\x12!\n\x14medusa_decoding_mode\x18\x0c \x01(\x08H\x05\x88\x01\x01\x12#\n\x16\x65nable_chunked_context\x18\r \x01(\x08H\x06\x88\x01\x01\x12\"\n\x15\x65nable_kv_cache_reuse\x18\x0e \x01(\x08H\x07\x88\x01\x01\x12\'\n\x1akv_cache_host_memory_bytes\x18\x0f \x01(\x04H\x08\x88\x01\x01\x12(\n\x1blora_cache_max_adapter_size\x18\x10 \x01(\x04H\t\x88\x01\x01\x12,\n\x1flora_cache_optimal_adapter_size\x18\x11 \x01(\x04H\n\x88\x01\x01\x12+\n\x1elora_cache_gpu_memory_fraction\x18\x12 \x01(\x02H\x0b\x88\x01\x01\x12)\n\x1clora_cache_host_memory_bytes\x18\x13 \x01(\x04H\x0c\x88\x01\x01\x12\x1e\n\x11max_batch_wait_ms\x18\x15 \x01(\rH\r\x88\x01\x01\x12.\n\x0c\x61\x64\x64\x65\x64_tokens\x18\x16 \x01(\x0b\x32\x13.briton.AddedTokensH\x0e\x88\x01\x01\x12\x1b\n\x0emax_num_tokens\x18\x17 \x01(\rH\x0f\x88\x01\x01\x12G\n\x19lookahead_decoding_config\x18\x18 \x01(\x0b\x32\x1f.briton.LookaheadDecodingConfigH\x10\x88\x01\x01\x12\x1b\n\x0emax_batch_size\x18\x19 \x01(\x05H\x11\x88\x01\x01\x12\x34\n\x0fxgrammar_config\x18\x1a \x01(\x0b\x32\x16.briton.XGrammarConfigH\x12\x88\x01\x01\"D\n\x14\x42\x61tchSchedulerPolicy\x12\x13\n\x0fMAX_UTILIZATION\x10\x00\x12\x17\n\x13GUARANTEED_NO_EVICT\x10\x01\x42\x07\n\x05_portB\x19\n\x17_batch_scheduler_policyB\x15\n\x13_enable_trt_overlapB\x1f\n\x1d_max_tokens_in_paged_kv_cacheB!\n\x1f_kv_cache_free_gpu_mem_fractionB\x17\n\x15_medusa_decoding_modeB\x19\n\x17_enable_chunked_contextB\x18\n\x16_enable_kv_cache_reuseB\x1d\n\x1b_kv_cache_host_memory_bytesB\x1e\n\x1c_lora_cache_max_adapter_sizeB\"\n _lora_cache_optimal_adapter_sizeB!\n\x1f_lora_cache_gpu_memory_fractionB\x1f\n\x1d_lora_cache_host_memory_bytesB\x14\n\x12_max_batch_wait_msB\x0f\n\r_added_tokensB\x11\n\x0f_max_num_tokensB\x1c\n\x1a_lookahead_decoding_configB\x11\n\x0f_max_batch_sizeB\x12\n\x10_xgrammar_config*\xa8\x01\n\x08\x44\x61taType\x12\x0e\n\nDT_INVALID\x10\x00\x12\x0b\n\x07\x44T_INT4\x10\x01\x12\x0b\n\x07\x44T_INT8\x10\x02\x12\x0c\n\x08\x44T_UINT8\x10\x03\x12\x0c\n\x08\x44T_INT32\x10\x04\x12\x0c\n\x08\x44T_INT64\x10\x05\x12\x0e\n\nDT_FLOAT16\x10\n\x12\x0f\n\x0b\x44T_BFLOAT16\x10\x0b\x12\x0e\n\nDT_FLOAT32\x10\x0c\x12\n\n\x06\x44T_FP8\x10\r\x12\x0b\n\x07\x44T_BOOL\x10\x14*f\n\x0c\x46inishReason\x12\x10\n\x0cNOT_FINISHED\x10\x00\x12\n\n\x06\x45ND_ID\x10\x01\x12\x0e\n\nSTOP_WORDS\x10\x02\x12\n\n\x06LENGTH\x10\x03\x12\r\n\tTIMED_OUT\x10\x04\x12\r\n\tCANCELLED\x10\x05\x32L\n\x06\x42riton\x12\x42\n\x05Infer\x12\x18.briton.InferenceRequest\x1a\x1b.briton.InferenceAnswerPart\"\x00\x30\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'briton_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_TOPLOGPROBS_LOGPROBSENTRY']._loaded_options = None
  _globals['_TOPLOGPROBS_LOGPROBSENTRY']._serialized_options = b'8\001'
  _globals['_DATATYPE']._serialized_start=3780
  _globals['_DATATYPE']._serialized_end=3948
  _globals['_FINISHREASON']._serialized_start=3950
  _globals['_FINISHREASON']._serialized_end=4052
  _globals['_TENSOR']._serialized_start=24
  _globals['_TENSOR']._serialized_end=138
  _globals['_TENSOR_SHAPE']._serialized_start=118
  _globals['_TENSOR_SHAPE']._serialized_end=138
  _globals['_BATCH']._serialized_start=140
  _globals['_BATCH']._serialized_end=168
  _globals['_LOOKAHEADDECODINGCONFIG']._serialized_start=170
  _globals['_LOOKAHEADDECODINGCONFIG']._serialized_end=267
  _globals['_GUIDEDDECODINGPARAMS']._serialized_start=270
  _globals['_GUIDEDDECODINGPARAMS']._serialized_end=451
  _globals['_GUIDEDDECODINGPARAMS_GUIDETYPE']._serialized_start=374
  _globals['_GUIDEDDECODINGPARAMS_GUIDETYPE']._serialized_end=441
  _globals['_INFERENCEREQUEST']._serialized_start=454
  _globals['_INFERENCEREQUEST']._serialized_end=1639
  _globals['_INFERENCEANSWERPART']._serialized_start=1642
  _globals['_INFERENCEANSWERPART']._serialized_end=1835
  _globals['_TOPLOGPROBS']._serialized_start=1838
  _globals['_TOPLOGPROBS']._serialized_end=1970
  _globals['_TOPLOGPROBS_LOGPROBSENTRY']._serialized_start=1923
  _globals['_TOPLOGPROBS_LOGPROBSENTRY']._serialized_end=1970
  _globals['_ADDEDTOKEN']._serialized_start=1973
  _globals['_ADDEDTOKEN']._serialized_end=2199
  _globals['_ADDEDTOKENS']._serialized_start=2201
  _globals['_ADDEDTOKENS']._serialized_end=2250
  _globals['_XGRAMMARCONFIG']._serialized_start=2252
  _globals['_XGRAMMARCONFIG']._serialized_end=2338
  _globals['_BRITONCONFIG']._serialized_start=2341
  _globals['_BRITONCONFIG']._serialized_end=3777
  _globals['_BRITONCONFIG_BATCHSCHEDULERPOLICY']._serialized_start=3210
  _globals['_BRITONCONFIG_BATCHSCHEDULERPOLICY']._serialized_end=3278
  _globals['_BRITON']._serialized_start=4054
  _globals['_BRITON']._serialized_end=4130
# @@protoc_insertion_point(module_scope)
