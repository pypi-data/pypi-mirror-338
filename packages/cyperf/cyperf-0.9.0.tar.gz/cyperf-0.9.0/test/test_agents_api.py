# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Contact: support@keysight.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.api.agents_api import AgentsApi


class TestAgentsApi(unittest.TestCase):
    """AgentsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AgentsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_agents(self) -> None:
        """Test case for delete_agents

        """
        pass

    def test_get_agent_tags(self) -> None:
        """Test case for get_agent_tags

        """
        pass

    def test_get_agents(self) -> None:
        """Test case for get_agents

        """
        pass

    def test_get_agents_by_id(self) -> None:
        """Test case for get_agents_by_id

        """
        pass

    def test_get_compute_nodes(self) -> None:
        """Test case for get_compute_nodes

        """
        pass

    def test_get_compute_nodes_by_id(self) -> None:
        """Test case for get_compute_nodes_by_id

        """
        pass

    def test_get_controllers(self) -> None:
        """Test case for get_controllers

        """
        pass

    def test_get_controllers_by_id(self) -> None:
        """Test case for get_controllers_by_id

        """
        pass

    def test_get_ports(self) -> None:
        """Test case for get_ports

        """
        pass

    def test_get_ports_by_id(self) -> None:
        """Test case for get_ports_by_id

        """
        pass

    def test_patch_agents(self) -> None:
        """Test case for patch_agents

        """
        pass

    def test_poll_batch_delete(self) -> None:
        """Test case for poll_batch_delete

        """
        pass

    def test_poll_controllers_clear_port_ownership(self) -> None:
        """Test case for poll_controllers_clear_port_ownership

        """
        pass

    def test_poll_controllers_power_cycle_nodes(self) -> None:
        """Test case for poll_controllers_power_cycle_nodes

        """
        pass

    def test_poll_controllers_reboot_port(self) -> None:
        """Test case for poll_controllers_reboot_port

        """
        pass

    def test_poll_controllers_set_app(self) -> None:
        """Test case for poll_controllers_set_app

        """
        pass

    def test_poll_controllers_set_node_aggregation(self) -> None:
        """Test case for poll_controllers_set_node_aggregation

        """
        pass

    def test_poll_controllers_set_port_link_state(self) -> None:
        """Test case for poll_controllers_set_port_link_state

        """
        pass

    def test_poll_export_files(self) -> None:
        """Test case for poll_export_files

        """
        pass

    def test_poll_reboot(self) -> None:
        """Test case for poll_reboot

        """
        pass

    def test_poll_release(self) -> None:
        """Test case for poll_release

        """
        pass

    def test_poll_reserve(self) -> None:
        """Test case for poll_reserve

        """
        pass

    def test_poll_set_dpdk_mode(self) -> None:
        """Test case for poll_set_dpdk_mode

        """
        pass

    def test_poll_set_ntp(self) -> None:
        """Test case for poll_set_ntp

        """
        pass

    def test_poll_update(self) -> None:
        """Test case for poll_update

        """
        pass

    def test_start_batch_delete(self) -> None:
        """Test case for start_batch_delete

        """
        pass

    def test_start_controllers_clear_port_ownership(self) -> None:
        """Test case for start_controllers_clear_port_ownership

        """
        pass

    def test_start_controllers_power_cycle_nodes(self) -> None:
        """Test case for start_controllers_power_cycle_nodes

        """
        pass

    def test_start_controllers_reboot_port(self) -> None:
        """Test case for start_controllers_reboot_port

        """
        pass

    def test_start_controllers_set_app(self) -> None:
        """Test case for start_controllers_set_app

        """
        pass

    def test_start_controllers_set_node_aggregation(self) -> None:
        """Test case for start_controllers_set_node_aggregation

        """
        pass

    def test_start_controllers_set_port_link_state(self) -> None:
        """Test case for start_controllers_set_port_link_state

        """
        pass

    def test_start_export_files(self) -> None:
        """Test case for start_export_files

        """
        pass

    def test_start_reboot(self) -> None:
        """Test case for start_reboot

        """
        pass

    def test_start_release(self) -> None:
        """Test case for start_release

        """
        pass

    def test_start_reserve(self) -> None:
        """Test case for start_reserve

        """
        pass

    def test_start_set_dpdk_mode(self) -> None:
        """Test case for start_set_dpdk_mode

        """
        pass

    def test_start_set_ntp(self) -> None:
        """Test case for start_set_ntp

        """
        pass

    def test_start_update(self) -> None:
        """Test case for start_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
