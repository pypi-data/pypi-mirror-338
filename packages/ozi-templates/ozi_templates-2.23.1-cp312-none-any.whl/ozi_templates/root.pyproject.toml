{#- OZI 0.9
# ozi/templates/root.pyproject.toml
# SPDX-License-Identifier: Unlicense
-#}
[project]
{%- if project.dist_requires|length %}
dependencies = [
{%- for req in project.dist_requires %}
    '{{ req }}',
{%- endfor %}
]
{%- endif %}

[build-system]
requires = [
{%- for requires in spec.python.build.requires.values() %}
{%- set r = requires -%}
{%- if project.enable_uv %}
{%- set r = r|replace('OZI.build[', 'OZI.build[uv,')%}
{%- endif %}
{%- if project.enable_cython %}
{%- set r = r|replace('OZI.build[', 'OZI.build[cython,')%}
{%- endif %}
    "{{ r }}",
{%- endfor %}
]
build-backend = "{{ spec.python.build.backend }}"

[tool.ozi-build.metadata]
summary="{{ project.summary }}"
author="{{ project.author|join(',') }}"
author-email="{{ project.author_email|join(',') }}"
description-file="README.{{ project.long_description_content_type }}"
{%- if project.maintainer|length %}
maintainer="{{ project.maintainer|join(',') }}"
{%- endif %}
{%- if project.maintainer_email|length %}
maintainer-email="{{ project.maintainer_email|join(',') }}"
{%- endif %}
{%- if project.keywords|length %}
keywords="{{ project.keywords|join(',') }}"
{%- endif %}
classifiers=[
    "License :: {{ project.license }}",
{%- if project.license == 'Private' %}
    "Private :: Do Not Upload",
{%- endif %}
{%- for status in project.status %}
    "Development Status :: {{ status }}",
{%- endfor %}
    "Programming Language :: Python :: {{ spec.python.support.major }} :: Only",
    "Programming Language :: Python :: {{ spec.python.support.security2 }}",
    "Programming Language :: Python :: {{ spec.python.support.security1 }}",
    "Programming Language :: Python :: {{ spec.python.support.bugfix }}",
{%- for implementation in spec.python.support.implementations %}
    "Programming Language :: Python :: Implementation :: {{ implementation }}",
{%- endfor %}
{%- for audience in project.audience %}
    "Intended Audience :: {{ audience }}",
{%- endfor %}
{%- for language in project.language %}
    "Natural Language :: {{ language }}",
{%- endfor %}
{%- for topic in project.topic %}
    "Topic :: {{ topic }}",
{%- endfor %}
{%- for typing in project.typing %}
    "Typing :: {{ typing }}",
{%- endfor %}
{%- for framework in project.framework %}
    "Framework :: {{ framework }}",
{%- endfor %}
{%- for environment in project.environment %}
    "Environment :: {{ environment }}",
{%- endfor %}
]
{%- if project.requires_external|length %}
requires-external=[
{%- for req in project.requires_external %}
    '{{ req }}',
{%- endfor %}
]
{%- endif %}
{%- if project.project_url|length %}
project-urls=[
{%- for project_url in project.project_url %}
    "{{ project_url }}",
{%- endfor %}
]
{%- endif %}

[project.optional-dependencies] # also meson test suite names
# OZI Packaging Dependencies
# continuous integration
ci   = [
{%- for pkg in spec.python.ci.backend.values() %}
    "{{ pkg }}",
{%- endfor %}
]
# tox -e fix
fix  = ["black>=24.3", "ruff>=0.1.6", "autoflake", "isort"]
# Default meson test setup
# dev  = ["[{% for suite in spec.python.ci.checkpoint.suites %}{{ suite }},{% endfor %}]"]
{%- for suite in spec.python.ci.checkpoint.suites %}
{{ suite }} = [
{%- for utility in spec.python.get(suite).utility.values() %}
    "{{ utility }}",
{%- endfor %}
{%- for plugin in spec.python.get(suite).plugin.values() %}
    "{{ plugin }}",
{%- endfor %}
]
{%- endfor %}
