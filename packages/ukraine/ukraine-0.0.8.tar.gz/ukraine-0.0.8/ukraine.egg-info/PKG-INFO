Metadata-Version: 2.4
Name: ukraine
Version: 0.0.8
Summary: Ukraine: A Data Science Toolkit
Author-email: Anar <anarstanislavlavrenov@gmail.com>
License: MIT
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Provides-Extra: langchain-openai
Requires-Dist: langchain-openai; extra == "langchain-openai"
Requires-Dist: langchain_community; extra == "langchain-openai"
Requires-Dist: pypdf; extra == "langchain-openai"
Requires-Dist: faiss-cpu; extra == "langchain-openai"
Provides-Extra: langchain-deepseek
Requires-Dist: langchain-deepseek; extra == "langchain-deepseek"
Requires-Dist: langchain_community; extra == "langchain-deepseek"
Requires-Dist: langchain_openai; extra == "langchain-deepseek"
Requires-Dist: pypdf; extra == "langchain-deepseek"
Requires-Dist: faiss-cpu; extra == "langchain-deepseek"
Provides-Extra: langchain-llama
Requires-Dist: langchain-nvidia-ai-endpoints; extra == "langchain-llama"
Requires-Dist: langchain_community; extra == "langchain-llama"
Requires-Dist: langchain_openai; extra == "langchain-llama"
Requires-Dist: pypdf; extra == "langchain-llama"
Requires-Dist: faiss-cpu; extra == "langchain-llama"
Provides-Extra: jira
Requires-Dist: langchain-openai; extra == "jira"
Requires-Dist: langchain_community; extra == "jira"
Requires-Dist: langchain; extra == "jira"
Requires-Dist: atlassian-python-api; extra == "jira"
Provides-Extra: agno
Requires-Dist: agno; extra == "agno"
Requires-Dist: firecrawl; extra == "agno"
Provides-Extra: expressnet
Requires-Dist: torch; extra == "expressnet"
Provides-Extra: phaseunet
Requires-Dist: torch; extra == "phaseunet"
Requires-Dist: torchaudio; extra == "phaseunet"

# Ukraine

Ukraine is a deep learning toolkit that includes research models, approaches and utils.

## Installation

```bash
pip install -U ukraine[langchain_llama]
```

```python
from ukraine.agents.rag import PDFLlamaRAGAgent

agent = PDFLlamaRAGAgent(
    file_path="PATH_TO_PDF",
    system_prompt="""Provide answers based on the document."{context}"""
)
result = agent.chat("What is this document about?")
print(result["answer"])
```
[View this example in the cookbook](./cookbook/rag_cookbook.ipynb)
