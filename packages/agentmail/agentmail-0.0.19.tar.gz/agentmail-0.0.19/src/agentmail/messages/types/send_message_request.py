# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .send_message_to import SendMessageTo
import typing
from .send_message_cc import SendMessageCc
from .send_message_bcc import SendMessageBcc
from .message_subject import MessageSubject
from .message_text import MessageText
from .message_html import MessageHtml
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SendMessageRequest(UniversalBaseModel):
    to: SendMessageTo
    cc: typing.Optional[SendMessageCc] = None
    bcc: typing.Optional[SendMessageBcc] = None
    subject: typing.Optional[MessageSubject] = None
    text: typing.Optional[MessageText] = None
    html: typing.Optional[MessageHtml] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
