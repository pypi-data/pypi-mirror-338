"""SAMTTS Reciter

Reciter converts text to phonemes.
"""

from __future__ import annotations


# tab36376 = bytes([
#     0, 0, 0, 0, 0, 0, 0, 0, # 0-7
#     0, 0, 0, 0, 0, 0, 0, 0, # 8-15
#     0, 0, 0, 0, 0, 0, 0, 0,
#     0, 0, 0, 0, 0, 0, 0, 0,
#     0, 2, 2, 2, 2, 2, 2, 130, # ' ', '!'
#     0, 0, 2, 2, 2, 2, 2, 2,
#     3, 3, 3, 3, 3, 3, 3, 3,
#     3, 3, 2, 2, 2, 2, 2, 2,
#     2, 192, 168, 176, 172, 192, 160, 184, # '@', 'A'
#     160, 192, 188, 160, 172, 168, 172, 192,
#     160, 160, 172, 180, 164, 192, 168, 168,
#     176, 192, 188, 0, 0, 0, 2, 0, # 'X', 'Y', 'Z', '[',
#     32, 32, 155, 32, 192, 185, 32, 205,
#     163, 76, 138, 142
# ])
tab36376 = b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x02\x02\x02\x02\x02\x82\x00\x00\x02\x02\x02\x02\x02\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x02\x02\x02\x02\x02\x02\x02\xc0\xa8\xb0\xac\xc0\xa0\xb8\xa0\xc0\xbc\xa0\xac\xa8\xac\xc0\xa0\xa0\xac\xb4\xa4\xc0\xa8\xa8\xb0\xc0\xbc\x00\x00\x00\x02\x00  \x9b \xc0\xb9 \xcd\xa3L\x8a\x8e"


# temp_rules_list = [
#     ']','A',0x80,
#     ' ','(','A','.',')',                    '=','E','H','4','Y','.',' ',0x80,
#     '(','A',')',' ',                        '=','A','H',0x80,
#     ' ','(','A','R','E',')',' ',            '=','A','A','R',0x80,
#     ' ','(','A','R',')','O',                '=','A','X','R',0x80,
#     '(','A','R',')','#',                    '=','E','H','4','R',0x80,
#     ' ','^','(','A','S',')','#',            '=','E','Y','4','S',0x80,
#     '(','A',')','W','A',                    '=','A','X',0x80,
#     '(','A','W',')',                        '=','A','O','5',0x80,
#     ' ',':','(','A','N','Y',')',            '=','E','H','4','N','I','Y',0x80,
#     '(','A',')','^','+','#',                '=','E','Y','5',0x80,
#     '#',':','(','A','L','L','Y',')',        '=','U','L','I','Y',0x80,
#     ' ','(','A','L',')','#',                '=','U','L',0x80,
#     '(','A','G','A','I','N',')',            '=','A','X','G','E','H','4','N',0x80,
#     '#',':','(','A','G',')','E',            '=','I','H','J',0x80,
#     '(','A',')','^','%',                    '=','E','Y',0x80,
#     '(','A',')','^','+',':','#',            '=','A','E',0x80,
#     ' ',':','(','A',')','^','+',' ',        '=','E','Y','4',0x80,
#     ' ','(','A','R','R',')',                '=','A','X','R',0x80,
#     '(','A','R','R',')',                    '=','A','E','4','R',0x80,
#     ' ','^','(','A','R',')',' ',            '=','A','A','5','R',0x80,
#     '(','A','R',')',                        '=','A','A','5','R',0x80,
#     '(','A','I','R',')',                    '=','E','H','4','R',0x80,
#     '(','A','I',')',                        '=','E','Y','4',0x80,
#     '(','A','Y',')',                        '=','E','Y','5',0x80,
#     '(','A','U',')',                        '=','A','O','4',0x80,
#     '#',':','(','A','L',')',' ',            '=','U','L',0x80,
#     '#',':','(','A','L','S',')',' ',        '=','U','L','Z',0x80,
#     '(','A','L','K',')',                    '=','A','O','4','K',0x80,
#     '(','A','L',')','^',                    '=','A','O','L',0x80,
#     ' ',':','(','A','B','L','E',')',        '=','E','Y','4','B','U','L',0x80,
#     '(','A','B','L','E',')',                '=','A','X','B','U','L',0x80,
#     '(','A',')','V','O',                    '=','E','Y','4',0x80,
#     '(','A','N','G',')','+',                '=','E','Y','4','N','J',0x80,
#     '(','A','T','A','R','I',')',            '=','A','H','T','A','A','4','R','I','Y',0x80,
#     '(','A',')','T','O','M',                '=','A','E',0x80,
#     '(','A',')','T','T','I',                '=','A','E',0x80,
#     ' ','(','A','T',')',' ',                '=','A','E','T',0x80,
#     ' ','(','A',')','T',                    '=','A','H',0x80,
#     '(','A',')',                            '=','A','E',0x80,

#     ']','B',0x80,
#     ' ','(','B',')',' ',                    '=','B','I','Y','4',0x80,
#     ' ','(','B','E',')','^','#',            '=','B','I','H',0x80,
#     '(','B','E','I','N','G',')',            '=','B','I','Y','4','I','H','N','X',0x80,
#     ' ','(','B','O','T','H',')',' ',        '=','B','O','W','4','T','H',0x80,
#     ' ','(','B','U','S',')','#',            '=','B','I','H','4','Z',0x80,
#     '(','B','R','E','A','K',')',            '=','B','R','E','Y','5','K',0x80,
#     '(','B','U','I','L',')',                '=','B','I','H','4','L',0x80,
#     '(','B',')',                            '=','B',0x80,

#     ']','C',0x80,
#     ' ','(','C',')',' ',                    '=','S','I','Y','4',0x80,
#     ' ','(','C','H',')','^',                '=','K',0x80,
#     '^','E','(','C','H',')',                '=','K',0x80,
#     '(','C','H','A',')','R','#',            '=','K','E','H','5',0x80,
#     '(','C','H',')',                        '=','C','H',0x80,
#     ' ','S','(','C','I',')','#',            '=','S','A','Y','4',0x80,
#     '(','C','I',')','A',                    '=','S','H',0x80,
#     '(','C','I',')','O',                    '=','S','H',0x80,
#     '(','C','I',')','E','N',                '=','S','H',0x80,
#     '(','C','I','T','Y',')',                '=','S','I','H','T','I','Y',0x80,
#     '(','C',')','+',                        '=','S',0x80,
#     '(','C','K',')',                        '=','K',0x80,
#     '(','C','O','M','M','O','D','O','R','E',')','=','K','A','A','4','M','A','H','D','O','H','R',0x80,
#     '(','C','O','M',')',                    '=','K','A','H','M',0x80,
#     '(','C','U','I','T',')',                '=','K','I','H','T',0x80,
#     '(','C','R','E','A',')',                '=','K','R','I','Y','E','Y',0x80,
#     '(','C',')',                            '=','K',0x80,

#     ']','D',0x80,
#     ' ','(','D',')',' ',                    '=','D','I','Y','4',0x80,
#     ' ','(','D','R','.',')',' ',            '=','D','A','A','4','K','T','E','R',0x80,
#     '#',':','(','D','E','D',')',' ',        '=','D','I','H','D',0x80,
#     '.','E','(','D',')',' ',                '=','D',0x80,
#     '#',':','^','E','(','D',')',' ',        '=','T',0x80,
#     ' ','(','D','E',')','^','#',            '=','D','I','H',0x80,
#     ' ','(','D','O',')',' ',                '=','D','U','W',0x80,
#     ' ','(','D','O','E','S',')',            '=','D','A','H','Z',0x80,
#     '(','D','O','N','E',')',' ',            '=','D','A','H','5','N',0x80,
#     '(','D','O','I','N','G',')',            '=','D','U','W','4','I','H','N','X',0x80,
#     ' ','(','D','O','W',')',                '=','D','A','W',0x80,
#     '#','(','D','U',')','A',                '=','J','U','W',0x80,
#     '#','(','D','U',')','^','#',            '=','J','A','X',0x80,
#     '(','D',')',                            '=','D',0x80,

#     ']','E',0x80,
#     ' ','(','E',')',' ',                    '=','I','Y','I','Y','4',0x80,
#     '#',':','(','E',')',' ','=',0x80,
#     '\'',':','^','(','E',')',' ','=',0x80,
#     ' ',':','(','E',')',' ',                '=','I','Y',0x80,
#     '#','(','E','D',')',' ',                '=','D',0x80,
#     '#',':','(','E',')','D',' ','=',0x80,
#     '(','E','V',')','E','R',                '=','E','H','4','V',0x80,
#     '(','E',')','^','%',                    '=','I','Y','4',0x80,
#     '(','E','R','I',')','#',                '=','I','Y','4','R','I','Y',0x80,
#     '(','E','R','I',')',                    '=','E','H','4','R','I','H',0x80,
#     '#',':','(','E','R',')','#',            '=','E','R',0x80,
#     '(','E','R','R','O','R',')',            '=','E','H','4','R','O','H','R',0x80,
#     '(','E','R','A','S','E',')',            '=','I','H','R','E','Y','5','S',0x80,
#     '(','E','R',')','#',                    '=','E','H','R',0x80,
#     '(','E','R',')',                        '=','E','R',0x80,
#     ' ','(','E','V','E','N',')',            '=','I','Y','V','E','H','N',0x80,
#     '#',':','(','E',')','W','=',0x80,
#     '@','(','E','W',')',                    '=','U','W',0x80,
#     '(','E','W',')',                        '=','Y','U','W',0x80,
#     '(','E',')','O',                        '=','I','Y',0x80,
#     '#',':','&','(','E','S',')',' ',        '=','I','H','Z',0x80,
#     '#',':','(','E',')','S',' ','=',0x80,
#     '#',':','(','E','L','Y',')',' ',        '=','L','I','Y',0x80,
#     '#',':','(','E','M','E','N','T',')',    '=','M','E','H','N','T',0x80,
#     '(','E','F','U','L',')',                '=','F','U','H','L',0x80,
#     '(','E','E',')',                        '=','I','Y','4',0x80,
#     '(','E','A','R','N',')',                '=','E','R','5','N',0x80,
#     ' ','(','E','A','R',')','^',            '=','E','R','5',0x80,
#     '(','E','A','D',')',                    '=','E','H','D',0x80,
#     '#',':','(','E','A',')',' ',            '=','I','Y','A','X',0x80,
#     '(','E','A',')','S','U',                '=','E','H','5',0x80,
#     '(','E','A',')',                        '=','I','Y','5',0x80,
#     '(','E','I','G','H',')',                '=','E','Y','4',0x80,
#     '(','E','I',')',                        '=','I','Y','4',0x80,
#     ' ','(','E','Y','E',')',                '=','A','Y','4',0x80,
#     '(','E','Y',')',                        '=','I','Y',0x80,
#     '(','E','U',')',                        '=','Y','U','W','5',0x80,
#     '(','E','Q','U','A','L',')',            '=','I','Y','4','K','W','U','L',0x80,
#     '(','E',')',                            '=','E','H',0x80,

#     ']','F',0x80,
#     ' ','(','F',')',' ',                    '=','E','H','4','F',0x80,
#     '(','F','U','L',')',                    '=','F','U','H','L',0x80,
#     '(','F','R','I','E','N','D',')',        '=','F','R','E','H','5','N','D',0x80,
#     '(','F','A','T','H','E','R',')',        '=','F','A','A','4','D','H','E','R',0x80,
#     '(','F',')','F','=',0x80,
#     '(','F',')',                            '=','F',0x80,

#     ']','G',0x80,
#     ' ','(','G',')',' ',                    '=','J','I','Y','4',0x80,
#     '(','G','I','V',')',                    '=','G','I','H','5','V',0x80,
#     ' ','(','G',')','I','^',                '=','G',0x80,
#     '(','G','E',')','T',                    '=','G','E','H','5',0x80,
#     'S','U','(','G','G','E','S',')',        '=','G','J','E','H','4','S',0x80,
#     '(','G','G',')',                        '=','G',0x80,
#     ' ','B','#','(','G',')',                '=','G',0x80,
#     '(','G',')','+',                        '=','J',0x80,
#     '(','G','R','E','A','T',')',            '=','G','R','E','Y','4','T',0x80,
#     '(','G','O','N',')','E',                '=','G','A','O','5','N',0x80,
#     '#','(','G','H',')','=',0x80,
#     ' ','(','G','N',')',                    '=','N',0x80,
#     '(','G',')',                            '=','G',0x80,

#     ']','H',0x80,
#     ' ','(','H',')',' ',                    '=','E','Y','4','C','H',0x80,
#     ' ','(','H','A','V',')',                '=','/','H','A','E','6','V',0x80,
#     ' ','(','H','E','R','E',')',            '=','/','H','I','Y','R',0x80,
#     ' ','(','H','O','U','R',')',            '=','A','W','5','E','R',0x80,
#     '(','H','O','W',')',                    '=','/','H','A','W',0x80,
#     '(','H',')','#',                        '=','/','H',0x80,
#     '(','H',')','=',0x80,

#     ']','I',0x80,
#     ' ','(','I','N',')',                    '=','I','H','N',0x80,
#     ' ','(','I',')',' ',                    '=','A','Y','4',0x80,
#     '(','I',')',' ',                        '=','A','Y',0x80,
#     '(','I','N',')','D',                    '=','A','Y','5','N',0x80,
#     'S','E','M','(','I',')',                '=','I','Y',0x80,
#     ' ','A','N','T','(','I',')',            '=','A','Y',0x80,
#     '(','I','E','R',')',                    '=','I','Y','E','R',0x80,
#     '#',':','R','(','I','E','D',')',' ',    '=','I','Y','D',0x80,
#     '(','I','E','D',')',' ',                '=','A','Y','5','D',0x80,
#     '(','I','E','N',')',                    '=','I','Y','E','H','N',0x80,
#     '(','I','E',')','T',                    '=','A','Y','4','E','H',0x80,
#     '(','I','\'',')',                        '=','A','Y','5',0x80,
#     ' ',':','(','I',')','^','%',            '=','A','Y','5',0x80,
#     ' ',':','(','I','E',')',' ',            '=','A','Y','4',0x80,
#     '(','I',')','%',                        '=','I','Y',0x80,
#     '(','I','E',')',                        '=','I','Y','4',0x80,
#     ' ','(','I','D','E','A',')',            '=','A','Y','D','I','Y','5','A','H',0x80,
#     '(','I',')','^','+',':','#',            '=','I','H',0x80,
#     '(','I','R',')','#',                    '=','A','Y','R',0x80,
#     '(','I','Z',')','%',                    '=','A','Y','Z',0x80,
#     '(','I','S',')','%',                    '=','A','Y','Z',0x80,
#     'I','^','(','I',')','^','#',            '=','I','H',0x80,
#     '+','^','(','I',')','^','+',            '=','A','Y',0x80,
#     '#',':','^','(','I',')','^','+',        '=','I','H',0x80,
#     '(','I',')','^','+',                    '=','A','Y',0x80,
#     '(','I','R',')',                        '=','E','R',0x80,
#     '(','I','G','H',')',                    '=','A','Y','4',0x80,
#     '(','I','L','D',')',                    '=','A','Y','5','L','D',0x80,
#     ' ','(','I','G','N',')',                '=','I','H','G','N',0x80,
#     '(','I','G','N',')',' ',                '=','A','Y','4','N',0x80,
#     '(','I','G','N',')','^',                '=','A','Y','4','N',0x80,
#     '(','I','G','N',')','%',                '=','A','Y','4','N',0x80,
#     '(','I','C','R','O',')',                '=','A','Y','4','K','R','O','H',0x80,
#     '(','I','Q','U','E',')',                '=','I','Y','4','K',0x80,
#     '(','I',')',                            '=','I','H',0x80,

#     ']','J',0x80,
#     ' ','(','J',')',' ',                    '=','J','E','Y','4',0x80,
#     '(','J',')',                            '=','J',0x80,

#     ']','K',0x80,
#     ' ','(','K',')',' ',                    '=','K','E','Y','4',0x80,
#     ' ','(','K',')','N','=',0x80,
#     '(','K',')',                            '=','K',0x80,

#     ']','L',0x80,
#     ' ','(','L',')',' ',                    '=','E','H','4','L',0x80,
#     '(','L','O',')','C','#',                '=','L','O','W',0x80,
#     'L','(','L',')','=',0x80,
#     '#',':','^','(','L',')','%',            '=','U','L',0x80,
#     '(','L','E','A','D',')',                '=','L','I','Y','D',0x80,
#     ' ','(','L','A','U','G','H',')',        '=','L','A','E','4','F',0x80,
#     '(','L',')',                            '=','L',0x80,

#     ']','M',0x80,
#     ' ','(','M',')',' ',                    '=','E','H','4','M',0x80,
#     ' ','(','M','R','.',')',' ',            '=','M','I','H','4','S','T','E','R',0x80,
#     ' ','(','M','S','.',')',                '=','M','I','H','5','Z',0x80,
#     ' ','(','M','R','S','.',')',' ',        '=','M','I','H','4','S','I','X','Z',0x80,
#     '(','M','O','V',')',                    '=','M','U','W','4','V',0x80,
#     '(','M','A','C','H','I','N',')',        '=','M','A','H','S','H','I','Y','5','N',0x80,
#     'M','(','M',')','=',0x80,
#     '(','M',')',                            '=','M',0x80,

#     ']','N',0x80,
#     ' ','(','N',')',' ',                    '=','E','H','4','N',0x80,
#     'E','(','N','G',')','+',                '=','N','J',0x80,
#     '(','N','G',')','R',                    '=','N','X','G',0x80,
#     '(','N','G',')','#',                    '=','N','X','G',0x80,
#     '(','N','G','L',')','%',                '=','N','X','G','U','L',0x80,
#     '(','N','G',')',                        '=','N','X',0x80,
#     '(','N','K',')',                        '=','N','X','K',0x80,
#     ' ','(','N','O','W',')',' ',            '=','N','A','W','4',0x80,
#     'N','(','N',')','=',0x80,
#     '(','N','O','N',')','E',                '=','N','A','H','4','N',0x80,
#     '(','N',')',                            '=','N',0x80,

#     ']','O',0x80,
#     ' ','(','O',')',' ',                    '=','O','H','4','W',0x80,
#     '(','O','F',')',' ',                    '=','A','H','V',0x80,
#     ' ','(','O','H',')',' ',                '=','O','W','5',0x80,
#     '(','O','R','O','U','G','H',')',        '=','E','R','4','O','W',0x80,
#     '#',':','(','O','R',')',' ',            '=','E','R',0x80,
#     '#',':','(','O','R','S',')',' ',        '=','E','R','Z',0x80,
#     '(','O','R',')',                        '=','A','O','R',0x80,
#     ' ','(','O','N','E',')',                '=','W','A','H','N',0x80,
#     '#','(','O','N','E',')',' ',            '=','W','A','H','N',0x80,
#     '(','O','W',')',                        '=','O','W',0x80,
#     ' ','(','O','V','E','R',')',            '=','O','W','5','V','E','R',0x80,
#     'P','R','(','O',')','V',                '=','U','W','4',0x80,
#     '(','O','V',')',                        '=','A','H','4','V',0x80,
#     '(','O',')','^','%',                    '=','O','W','5',0x80,
#     '(','O',')','^','E','N',                '=','O','W',0x80,
#     '(','O',')','^','I','#',                '=','O','W','5',0x80,
#     '(','O','L',')','D',                    '=','O','W','4','L',0x80,
#     '(','O','U','G','H','T',')',            '=','A','O','5','T',0x80,
#     '(','O','U','G','H',')',                '=','A','H','5','F',0x80,
#     ' ','(','O','U',')',                    '=','A','W',0x80,
#     'H','(','O','U',')','S','#',            '=','A','W','4',0x80,
#     '(','O','U','S',')',                    '=','A','X','S',0x80,
#     '(','O','U','R',')',                    '=','O','H','R',0x80,
#     '(','O','U','L','D',')',                '=','U','H','5','D',0x80,
#     '(','O','U',')','^','L',                '=','A','H','5',0x80,
#     '(','O','U','P',')',                    '=','U','W','5','P',0x80,
#     '(','O','U',')',                        '=','A','W',0x80,
#     '(','O','Y',')',                        '=','O','Y',0x80,
#     '(','O','I','N','G',')',                '=','O','W','4','I','H','N','X',0x80,
#     '(','O','I',')',                        '=','O','Y','5',0x80,
#     '(','O','O','R',')',                    '=','O','H','5','R',0x80,
#     '(','O','O','K',')',                    '=','U','H','5','K',0x80,
#     'F','(','O','O','D',')',                '=','U','W','5','D',0x80,
#     'L','(','O','O','D',')',                '=','A','H','5','D',0x80,
#     'M','(','O','O','D',')',                '=','U','W','5','D',0x80,
#     '(','O','O','D',')',                    '=','U','H','5','D',0x80,
#     'F','(','O','O','T',')',                '=','U','H','5','T',0x80,
#     '(','O','O',')',                        '=','U','W','5',0x80,
#     '(','O','\'',')',                        '=','O','H',0x80,
#     '(','O',')','E',                        '=','O','W',0x80,
#     '(','O',')',' ',                        '=','O','W',0x80,
#     '(','O','A',')',                        '=','O','W','4',0x80,
#     ' ','(','O','N','L','Y',')',            '=','O','W','4','N','L','I','Y',0x80,
#     ' ','(','O','N','C','E',')',            '=','W','A','H','4','N','S',0x80,
#     '(','O','N','\'','T',')',                '=','O','W','4','N','T',0x80,
#     'C','(','O',')','N',                    '=','A','A',0x80,
#     '(','O',')','N','G',                    '=','A','O',0x80,
#     ' ',':','^','(','O',')','N',            '=','A','H',0x80,
#     'I','(','O','N',')',                    '=','U','N',0x80,
#     '#',':','(','O','N',')',                '=','U','N',0x80,
#     '#','^','(','O','N',')',                '=','U','N',0x80,
#     '(','O',')','S','T',                    '=','O','W',0x80,
#     '(','O','F',')','^',                    '=','A','O','4','F',0x80,
#     '(','O','T','H','E','R',')',            '=','A','H','5','D','H','E','R',0x80,
#     'R','(','O',')','B',                    '=','R','A','A',0x80,
#     '^','R','(','O',')',':','#',            '=','O','W','5',0x80,
#     '(','O','S','S',')',' ',                '=','A','O','5','S',0x80,
#     '#',':','^','(','O','M',')',            '=','A','H','M',0x80,
#     '(','O',')',                            '=','A','A',0x80,

#     ']','P',0x80,
#     ' ','(','P',')',' ',                    '=','P','I','Y','4',0x80,
#     '(','P','H',')',                        '=','F',0x80,
#     '(','P','E','O','P','L',')',            '=','P','I','Y','5','P','U','L',0x80,
#     '(','P','O','W',')',                    '=','P','A','W','4',0x80,
#     '(','P','U','T',')',' ',                '=','P','U','H','T',0x80,
#     '(','P',')','P','=',0x80,
#     '(','P',')','S','=',0x80,
#     '(','P',')','N','=',0x80,
#     '(','P','R','O','F','.',')',            '=','P','R','O','H','F','E','H','4','S','E','R',0x80,
#     '(','P',')',                            '=','P',0x80,

#     ']','Q',0x80,
#     ' ','(','Q',')',' ',                    '=','K','Y','U','W','4',0x80,
#     '(','Q','U','A','R',')',                '=','K','W','O','H','5','R',0x80,
#     '(','Q','U',')',                        '=','K','W',0x80,
#     '(','Q',')',                            '=','K',0x80,
#     ']','R',0x80,
#     ' ','(','R',')',' ',                    '=','A','A','5','R',0x80,
#     ' ','(','R','E',')','^','#',            '=','R','I','Y',0x80,
#     '(','R',')','R','=',0x80,
#     '(','R',')',                            '=','R',0x80,

#     ']','S',0x80,
#     ' ','(','S',')',' ',                    '=','E','H','4','S',0x80,
#     '(','S','H',')',                        '=','S','H',0x80,
#     '#','(','S','I','O','N',')',            '=','Z','H','U','N',0x80,
#     '(','S','O','M','E',')',                '=','S','A','H','M',0x80,
#     '#','(','S','U','R',')','#',            '=','Z','H','E','R',0x80,
#     '(','S','U','R',')','#',                '=','S','H','E','R',0x80,
#     '#','(','S','U',')','#',                '=','Z','H','U','W',0x80,
#     '#','(','S','S','U',')','#',            '=','S','H','U','W',0x80,
#     '#','(','S','E','D',')',                '=','Z','D',0x80,
#     '#','(','S',')','#',                    '=','Z',0x80,
#     '(','S','A','I','D',')',                '=','S','E','H','D',0x80,
#     '^','(','S','I','O','N',')',            '=','S','H','U','N',0x80,
#     '(','S',')','S','=',0x80,
#     '.','(','S',')',' ',                    '=','Z',0x80,
#     '#',':','.','E','(','S',')',' ',        '=','Z',0x80,
#     '#',':','^','#','(','S',')',' ',        '=','S',0x80,
#     'U','(','S',')',' ',                    '=','S',0x80,
#     ' ',':','#','(','S',')',' ',            '=','Z',0x80,
#     '#','#','(','S',')',' ',                '=','Z',0x80,
#     ' ','(','S','C','H',')',                '=','S','K',0x80,
#     '(','S',')','C','+','=',0x80,
#     '#','(','S','M',')',                    '=','Z','U','M',0x80,
#     '#','(','S','N',')','\'',                '=','Z','U','M',0x80,
#     '(','S','T','L','E',')',                '=','S','U','L',0x80,
#     '(','S',')',                            '=','S',0x80,

#     ']','T',0x80,
#     ' ','(','T',')',' ',                    '=','T','I','Y','4',0x80,
#     ' ','(','T','H','E',')',' ','#',        '=','D','H','I','Y',0x80,
#     ' ','(','T','H','E',')',' ',            '=','D','H','A','X',0x80,
#     '(','T','O',')',' ',                    '=','T','U','X',0x80,
#     ' ','(','T','H','A','T',')',            '=','D','H','A','E','T',0x80,
#     ' ','(','T','H','I','S',')',' ',        '=','D','H','I','H','S',0x80,
#     ' ','(','T','H','E','Y',')',            '=','D','H','E','Y',0x80,
#     ' ','(','T','H','E','R','E',')',        '=','D','H','E','H','R',0x80,
#     '(','T','H','E','R',')',                '=','D','H','E','R',0x80,
#     '(','T','H','E','I','R',')',            '=','D','H','E','H','R',0x80,
#     ' ','(','T','H','A','N',')',' ',        '=','D','H','A','E','N',0x80,
#     ' ','(','T','H','E','M',')',' ',        '=','D','H','A','E','N',0x80,
#     '(','T','H','E','S','E',')',' ',        '=','D','H','I','Y','Z',0x80,
#     ' ','(','T','H','E','N',')',            '=','D','H','E','H','N',0x80,
#     '(','T','H','R','O','U','G','H',')',    '=','T','H','R','U','W','4',0x80,
#     '(','T','H','O','S','E',')',            '=','D','H','O','H','Z',0x80,
#     '(','T','H','O','U','G','H',')',' ',    '=','D','H','O','W',0x80,
#     '(','T','O','D','A','Y',')',            '=','T','U','X','D','E','Y',0x80,
#     '(','T','O','M','O',')','R','R','O','W','=','T','U','M','A','A','5',0x80,
#     '(','T','O',')','T','A','L',            '=','T','O','W','5',0x80,
#     ' ','(','T','H','U','S',')',            '=','D','H','A','H','4','S',0x80,
#     '(','T','H',')',                        '=','T','H',0x80,
#     '#',':','(','T','E','D',')',            '=','T','I','X','D',0x80,
#     'S','(','T','I',')','#','N',            '=','C','H',0x80,
#     '(','T','I',')','O',                    '=','S','H',0x80,
#     '(','T','I',')','A',                    '=','S','H',0x80,
#     '(','T','I','E','N',')',                '=','S','H','U','N',0x80,
#     '(','T','U','R',')','#',                '=','C','H','E','R',0x80,
#     '(','T','U',')','A',                    '=','C','H','U','W',0x80,
#     ' ','(','T','W','O',')',                '=','T','U','W',0x80,
#     '&','(','T',')','E','N',' ','=',0x80,
#     '(','T',')',                            '=','T',0x80,

#     ']','U',0x80,
#     ' ','(','U',')',' ',                    '=','Y','U','W','4',0x80,
#     ' ','(','U','N',')','I',                '=','Y','U','W','N',0x80,
#     ' ','(','U','N',')',                    '=','A','H','N',0x80,
#     ' ','(','U','P','O','N',')',            '=','A','X','P','A','O','N',0x80,
#     '@','(','U','R',')','#',                '=','U','H','4','R',0x80,
#     '(','U','R',')','#',                    '=','Y','U','H','4','R',0x80,
#     '(','U','R',')',                        '=','E','R',0x80,
#     '(','U',')','^',' ',                    '=','A','H',0x80,
#     '(','U',')','^','^',                    '=','A','H','5',0x80,
#     '(','U','Y',')',                        '=','A','Y','5',0x80,
#     ' ','G','(','U',')','#','=',0x80,
#     'G','(','U',')','%','=',0x80,
#     'G','(','U',')','#',                    '=','W',0x80,
#     '#','N','(','U',')',                    '=','Y','U','W',0x80,
#     '@','(','U',')',                        '=','U','W',0x80,
#     '(','U',')',                            '=','Y','U','W',0x80,

#     ']','V',0x80,
#     ' ','(','V',')',' ',                    '=','V','I','Y','4',0x80,
#     '(','V','I','E','W',')',                '=','V','Y','U','W','5',0x80,
#     '(','V',')',                            '=','V',0x80,

#     ']','W',0x80,
#     ' ','(','W',')',' ',                    '=','D','A','H','4','B','U','L','Y','U','W',0x80,
#     ' ','(','W','E','R','E',')',            '=','W','E','R',0x80,
#     '(','W','A',')','S','H',                '=','W','A','A',0x80,
#     '(','W','A',')','S','T',                '=','W','E','Y',0x80,
#     '(','W','A',')','S',                    '=','W','A','H',0x80,
#     '(','W','A',')','T',                    '=','W','A','A',0x80,
#     '(','W','H','E','R','E',')',            '=','W','H','E','H','R',0x80,
#     '(','W','H','A','T',')',                '=','W','H','A','H','T',0x80,
#     '(','W','H','O','L',')',                '=','/','H','O','W','L',0x80,
#     '(','W','H','O',')',                    '=','/','H','U','W',0x80,
#     '(','W','H',')',                        '=','W','H',0x80,
#     '(','W','A','R',')','#',                '=','W','E','H','R',0x80,
#     '(','W','A','R',')',                    '=','W','A','O','R',0x80,
#     '(','W','O','R',')','^',                '=','W','E','R',0x80,
#     '(','W','R',')',                        '=','R',0x80,
#     '(','W','O','M',')','A',                '=','W','U','H','M',0x80,
#     '(','W','O','M',')','E',                '=','W','I','H','M',0x80,
#     '(','W','E','A',')','R',                '=','W','E','H',0x80,
#     '(','W','A','N','T',')',                '=','W','A','A','5','N','T',0x80,
#     'A','N','S','(','W','E','R',')',        '=','E','R',0x80,
#     '(','W',')',                            '=','W',0x80,

#     ']','X',0x80,
#     ' ','(','X',')',' ',                    '=','E','H','4','K','R',0x80,
#     ' ','(','X',')',                        '=','Z',0x80,
#     '(','X',')',                            '=','K','S',0x80,

#     ']','Y',0x80,
#     ' ','(','Y',')',' ',                    '=','W','A','Y','4',0x80,
#     '(','Y','O','U','N','G',')',            '=','Y','A','H','N','X',0x80,
#     ' ','(','Y','O','U','R',')',            '=','Y','O','H','R',0x80,
#     ' ','(','Y','O','U',')',                '=','Y','U','W',0x80,
#     ' ','(','Y','E','S',')',                '=','Y','E','H','S',0x80,
#     ' ','(','Y',')',                        '=','Y',0x80,
#     'F','(','Y',')',                        '=','A','Y',0x80,
#     'P','S','(','Y','C','H',')',            '=','A','Y','K',0x80,
#     '#',':','^','(','Y',')',                '=','I','Y',0x80,
#     '#',':','^','(','Y',')','I',            '=','I','Y',0x80,
#     ' ',':','(','Y',')',' ',                '=','A','Y',0x80,
#     ' ',':','(','Y',')','#',                '=','A','Y',0x80,
#     ' ',':','(','Y',')','^','+',':','#',    '=','I','H',0x80,
#     ' ',':','(','Y',')','^','#',            '=','A','Y',0x80,
#     '(','Y',')',                            '=','I','H',0x80,

#     ']','Z',0x80,
#     ' ','(','Z',')',' ',                    '=','Z','I','Y','4',0x80,
#     '(','Z',')',                            '=','Z',0x80,
#     'j',0x80
# ]

# temp_rules_list = [ord(item) if (type(item) is str) else item for item in temp_rules_list]
# for i in range(len(temp_rules_list) - 1):
#     if temp_rules_list[i+1] == 0x80:
#         temp_rules_list[i] ,= 0x80
# temp_rules_list = [item for item in temp_rules_list if item != 0x80]

# rules = bytes(temp_rules_list)


rules = b"]\xc1 (A.)=EH4Y.\xa0(A) =A\xc8 (ARE) =AA\xd2 (AR)O=AX\xd2(AR)#=EH4\xd2 ^(AS)#=EY4\xd3(A)WA=A\xd8(AW)=AO\xb5 :(ANY)=EH4NI\xd9(A)^+#=EY\xb5#:(ALLY)=ULI\xd9 (AL)#=U\xcc(AGAIN)=AXGEH4\xce#:(AG)E=IH\xca(A)^%=E\xd9(A)^+:#=A\xc5 :(A)^+ =EY\xb4 (ARR)=AX\xd2(ARR)=AE4\xd2 ^(AR) =AA5\xd2(AR)=AA5\xd2(AIR)=EH4\xd2(AI)=EY\xb4(AY)=EY\xb5(AU)=AO\xb4#:(AL) =U\xcc#:(ALS) =UL\xda(ALK)=AO4\xcb(AL)^=AO\xcc :(ABLE)=EY4BU\xcc(ABLE)=AXBU\xcc(A)VO=EY\xb4(ANG)+=EY4N\xca(ATARI)=AHTAA4RI\xd9(A)TOM=A\xc5(A)TTI=A\xc5 (AT) =AE\xd4 (A)T=A\xc8(A)=A\xc5]\xc2 (B) =BIY\xb4 (BE)^#=BI\xc8(BEING)=BIY4IHN\xd8 (BOTH) =BOW4T\xc8 (BUS)#=BIH4\xda(BREAK)=BREY5\xcb(BUIL)=BIH4\xcc(B)=\xc2]\xc3 (C) =SIY\xb4 (CH)^=\xcb^E(CH)=\xcb(CHA)R#=KEH\xb5(CH)=C\xc8 S(CI)#=SAY\xb4(CI)A=S\xc8(CI)O=S\xc8(CI)EN=S\xc8(CITY)=SIHTI\xd9(C)+=\xd3(CK)=\xcb(COMMODORE)=KAA4MAHDOH\xd2(COM)=KAH\xcd(CUIT)=KIH\xd4(CREA)=KRIYE\xd9(C)=\xcb]\xc4 (D) =DIY\xb4 (DR.) =DAA4KTE\xd2#:(DED) =DIH\xc4.E(D) =\xc4#:^E(D) =\xd4 (DE)^#=DI\xc8 (DO) =DU\xd7 (DOES)=DAH\xda(DONE) =DAH5\xce(DOING)=DUW4IHN\xd8 (DOW)=DA\xd7#(DU)A=JU\xd7#(DU)^#=JA\xd8(D)=\xc4]\xc5 (E) =IYIY\xb4#:(E) \xbd':^(E) \xbd :(E) =I\xd9#(ED) =\xc4#:(E)D \xbd(EV)ER=EH4\xd6(E)^%=IY\xb4(ERI)#=IY4RI\xd9(ERI)=EH4RI\xc8#:(ER)#=E\xd2(ERROR)=EH4ROH\xd2(ERASE)=IHREY5\xd3(ER)#=EH\xd2(ER)=E\xd2 (EVEN)=IYVEH\xce#:(E)W\xbd@(EW)=U\xd7(EW)=YU\xd7(E)O=I\xd9#:&(ES) =IH\xda#:(E)S \xbd#:(ELY) =LI\xd9#:(EMENT)=MEHN\xd4(EFUL)=FUH\xcc(EE)=IY\xb4(EARN)=ER5\xce (EAR)^=ER\xb5(EAD)=EH\xc4#:(EA) =IYA\xd8(EA)SU=EH\xb5(EA)=IY\xb5(EIGH)=EY\xb4(EI)=IY\xb4 (EYE)=AY\xb4(EY)=I\xd9(EU)=YUW\xb5(EQUAL)=IY4KWU\xcc(E)=E\xc8]\xc6 (F) =EH4\xc6(FUL)=FUH\xcc(FRIEND)=FREH5N\xc4(FATHER)=FAA4DHE\xd2(F)F\xbd(F)=\xc6]\xc7 (G) =JIY\xb4(GIV)=GIH5\xd6 (G)I^=\xc7(GE)T=GEH\xb5SU(GGES)=GJEH4\xd3(GG)=\xc7 B#(G)=\xc7(G)+=\xca(GREAT)=GREY4\xd4(GON)E=GAO5\xce#(GH)\xbd (GN)=\xce(G)=\xc7]\xc8 (H) =EY4C\xc8 (HAV)=/HAE6\xd6 (HERE)=/HIY\xd2 (HOUR)=AW5E\xd2(HOW)=/HA\xd7(H)#=/\xc8(H)\xbd]\xc9 (IN)=IH\xce (I) =AY\xb4(I) =A\xd9(IN)D=AY5\xceSEM(I)=I\xd9 ANT(I)=A\xd9(IER)=IYE\xd2#:R(IED) =IY\xc4(IED) =AY5\xc4(IEN)=IYEH\xce(IE)T=AY4E\xc8(I')=AY\xb5 :(I)^%=AY\xb5 :(IE) =AY\xb4(I)%=I\xd9(IE)=IY\xb4 (IDEA)=AYDIY5A\xc8(I)^+:#=I\xc8(IR)#=AY\xd2(IZ)%=AY\xda(IS)%=AY\xdaI^(I)^#=I\xc8+^(I)^+=A\xd9#:^(I)^+=I\xc8(I)^+=A\xd9(IR)=E\xd2(IGH)=AY\xb4(ILD)=AY5L\xc4 (IGN)=IHG\xce(IGN) =AY4\xce(IGN)^=AY4\xce(IGN)%=AY4\xce(ICRO)=AY4KRO\xc8(IQUE)=IY4\xcb(I)=I\xc8]\xca (J) =JEY\xb4(J)=\xca]\xcb (K) =KEY\xb4 (K)N\xbd(K)=\xcb]\xcc (L) =EH4\xcc(LO)C#=LO\xd7L(L)\xbd#:^(L)%=U\xcc(LEAD)=LIY\xc4 (LAUGH)=LAE4\xc6(L)=\xcc]\xcd (M) =EH4\xcd (MR.) =MIH4STE\xd2 (MS.)=MIH5\xda (MRS.) =MIH4SIX\xda(MOV)=MUW4\xd6(MACHIN)=MAHSHIY5\xceM(M)\xbd(M)=\xcd]\xce (N) =EH4\xceE(NG)+=N\xca(NG)R=NX\xc7(NG)#=NX\xc7(NGL)%=NXGU\xcc(NG)=N\xd8(NK)=NX\xcb (NOW) =NAW\xb4N(N)\xbd(NON)E=NAH4\xce(N)=\xce]\xcf (O) =OH4\xd7(OF) =AH\xd6 (OH) =OW\xb5(OROUGH)=ER4O\xd7#:(OR) =E\xd2#:(ORS) =ER\xda(OR)=AO\xd2 (ONE)=WAH\xce#(ONE) =WAH\xce(OW)=O\xd7 (OVER)=OW5VE\xd2PR(O)V=UW\xb4(OV)=AH4\xd6(O)^%=OW\xb5(O)^EN=O\xd7(O)^I#=OW\xb5(OL)D=OW4\xcc(OUGHT)=AO5\xd4(OUGH)=AH5\xc6 (OU)=A\xd7H(OU)S#=AW\xb4(OUS)=AX\xd3(OUR)=OH\xd2(OULD)=UH5\xc4(OU)^L=AH\xb5(OUP)=UW5\xd0(OU)=A\xd7(OY)=O\xd9(OING)=OW4IHN\xd8(OI)=OY\xb5(OOR)=OH5\xd2(OOK)=UH5\xcbF(OOD)=UW5\xc4L(OOD)=AH5\xc4M(OOD)=UW5\xc4(OOD)=UH5\xc4F(OOT)=UH5\xd4(OO)=UW\xb5(O')=O\xc8(O)E=O\xd7(O) =O\xd7(OA)=OW\xb4 (ONLY)=OW4NLI\xd9 (ONCE)=WAH4N\xd3(ON'T)=OW4N\xd4C(O)N=A\xc1(O)NG=A\xcf :^(O)N=A\xc8I(ON)=U\xce#:(ON)=U\xce#^(ON)=U\xce(O)ST=O\xd7(OF)^=AO4\xc6(OTHER)=AH5DHE\xd2R(O)B=RA\xc1^R(O):#=OW\xb5(OSS) =AO5\xd3#:^(OM)=AH\xcd(O)=A\xc1]\xd0 (P) =PIY\xb4(PH)=\xc6(PEOPL)=PIY5PU\xcc(POW)=PAW\xb4(PUT) =PUH\xd4(P)P\xbd(P)S\xbd(P)N\xbd(PROF.)=PROHFEH4SE\xd2(P)=\xd0]\xd1 (Q) =KYUW\xb4(QUAR)=KWOH5\xd2(QU)=K\xd7(Q)=\xcb]\xd2 (R) =AA5\xd2 (RE)^#=RI\xd9(R)R\xbd(R)=\xd2]\xd3 (S) =EH4\xd3(SH)=S\xc8#(SION)=ZHU\xce(SOME)=SAH\xcd#(SUR)#=ZHE\xd2(SUR)#=SHE\xd2#(SU)#=ZHU\xd7#(SSU)#=SHU\xd7#(SED)=Z\xc4#(S)#=\xda(SAID)=SEH\xc4^(SION)=SHU\xce(S)S\xbd.(S) =\xda#:.E(S) =\xda#:^#(S) =\xd3U(S) =\xd3 :#(S) =\xda##(S) =\xda (SCH)=S\xcb(S)C+\xbd#(SM)=ZU\xcd#(SN)'=ZU\xcd(STLE)=SU\xcc(S)=\xd3]\xd4 (T) =TIY\xb4 (THE) #=DHI\xd9 (THE) =DHA\xd8(TO) =TU\xd8 (THAT)=DHAE\xd4 (THIS) =DHIH\xd3 (THEY)=DHE\xd9 (THERE)=DHEH\xd2(THER)=DHE\xd2(THEIR)=DHEH\xd2 (THAN) =DHAE\xce (THEM) =DHAE\xce(THESE) =DHIY\xda (THEN)=DHEH\xce(THROUGH)=THRUW\xb4(THOSE)=DHOH\xda(THOUGH) =DHO\xd7(TODAY)=TUXDE\xd9(TOMO)RROW=TUMAA\xb5(TO)TAL=TOW\xb5 (THUS)=DHAH4\xd3(TH)=T\xc8#:(TED)=TIX\xc4S(TI)#N=C\xc8(TI)O=S\xc8(TI)A=S\xc8(TIEN)=SHU\xce(TUR)#=CHE\xd2(TU)A=CHU\xd7 (TWO)=TU\xd7&(T)EN \xbd(T)=\xd4]\xd5 (U) =YUW\xb4 (UN)I=YUW\xce (UN)=AH\xce (UPON)=AXPAO\xce@(UR)#=UH4\xd2(UR)#=YUH4\xd2(UR)=E\xd2(U)^ =A\xc8(U)^^=AH\xb5(UY)=AY\xb5 G(U)#\xbdG(U)%\xbdG(U)#=\xd7#N(U)=YU\xd7@(U)=U\xd7(U)=YU\xd7]\xd6 (V) =VIY\xb4(VIEW)=VYUW\xb5(V)=\xd6]\xd7 (W) =DAH4BULYU\xd7 (WERE)=WE\xd2(WA)SH=WA\xc1(WA)ST=WE\xd9(WA)S=WA\xc8(WA)T=WA\xc1(WHERE)=WHEH\xd2(WHAT)=WHAH\xd4(WHOL)=/HOW\xcc(WHO)=/HU\xd7(WH)=W\xc8(WAR)#=WEH\xd2(WAR)=WAO\xd2(WOR)^=WE\xd2(WR)=\xd2(WOM)A=WUH\xcd(WOM)E=WIH\xcd(WEA)R=WE\xc8(WANT)=WAA5N\xd4ANS(WER)=E\xd2(W)=\xd7]\xd8 (X) =EH4K\xd2 (X)=\xda(X)=K\xd3]\xd9 (Y) =WAY\xb4(YOUNG)=YAHN\xd8 (YOUR)=YOH\xd2 (YOU)=YU\xd7 (YES)=YEH\xd3 (Y)=\xd9F(Y)=A\xd9PS(YCH)=AY\xcb#:^(Y)=I\xd9#:^(Y)I=I\xd9 :(Y) =A\xd9 :(Y)#=A\xd9 :(Y)^+:#=I\xc8 :(Y)^#=A\xd9(Y)=I\xc8]\xda (Z) =ZIY\xb4(Z)=\xda\xea"


# temp_rules2_list = [
#     '(','A',')',                            '=',0x80,
#     '(','!',')',                            '=','.',0x80,
#     '(','"',')',' ',                        '=','-','A','H','5','N','K','W','O','W','T','-',0x80,
#     '(','"',')',                            '=','K','W','O','W','4','T','-',0x80,
#     '(','#',')',                            '=',' ','N','A','H','4','M','B','E','R',0x80,
#     '(','$',')',                            '=',' ','D','A','A','4','L','E','R',0x80,
#     '(','%',')',                            '=',' ','P','E','R','S','E','H','4','N','T',0x80,
#     '(','&',')',                            '=',' ','A','E','N','D',0x80,
#     '(','\'',')',                           '=',0x80,
#     '(','*',')',                            '=',' ','A','E','4','S','T','E','R','I','H','S','K',0x80,
#     '(','+',')',                            '=',' ','P','L','A','H','4','S',0x80,
#     '(',',',')',                            '=',',',0x80,
#     ' ','(','-',')',' ',                    '=','-',0x80,
#     '(','-',')',                            '=',0x80,
#     '(','.',')',                            '=',' ','P','O','Y','N','T',0x80,
#     '(','/',')',                            '=',' ','S','L','A','E','4','S','H',0x80,
#     '(','0',')',                            '=',' ','Z','I','Y','4','R','O','W',0x80,
#     ' ','(','1','S','T',')',                '=','F','E','R','4','S','T',0x80,
#     ' ','(','1','0','T','H',')',            '=','T','E','H','4','N','T','H',0x80,
#     '(','1',')',                            '=',' ','W','A','H','4','N',0x80,
#     ' ','(','2','N','D',')',                '=','S','E','H','4','K','U','N','D',0x80,
#     '(','2',')',                            '=',' ','T','U','W','4',0x80,
#     ' ','(','3','R','D',')',                '=','T','H','E','R','4','D',0x80,
#     '(','3',')',                            '=',' ','T','H','R','I','Y','4',0x80,
#     '(','4',')',                            '=',' ','F','O','H','4','R',0x80,
#     ' ','(','5','T','H',')',                '=','F','I','H','4','F','T','H',0x80,
#     '(','5',')',                            '=',' ','F','A','Y','4','V',0x80,
#     ' ','(','6','4',')',' ',                '=','S','I','H','4','K','S','T','I','Y',' ','F','O','H','R',0x80,
#     '(','6',')',                            '=',' ','S','I','H','4','K','S',0x80,
#     '(','7',')',                            '=',' ','S','E','H','4','V','U','N',0x80,
#     ' ','(','8','T','H',')',                '=','E','Y','4','T','H',0x80,
#     '(','8',')',                            '=',' ','E','Y','4','T',0x80,
#     '(','9',')',                            '=',' ','N','A','Y','4','N',0x80,
#     '(',':',')',                            '=','.',0x80,
#     '(',';',')',                            '=','.',0x80,
#     '(','<',')',                            '=',' ','L','E','H','4','S',' ','D','H','A','E','N',0x80,
#     '(','=',')',                            '=',' ','I','Y','4','K','W','U','L','Z',0x80,
#     '(','>',')',                            '=',' ','G','R','E','Y','4','T','E','R',' ','D','H','A','E','N',0x80,
#     '(','?',')',                            '=','?',0x80,
#     '(','@',')',                            '=',' ','A','E','6','T',0x80,
#     '(','^',')',                            '=',' ','K','A','E','4','R','I','X','T',0x80,
#     ']','A',0x80
# ]

# temp_rules2_list = [ord(item) if (type(item) is str) else item for item in temp_rules2_list]
# for i in range(len(temp_rules2_list) - 1):
#     if temp_rules2_list[i+1] == 0x80:
#         temp_rules2_list[i] |= 0x80
# temp_rules2_list = [item for item in temp_rules2_list if item != 0x80]

# rules2 = bytes(temp_rules2_list)


rules2 = b'(A)\xbd(!)=\xae(") =-AH5NKWOWT\xad(")=KWOW4T\xad(#)= NAH4MBE\xd2($)= DAA4LE\xd2(%)= PERSEH4N\xd4(&)= AEN\xc4(\')\xbd(*)= AE4STERIHS\xcb(+)= PLAH4\xd3(,)=\xac (-) =\xad(-)\xbd(.)= POYN\xd4(/)= SLAE4S\xc8(0)= ZIY4RO\xd7 (1ST)=FER4S\xd4 (10TH)=TEH4NT\xc8(1)= WAH4\xce (2ND)=SEH4KUN\xc4(2)= TUW\xb4 (3RD)=THER4\xc4(3)= THRIY\xb4(4)= FOH4\xd2 (5TH)=FIH4FT\xc8(5)= FAY4\xd6 (64) =SIH4KSTIY FOH\xd2(6)= SIH4K\xd3(7)= SEH4VU\xce (8TH)=EY4T\xc8(8)= EY4\xd4(9)= NAY4\xce(:)=\xae(;)=\xae(<)= LEH4S DHAE\xce(=)= IY4KWUL\xda(>)= GREY4TER DHAE\xce(?)=\xbf(@)= AE6\xd4(^)= KAE4RIX\xd4]\xc1'


# 26 items. From 'A' to 'Z'
# positions for mem62 and mem63 for each character
# tab37489 = bytes([
#     0, 149, 247, 162, 57, 197, 6, 126,
#     199, 38, 55, 78, 145, 241, 85, 161,
#     254, 36, 69, 45, 167, 54, 83, 46,
#     71, 218
# ])
tab37489 = b"\x00\x95\xf7\xa29\xc5\x06~\xc7&7N\x91\xf1U\xa1\xfe$E-\xa76S.G\xda"

# tab37515 = bytes([
#     125, 126, 126, 127, 128, 129, 130, 130,
#     130, 132, 132, 132, 132, 132, 133, 135,
#     135, 136, 136, 137, 138, 139, 139, 140,
#     140, 140
# ])
tab37515 = b"}~~\x7f\x80\x81\x82\x82\x82\x84\x84\x84\x84\x84\x85\x87\x87\x88\x88\x89\x8a\x8b\x8b\x8c\x8c\x8c"


class Reciter:
    """Reciter converts text to phonemes.

    Args:
        debug:
            Set or clear debug flag.
    """

    def __init__(self, debug: bool = False):
        self._a = 0
        self._x = 0
        self._y = 0
        self.debug = debug

    def _code37055(self, m):
        self._x = m
        self._x = (self._x - 1) & 0xFF
        self._a = self.input_copy[self._x]
        self._y = self._a
        self._a = tab36376[self._y]

    def _code37066(self, m):
        self._x = m
        self._x = (self._x + 1) & 0xFF
        self._a = self.input_copy[self._x]
        self._y = self._a
        self._a = tab36376[self._y]

    def _get_rule_byte(self, m, y):
        address = m

        if m >= 37541:
            address -= 37541
            return rules2[address + y]

        address -= 32000
        return rules[address + y]

    def _print_rule(self, offset):
        i = 1
        a = 0

        print("Applying rule: ", end="")

        a = self._get_rule_byte(offset, i)
        if (a & 127) == ord("="):
            print(" -> ", end="")
        else:
            print(chr(a & 127), end="")
        i += 1
        while (a & 128) == 0:
            a = self._get_rule_byte(offset, i)
            if (a & 127) == ord("="):
                print(" -> ", end="")
            else:
                print(chr(a & 127), end="")
            i += 1

        print()

    def text_to_phonemes(self, input_text: str | bytes | bytearray) -> bytearray:
        """Convert text to phonemes.

        Args:
            input_text:
                The input text to convert.

        Returns:
            The phonemes bytearray.
        """

        self._a = 0
        self._x = 0
        self._y = 0

        m = 0

        self.input_copy = bytearray(256)

        if isinstance(input_text, str):
            # Convert string to bytes
            input_text = input_text.encode("utf-8")
        elif not isinstance(input_text, (bytes, bytearray)):
            raise Exception("The type of input text must be str, bytes or bytearray.")

        temp_input = input_text + b"["

        input_text = bytearray(256)
        input_text[: len(temp_input)] = bytearray(temp_input)
        if len(input_text) > 256:
            input_text = input_text[:256]
            input_text[255] = ord("[")

        self.input_copy[0] = 32

        # // secure copy of input
        # // because input will be overwritten by phonemes
        self._x = 1
        self._y = 0
        while self._y != 255:
            # //pos36499:
            self._a = input_text[self._y] & 127
            if self._a >= 112:
                self._a = self._a & 95
            elif self._a >= 96:
                self._a = self._a & 79

            self.input_copy[self._x] = self._a
            self._x = (self._x + 1) & 0xFF  # X++;
            self._y = (self._y + 1) & 0xFF  # Y++;

        self._x = 255
        self.input_copy[self._x] = 27
        n = 255

        state = 36550
        while True:
            if state == 36550:
                self._a = 255
                j = 255
                state = 36554
                continue

            elif state == 36554:
                while True:
                    n = (n + 1) & 0xFF
                    self._x = n
                    self._a = self.input_copy[self._x]
                    k = self._a
                    if self._a == ord("["):
                        j = (j + 1) & 0xFF
                        self._x = j
                        self._a = 155
                        input_text[self._x] = 155
                        return input_text[: input_text.find(b"\x9b")]

                    if self._a != ord("."):
                        break

                    self._x = (self._x + 1) & 0xFF
                    self._y = self.input_copy[self._x]
                    self._a = tab36376[self._y] & 1

                    if self._a != 0:
                        break

                    j = (j + 1) & 0xFF
                    self._x = j
                    self._a = ord(".")
                    input_text[self._x] = ord(".")

                self._a = k
                self._y = self._a
                self._a = tab36376[self._a]
                h = self._a
                if (self._a & 2) != 0:
                    g = 37541
                    state = 36700
                    continue

                self._a = h
                if self._a != 0:
                    state = 36677
                    continue

                self._a = 32
                self.input_copy[self._x] = ord(" ")
                j = (j + 1) & 0xFF
                self._x = j
                if self._x > 120:
                    state = 36654
                    continue

                input_text[self._x] = self._a
                state = 36554
                continue

            elif state == 36654:
                input_text[self._x] = 155
                self._a = n
                # mem36653 = A
                return input_text[: input_text.find(b"\x9b")]

            elif state == 36677:
                self._a = h & 128
                if self._a == 0:
                    return None

                # // go to the right rules for this character.
                self._x = (k - ord("A")) & 0xFF
                g = tab37489[self._x] | (tab37515[self._x] << 8)

                # // -------------------------------------
                # // go to next rule
                # // -------------------------------------
                state = 36700
                continue

            elif state == 36700:
                # // find next rule
                self._y = 0
                g = (g + 1) % 65536
                self._a = self._get_rule_byte(g, self._y)
                while (self._a & 128) == 0:
                    g = (g + 1) % 65536
                    self._a = self._get_rule_byte(g, self._y)
                self._y = (self._y + 1) & 0xFF

                # // find '('
                while True:
                    self._a = self._get_rule_byte(g, self._y)
                    if self._a == ord("("):
                        break
                    self._y = (self._y + 1) & 0xFF
                p = self._y

                # // find ')'
                self._y = (self._y + 1) & 0xFF
                self._a = self._get_rule_byte(g, self._y)
                while self._a != ord(")"):
                    self._y = (self._y + 1) & 0xFF
                    self._a = self._get_rule_byte(g, self._y)
                q = self._y

                # // find '='
                self._y = (self._y + 1) & 0xFF
                self._a = self._get_rule_byte(g, self._y)
                self._a = self._a & 127
                while self._a != ord("="):
                    self._y = (self._y + 1) & 0xFF
                    self._a = self._get_rule_byte(g, self._y)
                    self._a = self._a & 127
                k = self._y

                self._x = n
                r = self._x

                # // compare the string within the bracket
                self._y = p
                self._y = (self._y + 1) & 0xFF
                flag_goto_36700 = False
                while True:
                    h = self.input_copy[self._x]
                    self._a = self._get_rule_byte(g, self._y)
                    if self._a != h:
                        state = 36700
                        flag_goto_36700 = True
                        break

                    self._y = (self._y + 1) & 0xFF
                    if self._y == q:
                        break

                    self._x = (self._x + 1) & 0xFF
                    r = self._x

                if flag_goto_36700:
                    continue

                # // the string in the bracket is correct

                self._a = n
                t = n

                state = 36791
                continue

            elif state == 36791:
                flag_goto_37180 = False
                flag_goto_36700 = False
                while True:
                    p = (p - 1) & 0xFF  # mem66--;
                    self._y = p
                    self._a = self._get_rule_byte(g, self._y)
                    h = self._a
                    if (self._a & 128) != 0:
                        state = 37180
                        flag_goto_37180 = True
                        break

                    self._x = self._a & 127
                    self._a = tab36376[self._x] & 128
                    if self._a == 0:
                        break
                    self._x = (t - 1) & 0xFF  # X = mem59-1;
                    self._a = self.input_copy[self._x]
                    if self._a != h:
                        state = 36700
                        flag_goto_36700 = True
                        break
                    t = self._x

                if flag_goto_37180:
                    continue

                if flag_goto_36700:
                    continue

                self._a = h
                if self._a == ord(" "):
                    state = 36895
                    continue
                if self._a == ord("#"):
                    state = 36910
                    continue
                if self._a == ord("."):
                    state = 36920
                    continue
                if self._a == ord("&"):
                    state = 36935
                    continue
                if self._a == ord("@"):
                    state = 36967
                    continue
                if self._a == ord("^"):
                    state = 37004
                    continue
                if self._a == ord("+"):
                    state = 37019
                    continue
                if self._a == ord(":"):
                    state = 37040
                    continue

                # Error
                return None

            elif state == 36895:
                self._code37055(t)
                self._a = self._a & 128
                if self._a != 0:
                    state = 36700
                    continue

                state = 36905
                continue

            elif state == 36905:
                t = self._x
                state = 36791
                continue

            elif state == 36910:
                self._code37055(t)
                self._a = self._a & 64
                if self._a != 0:
                    state = 36905
                    continue

                state = 36700
                continue

            elif state == 36920:
                self._code37055(t)
                self._a = self._a & 8
                if self._a == 0:
                    state = 36700
                    continue

                state = 36930
                continue

            elif state == 36930:
                t = self._x
                state = 36791
                continue

            elif state == 36935:
                self._code37055(t)
                self._a = self._a & 16
                if self._a != 0:
                    state = 36930
                    continue

                self._a = self.input_copy[self._x]
                if self._a != 72:
                    state = 36700
                    continue

                self._x = (self._x - 1) & 0xFF  # X--;
                self._a = self.input_copy[self._x]
                if (self._a == 67) or (self._a == 83):
                    state = 36930
                    continue

                state = 36700
                continue

            elif state == 36967:
                self._code37055(t)
                self._a = self._a & 4
                if self._a != 0:
                    state = 36930
                    continue

                self._a = self.input_copy[self._x]
                if self._a != 72:
                    state = 36700
                    continue

                if (self._a != 84) and (self._a != 67) and (self._a != 83):
                    state = 36700
                    continue

                t = self._x
                state = 36791
                continue

            elif state == 37004:
                self._code37055(t)
                self._a = self._a & 32
                if self._a == 0:
                    state = 36700
                    continue

                state = 37014
                continue

            elif state == 37014:
                t = self._x
                state = 36791
                continue

            elif state == 37019:
                self._x = t
                self._x = (self._x - 1) & 0xFF  # X--;
                self._a = self.input_copy[self._x]
                if (
                    (self._a == ord("E"))
                    or (self._a == ord("I"))
                    or (self._a == ord("Y"))
                ):
                    state = 37014
                    continue

                state = 36700
                continue

            elif state == 37040:
                self._code37055(t)
                self._a = self._a & 32
                if self._a == 0:
                    state = 36791
                    continue

                t = self._x
                state = 37040
                continue

            elif state == 37077:
                self._x = (m + 1) & 0xFF
                self._a = self.input_copy[self._x]
                if self._a != ord("E"):
                    state = 37157
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._y = self.input_copy[self._x]
                self._x = (self._x - 1) & 0xFF  # X--;
                self._a = tab36376[self._y] & 128
                if self._a == 0:
                    state = 37108
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if self._a != ord("R"):
                    state = 37113
                    continue

                state = 37108
                continue

            elif state == 37108:
                m = self._x
                state = 37184
                continue

            elif state == 37113:
                if (self._a == 83) or (self._a == 68):  # // 'S' 'D'
                    state = 37108
                    continue

                if self._a != 76:  # // 'L'
                    state = 37135
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if self._a != 89:
                    state = 36700
                    continue

                state = 37108
                continue

            elif state == 37135:
                if self._a != 70:
                    state = 36700
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if self._a != 85:
                    state = 36700
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if self._a == 76:
                    state = 37108
                    continue

                state = 36700
                continue

            elif state == 37157:
                if self._a != 73:
                    state = 36700
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if self._a != 78:
                    state = 36700
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if self._a == 71:
                    state = 37108
                    continue

                state = 36700
                continue

            elif state == 37180:
                self._a = r
                m = self._a
                state = 37184
                continue

            elif state == 37184:
                self._y = (q + 1) & 0xFF
                if self._y == k:
                    state = 37455
                    continue

                q = self._y
                self._a = self._get_rule_byte(g, self._y)
                h = self._a
                self._x = self._a
                self._a = tab36376[self._x] & 128
                if self._a == 0:
                    state = 37226
                    continue

                self._x = (m + 1) & 0xFF
                self._a = self.input_copy[self._x]
                if self._a != h:
                    state = 36700
                    continue

                m = self._x
                state = 37184
                continue

            elif state == 37226:
                self._a = h
                if self._a == 32:  # // ' '
                    state = 37295
                    continue
                if self._a == 35:  # // '#'
                    state = 37310
                    continue
                if self._a == 46:  # // '.'
                    state = 37320
                    continue
                if self._a == 38:  # // '&'
                    state = 37335
                    continue
                if self._a == 64:  # // '@'
                    state = 37367
                    continue
                if self._a == 94:  # // '^'
                    state = 37404
                    continue
                if self._a == 43:  # // '+'
                    state = 37419
                    continue
                if self._a == 58:  # // ':'
                    state = 37440
                    continue
                if self._a == 37:  # // '%'
                    state = 37077
                    continue

                # Error
                return None

            elif state == 37295:
                self._code37066(m)
                self._a = self._a & 128
                if self._a != 0:
                    state = 36700
                    continue

                state = 37305
                continue

            elif state == 37305:
                m = self._x
                state = 37184
                continue

            elif state == 37310:
                self._code37066(m)
                self._a = self._a & 64
                if self._a != 0:
                    state = 37305
                    continue

                state = 36700
                continue

            elif state == 37320:
                self._code37066(m)
                self._a = self._a & 8
                if self._a == 0:
                    state = 36700
                    continue

                state = 37330
                continue

            elif state == 37330:
                m = self._x
                state = 37184
                continue

            elif state == 37335:
                self._code37066(m)
                self._a = self._a & 16
                if self._a != 0:
                    state = 37330
                    continue

                self._a = self.input_copy[self._x]
                if self._a != 72:
                    state = 36700
                    continue

                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if (self._a == 67) or (self._a == 83):
                    state = 37330
                    continue

                state = 36700
                continue

            elif state == 37367:
                self._code37066(m)
                self._a = self._a & 4
                if self._a != 0:
                    state = 37330
                    continue

                self._a = self.input_copy[self._x]
                if self._a != 72:
                    state = 36700
                    continue

                if (self._a != 84) and (self._a != 67) and (self._a != 83):
                    state = 36700
                    continue

                m = self._x
                state = 37184
                continue

            elif state == 37404:
                self._code37066(m)
                self._a = self._a & 32
                if self._a == 0:
                    state = 36700
                    continue

                state = 37414
                continue

            elif state == 37414:
                m = self._x
                state = 37184
                continue

            elif state == 37419:
                self._x = m
                self._x = (self._x + 1) & 0xFF  # X++;
                self._a = self.input_copy[self._x]
                if (self._a == 69) or (self._a == 73) or (self._a == 89):
                    state = 37414
                    continue

                state = 36700
                continue

            elif state == 37440:
                self._code37066(m)
                self._a = self._a & 32
                if self._a == 0:
                    state = 37184
                    continue

                m = self._x
                state = 37440
                continue

            elif state == 37455:
                self._y = k
                n = r

                if self.debug:
                    self._print_rule(g)

                state = 37461
                continue

            elif state == 37461:
                self._a = self._get_rule_byte(g, self._y)
                h = self._a
                self._a = self._a & 127
                if self._a != ord("="):
                    j = (j + 1) & 0xFF
                    self._x = j
                    input_text[self._x] = self._a

                if (h & 128) == 0:
                    state = 37485
                    continue

                state = 36554
                continue

            elif state == 37485:
                self._y = (self._y + 1) & 0xFF  # Y++;
                state = 37461
                continue
