# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/operations.gql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetAggregateCache(BaseModel):
    data_model: "GetAggregateCacheDataModel" = Field(alias="dataModel")


class GetAggregateCacheDataModel(BaseModel):
    cube: Optional["GetAggregateCacheDataModelCube"]


class GetAggregateCacheDataModelCube(BaseModel):
    aggregate_cache: "GetAggregateCacheDataModelCubeAggregateCache" = Field(
        alias="aggregateCache"
    )


class GetAggregateCacheDataModelCubeAggregateCache(BaseModel):
    capacity: int
    measures: Optional[List["GetAggregateCacheDataModelCubeAggregateCacheMeasures"]]


class GetAggregateCacheDataModelCubeAggregateCacheMeasures(BaseModel):
    name: str


GetAggregateCache.model_rebuild()
GetAggregateCacheDataModel.model_rebuild()
GetAggregateCacheDataModelCube.model_rebuild()
GetAggregateCacheDataModelCubeAggregateCache.model_rebuild()
