[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "divine-type-enforcer"
version = "0.1.1"
authors = [
  { name="DIVINE", email="admin@divine.sh" },
]
description = "A runtime type validation utility with detailed error reporting."
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.0",
    "ruff>=0.5",
    "mypy>=1.11",
    "build>=1.2",
    "twine>=5.0",
]

[project.urls]
Homepage = "https://github.com/codebydivine/type-enforcer"
Issues = "https://github.com/codebydivine/type-enforcer/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "--cov=type_enforcer --cov-report term-missing"

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP"]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
python_version = "3.13"
warn_unused_configs = true
ignore_missing_imports = true # Optional: adjust as needed

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src/type_enforcer"]
omit = [
    "src/type_enforcer/__init__.py", # Typically excluded
]

[tool.coverage.report]
fail_under = 90 # Example: require 90% coverage
show_missing = true 