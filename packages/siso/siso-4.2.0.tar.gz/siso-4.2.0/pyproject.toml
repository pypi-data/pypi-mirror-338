[project]
authors = [
    { name = "Eivind Fonn", email = "eivind.fonn@sintef.no" },
]
requires-python = ">=3.11,<4.0"
dependencies = [
    "click<9.0.0,>=8.1.3",
    "Splipy<2.0.0,>=1.7.0",
    "rich<15.0.0,>=14.0.0",
    "f90nml<2.0.0,>=1.4.3",
    "h5py<4.0.0,>=3.8.0",
    "numpy<3.0.0,>=2.0.0",
    "vtk<10.0.0,>=9.2.5",
    "netCDF4<2.0.0,>=1.7.2",
    "pyerfa<3.0.0.0,>=2.0.0.1",
    "attrs<26.0.0,>=25.0.0",
    "click-option-group<1.0.0,>=0.5.5",
    "jax<1.0.0,>=0.4.6",
    "jaxlib<1.0.0,>=0.4.6",
    "more-itertools>=10.2.0",
    "lrspline>=1.15.1",
]
name = "siso"
version = "4.2.0"
description = ""
readme = "README.rst"

[project.scripts]
siso = "siso.__main__:main"

[project.optional-dependencies]
vtf = [
    "vtfwriter",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.ruff]
line-length = 110
include = [
    "siso/**/*.py",
    "tests/**/*.py",
    "stubs/**/*.pyi",
]

[tool.ruff.lint]
select = [
    "F",
    "W",
    "E",
    "I",
    "UP",
    "C4",
    "FA",
    "ISC",
    "ICN",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "PTH",
    "TD",
    "NPY",
]
ignore = [
    "E741",
    "SIM115",
    "ISC001",
    "TD003",
]

[tool.ruff.lint.isort]
required-imports = [
    "from __future__ import annotations",
]

[tool.mypy]
plugins = [
    "numpy.typing.mypy_plugin",
]
files = [
    "siso/**/*.py",
]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"
overrides = [
    { module = "siso.util.bisect", ignore_errors = true },
]

[tool.pdm.dev-dependencies]
dev = [
    "pytest<9.0.0,>=8.3.5",
    "mypy<2.0.0,>=1.15.0",
    "ruff<1.0.0,>=0.11.2",
    "bump-my-version>=1.1.1",
    "vtfwriter-stubs>=1.1.0",
]

[tool.pdm.build]
includes = []

[tool.bumpversion]
current_version = "4.2.0"
allow_dirty = false
commit = true
tag = true
parse = "(?x)\n    (?P<major>[0-9]+)\n    \\.(?P<minor>[0-9]+)\n    \\.(?P<patch>[0-9]+)\n    (?:\n        (?P<pre_label>a|b|rc|stable)\n        (?P<pre_number>[0-9]+)?\n    )?\n"
serialize = [
    "{major}.{minor}.{patch}{pre_label}{pre_number}",
    "{major}.{minor}.{patch}",
]
message = "Bump version: {current_version} -> {new_version}"
tag_message = "Bump version: {current_version} -> {new_version}"
sign_tags = true
files = [
    { filename = "pyproject.toml" },
]

[tool.bumpversion.parts.pre_label]
optional_value = "stable"
values = [
    "a",
    "b",
    "rc",
    "stable",
]

[tool.bumpversion.parts.pre_number]
first_value = "1"
