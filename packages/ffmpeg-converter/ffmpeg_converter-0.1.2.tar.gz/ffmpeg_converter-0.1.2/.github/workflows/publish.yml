name: Publish Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_check:
        description: '跳过版本检查'
        type: boolean
        default: false
      dry_run:
        description: '模拟发布（不实际发布到 PyPI）'
        type: boolean
        default: false
      skip_tests:
        description: '跳过测试'
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ffmpeg-converter
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check version
        if: ${{ !inputs.version_check }}
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(grep -Po "__version__ = \"\K[^\"]*" src/__init__.py)
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Version mismatch: Tag version ($TAG_VERSION) does not match package version ($PACKAGE_VERSION)"
            exit 1
          fi
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          uv sync
      
      - name: Run tests
        if: ${{ !inputs.skip_tests }}
        run: |
          uv run pytest --cov=src --cov-report=xml
      
      - name: Build package
        run: |
          uv build
      
      - name: Publish to PyPI
        if: ${{ !inputs.dry_run }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
      
      - name: Dry run summary
        if: ${{ inputs.dry_run }}
        run: |
          echo "### 发布模拟运行完成 ✨" >> $GITHUB_STEP_SUMMARY
          echo "- 包版本: $(grep -Po "__version__ = \"\K[^\"]*" src/__init__.py)" >> $GITHUB_STEP_SUMMARY
          echo "- 构建文件:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY