[project]
name = "minimux"
version = "1.3.0"
description = "A lightweight non-interactive terminal multiplexer."
authors = [
    {name = "Dominic Price",email = "dominicprice@outlook.com"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "click (>=8.1.8,<9.0.0)"
]

[tool.poetry]
packages = [{include = "minimux", from = "src"}]

[tool.poetry.scripts]
minimux = "minimux.__main__:main"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
mypy = "^1.15.0"
black = "^25.1.0"
isort = "^6.0.1"
bump-my-version = "^1.1.1"

[tool.bumpversion]
current_version = "1.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
  filename = "src/minimux/__init__.py"
  search = "__version__ = \"{current_version}\""
  replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
  filename = "src/minimux/__init__.py"
  parse = "(?P<major>\\d+), (?P<minor>\\d+), (?P<patch>\\d+)"
  serialize = ["{major}, {minor}, {patch}"]
  search = "__version_info__ = ({current_version})"
  replace = "__version_info__ = ({new_version})"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
