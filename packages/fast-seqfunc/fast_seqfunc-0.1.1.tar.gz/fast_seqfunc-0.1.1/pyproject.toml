[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 100
exclude = ["setup.py", "docs", "build", "examples"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 2
quiet = false
whitelist-regex = []
color = true

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing --durations=10"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.isort]
profile = "black"

[tool.ruff]
# See https://docs.astral.sh/ruff/rules/ for a list of rules.
# See https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml for configuration documentation
select = ["E", "F", "I"]

[project]
name = "fast-seqfunc"
version = "0.1.1"
# NOTE: move dependencies into this section if you need to distribute the project as a Python package.
requires-python = ">=3.10"
dependencies = [
    "typer>=0.9.0",
    "numpy>=1.22.0",
    "pandas>=1.5.0",
    "scikit-learn>=1.2.0",
    "loguru>=0.7.0",
    "pycaret>=2.2.3,<4",
    "lazy-loader>=0.4,<0.5"
]
readme = "README.md"

[project.scripts]
fast-seqfunc = "fast_seqfunc.cli:app"


[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.pypi-dependencies]
fast-seqfunc = { path = ".", editable = true }

# NOTE: Core dependencies (needed for running the program) go here.
[tool.pixi.dependencies]
pycaret = ">=2.2.3,<4"
typer = ">=0.9.0"
numpy = ">=1.22.0"
pandas = ">=1.5.0"
scikit-learn = ">=1.2.0"
loguru = ">=0.7.0"
seaborn = ">=0.13.2,<0.14"

# NOTE: Testing dependencies (not needed for running program) go here.
[tool.pixi.feature.tests.dependencies]
pytest = "*"
pytest-cov = "*"
hypothesis = "*"

# NOTE: Docs dependencies (needed for documentation and notebooks) go here.
[tool.pixi.feature.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mknotebooks = "*"

[tool.pixi.feature.notebook.dependencies]
ipykernel = "*"
ipython = "*"
jupyter = "*"
pixi-kernel = "*"

[tool.pixi.feature.devtools.dependencies]
pre-commit = "*"

# NOTE: CUDA feature is inspired by https://github.com/prefix-dev/pixi/issues/1051#issuecomment-2088820974
[tool.pixi.feature.cuda]
system-requirements = { cuda = "12" }

[tool.pixi.feature.cuda.target.linux-64.dependencies]
jaxlib = { version = "*", build = "*cuda12*" }

[tool.pixi.feature.tests.tasks]
test = "pytest"

[tool.pixi.feature.devtools.tasks]
lint = "pre-commit run --all-files"
commit = "git commit"

[tool.pixi.feature.docs.tasks]
build-docs = "mkdocs build"
serve-docs = "mkdocs serve"

[tool.pixi.feature.setup.tasks]
setup = "pre-commit autoupdate && pre-commit install --install-hooks"
update = "pre-commit autoupdate"

[tool.pixi.environments]
default = { features = ["tests", "devtools", "notebook", "setup"] }
docs = { features = ["docs"] }
tests = { features = ["tests", "setup"] }
cuda = { features = ["tests", "devtools", "notebook", "setup", "cuda"] }
