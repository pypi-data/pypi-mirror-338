# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from swh.provenance.grpc import swhprovenance_pb2 as swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2


class ProvenanceServiceStub(object):
    """Content Provenance service 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WhereIsOne = channel.unary_unary(
                '/swh.provenance.ProvenanceService/WhereIsOne',
                request_serializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneRequest.SerializeToString,
                response_deserializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneResult.FromString,
                )
        self.WhereAreOne = channel.unary_stream(
                '/swh.provenance.ProvenanceService/WhereAreOne',
                request_serializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereAreOneRequest.SerializeToString,
                response_deserializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneResult.FromString,
                )


class ProvenanceServiceServicer(object):
    """Content Provenance service 
    """

    def WhereIsOne(self, request, context):
        """Given an object's SWHID, returns an origin and revision/release where it can be found 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhereAreOne(self, request, context):
        """Given several objects' SWHIDs, returns an origin and revision/release for each of them
        where they can be found, in arbitrary order.

        Nodes with no known provenance are returned with both their anchor and origin empty. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProvenanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WhereIsOne': grpc.unary_unary_rpc_method_handler(
                    servicer.WhereIsOne,
                    request_deserializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneRequest.FromString,
                    response_serializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneResult.SerializeToString,
            ),
            'WhereAreOne': grpc.unary_stream_rpc_method_handler(
                    servicer.WhereAreOne,
                    request_deserializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereAreOneRequest.FromString,
                    response_serializer=swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'swh.provenance.ProvenanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProvenanceService(object):
    """Content Provenance service 
    """

    @staticmethod
    def WhereIsOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/swh.provenance.ProvenanceService/WhereIsOne',
            swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneRequest.SerializeToString,
            swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhereAreOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/swh.provenance.ProvenanceService/WhereAreOne',
            swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereAreOneRequest.SerializeToString,
            swh_dot_provenance_dot_grpc_dot_swhprovenance__pb2.WhereIsOneResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
