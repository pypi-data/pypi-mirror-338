# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages  # noqa: E501

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pulpcore.client.pulp_container.configuration import Configuration


class ContainerContainerPullThroughDistributionResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'repository': 'str',
        'pulp_last_updated': 'datetime',
        'pulp_labels': 'dict(str, str)',
        'content_guard': 'str',
        'pulp_created': 'datetime',
        'base_path': 'str',
        'prn': 'str',
        'hidden': 'bool',
        'pulp_href': 'str',
        'name': 'str',
        'no_content_change_since': 'str',
        'remote': 'str',
        'distributions': 'list[str]',
        'namespace': 'str',
        'private': 'bool',
        'description': 'str'
    }

    attribute_map = {
        'repository': 'repository',
        'pulp_last_updated': 'pulp_last_updated',
        'pulp_labels': 'pulp_labels',
        'content_guard': 'content_guard',
        'pulp_created': 'pulp_created',
        'base_path': 'base_path',
        'prn': 'prn',
        'hidden': 'hidden',
        'pulp_href': 'pulp_href',
        'name': 'name',
        'no_content_change_since': 'no_content_change_since',
        'remote': 'remote',
        'distributions': 'distributions',
        'namespace': 'namespace',
        'private': 'private',
        'description': 'description'
    }

    def __init__(self, repository=None, pulp_last_updated=None, pulp_labels=None, content_guard=None, pulp_created=None, base_path=None, prn=None, hidden=False, pulp_href=None, name=None, no_content_change_since=None, remote=None, distributions=None, namespace=None, private=None, description=None, local_vars_configuration=None):  # noqa: E501
        """ContainerContainerPullThroughDistributionResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._repository = None
        self._pulp_last_updated = None
        self._pulp_labels = None
        self._content_guard = None
        self._pulp_created = None
        self._base_path = None
        self._prn = None
        self._hidden = None
        self._pulp_href = None
        self._name = None
        self._no_content_change_since = None
        self._remote = None
        self._distributions = None
        self._namespace = None
        self._private = None
        self._description = None
        self.discriminator = None

        self.repository = repository
        if pulp_last_updated is not None:
            self.pulp_last_updated = pulp_last_updated
        if pulp_labels is not None:
            self.pulp_labels = pulp_labels
        if content_guard is not None:
            self.content_guard = content_guard
        if pulp_created is not None:
            self.pulp_created = pulp_created
        self.base_path = base_path
        if prn is not None:
            self.prn = prn
        if hidden is not None:
            self.hidden = hidden
        if pulp_href is not None:
            self.pulp_href = pulp_href
        self.name = name
        if no_content_change_since is not None:
            self.no_content_change_since = no_content_change_since
        self.remote = remote
        if distributions is not None:
            self.distributions = distributions
        if namespace is not None:
            self.namespace = namespace
        if private is not None:
            self.private = private
        self.description = description

    @property
    def repository(self):
        """Gets the repository of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        The latest RepositoryVersion for this Repository will be served.  # noqa: E501

        :return: The repository of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ContainerContainerPullThroughDistributionResponse.

        The latest RepositoryVersion for this Repository will be served.  # noqa: E501

        :param repository: The repository of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._repository = repository

    @property
    def pulp_last_updated(self):
        """Gets the pulp_last_updated of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same.  # noqa: E501

        :return: The pulp_last_updated of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._pulp_last_updated

    @pulp_last_updated.setter
    def pulp_last_updated(self, pulp_last_updated):
        """Sets the pulp_last_updated of this ContainerContainerPullThroughDistributionResponse.

        Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same.  # noqa: E501

        :param pulp_last_updated: The pulp_last_updated of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: datetime
        """

        self._pulp_last_updated = pulp_last_updated

    @property
    def pulp_labels(self):
        """Gets the pulp_labels of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501


        :return: The pulp_labels of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._pulp_labels

    @pulp_labels.setter
    def pulp_labels(self, pulp_labels):
        """Sets the pulp_labels of this ContainerContainerPullThroughDistributionResponse.


        :param pulp_labels: The pulp_labels of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: dict(str, str)
        """

        self._pulp_labels = pulp_labels

    @property
    def content_guard(self):
        """Gets the content_guard of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        An optional content-guard. If none is specified, a default one will be used.  # noqa: E501

        :return: The content_guard of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._content_guard

    @content_guard.setter
    def content_guard(self, content_guard):
        """Sets the content_guard of this ContainerContainerPullThroughDistributionResponse.

        An optional content-guard. If none is specified, a default one will be used.  # noqa: E501

        :param content_guard: The content_guard of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._content_guard = content_guard

    @property
    def pulp_created(self):
        """Gets the pulp_created of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Timestamp of creation.  # noqa: E501

        :return: The pulp_created of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._pulp_created

    @pulp_created.setter
    def pulp_created(self, pulp_created):
        """Sets the pulp_created of this ContainerContainerPullThroughDistributionResponse.

        Timestamp of creation.  # noqa: E501

        :param pulp_created: The pulp_created of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: datetime
        """

        self._pulp_created = pulp_created

    @property
    def base_path(self):
        """Gets the base_path of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")  # noqa: E501

        :return: The base_path of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._base_path

    @base_path.setter
    def base_path(self, base_path):
        """Sets the base_path of this ContainerContainerPullThroughDistributionResponse.

        The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")  # noqa: E501

        :param base_path: The base_path of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and base_path is None:  # noqa: E501
            raise ValueError("Invalid value for `base_path`, must not be `None`")  # noqa: E501

        self._base_path = base_path

    @property
    def prn(self):
        """Gets the prn of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        The Pulp Resource Name (PRN).  # noqa: E501

        :return: The prn of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._prn

    @prn.setter
    def prn(self, prn):
        """Sets the prn of this ContainerContainerPullThroughDistributionResponse.

        The Pulp Resource Name (PRN).  # noqa: E501

        :param prn: The prn of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._prn = prn

    @property
    def hidden(self):
        """Gets the hidden of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Whether this distribution should be shown in the content app.  # noqa: E501

        :return: The hidden of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this ContainerContainerPullThroughDistributionResponse.

        Whether this distribution should be shown in the content app.  # noqa: E501

        :param hidden: The hidden of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: bool
        """

        self._hidden = hidden

    @property
    def pulp_href(self):
        """Gets the pulp_href of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501


        :return: The pulp_href of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._pulp_href

    @pulp_href.setter
    def pulp_href(self, pulp_href):
        """Sets the pulp_href of this ContainerContainerPullThroughDistributionResponse.


        :param pulp_href: The pulp_href of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._pulp_href = pulp_href

    @property
    def name(self):
        """Gets the name of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        A unique name. Ex, `rawhide` and `stable`.  # noqa: E501

        :return: The name of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContainerContainerPullThroughDistributionResponse.

        A unique name. Ex, `rawhide` and `stable`.  # noqa: E501

        :param name: The name of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def no_content_change_since(self):
        """Gets the no_content_change_since of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Timestamp since when the distributed content served by this distribution has not changed. If equals to `null`, no guarantee is provided about content changes.  # noqa: E501

        :return: The no_content_change_since of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._no_content_change_since

    @no_content_change_since.setter
    def no_content_change_since(self, no_content_change_since):
        """Sets the no_content_change_since of this ContainerContainerPullThroughDistributionResponse.

        Timestamp since when the distributed content served by this distribution has not changed. If equals to `null`, no guarantee is provided about content changes.  # noqa: E501

        :param no_content_change_since: The no_content_change_since of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._no_content_change_since = no_content_change_since

    @property
    def remote(self):
        """Gets the remote of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Remote that can be used to fetch content when using pull-through caching.  # noqa: E501

        :return: The remote of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote

    @remote.setter
    def remote(self, remote):
        """Sets the remote of this ContainerContainerPullThroughDistributionResponse.

        Remote that can be used to fetch content when using pull-through caching.  # noqa: E501

        :param remote: The remote of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and remote is None:  # noqa: E501
            raise ValueError("Invalid value for `remote`, must not be `None`")  # noqa: E501

        self._remote = remote

    @property
    def distributions(self):
        """Gets the distributions of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Distributions created after pulling content through cache  # noqa: E501

        :return: The distributions of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._distributions

    @distributions.setter
    def distributions(self, distributions):
        """Sets the distributions of this ContainerContainerPullThroughDistributionResponse.

        Distributions created after pulling content through cache  # noqa: E501

        :param distributions: The distributions of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: list[str]
        """

        self._distributions = distributions

    @property
    def namespace(self):
        """Gets the namespace of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Namespace this distribution belongs to.  # noqa: E501

        :return: The namespace of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this ContainerContainerPullThroughDistributionResponse.

        Namespace this distribution belongs to.  # noqa: E501

        :param namespace: The namespace of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._namespace = namespace

    @property
    def private(self):
        """Gets the private of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access.  # noqa: E501

        :return: The private of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: bool
        """
        return self._private

    @private.setter
    def private(self, private):
        """Sets the private of this ContainerContainerPullThroughDistributionResponse.

        Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access.  # noqa: E501

        :param private: The private of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: bool
        """

        self._private = private

    @property
    def description(self):
        """Gets the description of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501

        An optional description.  # noqa: E501

        :return: The description of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContainerContainerPullThroughDistributionResponse.

        An optional description.  # noqa: E501

        :param description: The description of this ContainerContainerPullThroughDistributionResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContainerContainerPullThroughDistributionResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ContainerContainerPullThroughDistributionResponse):
            return True

        return self.to_dict() != other.to_dict()
