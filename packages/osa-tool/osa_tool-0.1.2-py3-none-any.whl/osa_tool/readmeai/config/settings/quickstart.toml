[default]
tool = "Default"
install = "echo 'INSERT-INSTALL-COMMANDS'"
run = "echo 'INSERT-RUN-COMMANDS'"
test = "echo 'INSERT-TEST-COMMANDS'"
shield = ""
website = ""

[bash]
tool = "Bash"
install = "./scripts/install.sh"
run = "./scripts/run.sh"
test = "./scripts/test.sh"
shield = "https://img.shields.io/badge/Shell_Script-121011.svg?style={badge_style}&logo=gnu-bash&logoColor=white"
website = "https://www.gnu.org/software/bash/"

[dockerfile]
tool = ["Dockerfile", "Dockerfile.dev", "Dockerfile.prod"]
install = "docker build -t {project_name} ."
run = "docker run -it {project_name}"
test = "docker exec -it {project_name} pytest"
shield = "https://img.shields.io/badge/Docker-2CA5E0.svg?style={badge_style}&logo=docker&logoColor=white"
website = "https://www.docker.com/"

[docker_compose]
tool = ["docker-compose.yml", "docker-compose.dev.yml", "docker-compose.prod.yml"]
install = "docker-compose build"
run = ["docker-compose up -d", "docker-compose up --build -d"]
test = "docker-compose run --rm {service}"
shield = "https://img.shields.io/badge/Docker_Compose-2CA5E0.svg?style={badge_style}&logo=docker&logoColor=white"
website = "https://docs.docker.com/compose/"

[pip]
tool = ["requirements.txt", "requirements-dev.txt", "requirements-prod.txt", "requirements.in", "requirements.test.txt"]
install = "pip install -r requirements.txt"
run = "python {entrypoint}"
test = "pytest"
shield = "https://img.shields.io/badge/pip-3775A9.svg?style={badge_style}&logo=pypi&logoColor=white"
website = "https://pip.pypa.io/"

[pipx]
tool = ["requirements.txt", "requirements-dev.txt", "requirements-prod.txt", "requirements.in", "requirements.test.txt"]
install = "pipx install -r requirements.txt"
run = "pipx run {entrypoint} {args}"
test = "pytest"
shield = ""
website = "https://pipxproject.github.io/pipx/"

[poetry]
tool = ["pyproject.toml", "poetry.lock"]
install = "poetry install"
run = "poetry run python {entrypoint}"
test = "poetry run pytest"
shield = "https://img.shields.io/badge/Poetry-3B5526.svg?style={badge_style}&logo=poetry&logoColor=white"
website = "https://python-poetry.org/"

[pipfile]
tool = ["Pipfile", "Pipfile.lock"]
install = "pipenv install"
run = "pipenv shell\npipenv run python {entrypoint}"
test = "pipenv shell\npipenv run pytest"
shield = "https://img.shields.io/badge/Pipenv-3775A9.svg?style={badge_style}&logo=pypi&logoColor=white"
website = "https://pipenv.pypa.io/"

[conda]
tool = ["conda.yml", "conda.yaml", "environment.yml", "environment.yaml"]
install = "conda env create -f environment.yaml"
run = "conda activate {venv}\npython {entrypoint}"
test = "conda activate {venv}\npytest"
shield = "https://img.shields.io/badge/conda-342B029.svg?style={badge_style}&logo=anaconda&logoColor=white"
website = "https://docs.conda.io/"

[flit]
tool = ["pyproject.toml", "flit.ini"]
install = "flit install"
run = "python -m {entrypoint}"
test = "python -m pytest"
shield = "https://img.shields.io/badge/Flit-3B5526.svg?style={badge_style}&logo=flit&logoColor=white"
website = "https://flit.readthedocs.io/"

[pdm]
tool = ["pyproject.toml", "pdm.lock"]
install = "pdm install"
run = "pdm run python {entrypoint}"
test = "pdm run pytest"
shield = "https://img.shields.io/badge/PDM-AC75D7.svg?style={badge_style}&logo=PDM&logoColor=white"
website = "https://pdm.fming.dev/"

[streamlit]
tool = ["requirements.txt", "app.py"]
install = "pip install -r requirements.txt"
run = "streamlit run {entrypoint}"
test = "pytest"
shield = "https://img.shields.io/badge/Streamlit-FF4B4B.svg?style={badge_style}&logo=streamlit&logoColor=white"
website = "https://streamlit.io/"

[package_json]
tool = "Npm"
install = "npm install"
run = "npm start"
test = "npm test"
shield = "https://img.shields.io/badge/npm-CB3837.svg?style={badge_style}&logo=npm&logoColor=white"
website = "https://www.npmjs.com/"

[package-lock_json]
tool = "npm"
install = "npm ci"
run = "npm start"
test = "npm test"
shield = "https://img.shields.io/badge/npm-CB3837.svg?style={badge_style}&logo=npm&logoColor=white"
website = "https://www.npmjs.com/"

[yarn_lock]
tool = "Yarn"
install = "yarn install"
run = "yarn start"
test = "yarn test"
shield = "https://img.shields.io/badge/yarn-2C8EBB.svg?style={badge_style}&logo=yarn&logoColor=white"
website = "https://yarnpkg.com/"

[gemfile_lock]
tool = "Bundler"
install = "bundle install"
run = "bundle exec ruby {entrypoint}"
test = "bundle exec rspec"
shield = "https://img.shields.io/badge/Ruby-CC342D.svg?style={badge_style}&logo=ruby&logoColor=white"
website = "https://bundler.io/"

[pom_xml]
tool = "Maven"
install = "mvn clean install"
run = "mvn exec:java -Dexec.mainClass=\"{entrypoint}\""
test = "mvn test"
shield = "https://img.shields.io/badge/Apache_Maven-C71A36.svg?style={badge_style}&logo=apache-maven&logoColor=white"
website = "https://maven.apache.org/"

[maven_pom]
tool = "Maven"
install = "mvn install"
run = "mvn spring-boot:run"                                                                                    # If it's a Spring Boot app, adjust accordingly
test = "mvn test"
shield = "https://img.shields.io/badge/Maven-DC5226.svg?style={badge_style}&logo=apache-maven&logoColor=white"
website = "https://maven.apache.org/"

[gradle_build]
tool = "Gradle"
install = "./gradlew install"
run = "./gradlew run"
test = "./gradlew test"
shield = "https://img.shields.io/badge/Gradle-02303A.svg?style={badge_style}&logo=gradle&logoColor=white"
website = "https://gradle.org/"

[cargo_toml]
tool = "Cargo"
install = "cargo build"
run = "cargo run"
test = "cargo test"
shield = "https://img.shields.io/badge/Rust-000000.svg?style={badge_style}&logo=rust&logoColor=white"
website = "https://www.rust-lang.org/"

[cargo_lock]
tool = "Cargo"
install = "cargo build"
run = "cargo run"
test = "cargo test"
shield = "https://img.shields.io/badge/Cargo-000000.svg?style={badge_style}&logo=rust&logoColor=white"
website = "https://doc.rust-lang.org/cargo/"

[rust-toolchain_toml]
tool = "Rust"
install = "rustup toolchain install"
run = "cargo run"
test = "cargo test"
shield = "https://img.shields.io/badge/Rust-000000.svg?style={badge_style}&logo=rust&logoColor=white"
website = "https://www.rust-lang.org/"

[go_mod]
tool = "Go Modules"
install = "go get ./..."
run = "go run {entrypoint}"
test = "go test ./..."
shield = "https://img.shields.io/badge/Go-00ADD8.svg?style={badge_style}&logo=go&logoColor=white"
website = "https://golang.org/"

[go_sum]
tool = "Go Modules"
install = "go get ./..."
run = "go run {entrypoint}"
test = "go test ./..."
shield = "https://img.shields.io/badge/Go-00ADD8.svg?style={badge_style}&logo=go&logoColor=white"
website = "https://golang.org/"

[gopkg_lock]
tool = "Go Modules"
install = "go get ./..."
run = "go run {entrypoint}"
test = "go test ./..."
shield = "https://img.shields.io/badge/Go-00ADD8.svg?style={badge_style}&logo=go&logoColor=white"
website = "https://golang.org/"

[tsconfig_json]
tool = "TypeScript"
install = "npm install"
run = "ts-node {entrypoint}"
test = "npm test"
shield = "https://img.shields.io/badge/TypeScript-007ACC.svg?style={badge_style}&logo=typescript&logoColor=white"
website = "https://www.typescriptlang.org/"

[deno_json]
tool = "Deno"
install = "deno cache {entrypoint}"
run = "deno run {entrypoint}"
test = "deno test"
shield = "https://img.shields.io/badge/Deno-000000.svg?style={badge_style}&logo=deno&logoColor=white"
website = "https://deno.land/"

[sbt_build]
tool = "sbt"
install = "sbt compile"
run = "sbt run"
test = "sbt test"
shield = "https://img.shields.io/badge/sbt-DC322F.svg?style={badge_style}&logo=scala&logoColor=white"
website = "https://www.scala-sbt.org/"

[build_sbt]
tool = "sbt"
install = "sbt compile"
run = "sbt run"
test = "sbt test"
shield = "https://img.shields.io/badge/sbt-DC322F.svg?style={badge_style}&logo=scala&logoColor=white"
website = "https://www.scala-sbt.org/"

[mix_exs]
tool = "Mix"
install = "mix deps.get"
run = "mix run"
test = "mix test"
shield = "https://img.shields.io/badge/Elixir-4B275F.svg?style={badge_style}&logo=elixir&logoColor=white"
website = "https://elixir-lang.org/"

[mix_lock]
tool = "Mix"
install = "mix deps.get"
run = "mix run"
test = "mix test"
shield = "https://img.shields.io/badge/Mix-6C1F87.svg?style={badge_style}&logo=elixir&logoColor=white"
website = "https://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html"

[rebar_config]
tool = "Rebar3"
install = "rebar3 compile"
run = "rebar3 shell"
test = "rebar3 eunit"
shield = "https://img.shields.io/badge/Erlang-A90533.svg?style={badge_style}&logo=erlang&logoColor=white"
website = "https://www.rebar3.org/"

[stack_yaml]
tool = "Stack"
install = "stack build"
run = "stack exec"
test = "stack test"
shield = "https://img.shields.io/badge/Haskell-5D4F85.svg?style={badge_style}&logo=haskell&logoColor=white"
website = "https://docs.haskellstack.org/"

[gatsby-config_js]
tool = "Gatsby"
install = "npm install"
run = "gatsby develop"
test = "npm test"
shield = "https://img.shields.io/badge/Gatsby-663399.svg?style={badge_style}&logo=gatsby&logoColor=white"
website = "https://www.gatsbyjs.com/"

[next_config_js]
tool = "Next.js"
install = "npm install"
run = "npm run dev"
test = "npm test"
shield = "https://img.shields.io/badge/Next.js-000000.svg?style={badge_style}&logo=next.js&logoColor=white"
website = "https://nextjs.org/"

[nuxt_config_js]
tool = "Nuxt.js"
install = "npm install"
run = "npm run dev"
test = "npm test"
shield = "https://img.shields.io/badge/Nuxt.js-00C58E.svg?style={badge_style}&logo=nuxt.js&logoColor=white"
website = "https://nuxtjs.org/"

[flake_nix]
tool = "Nix"
install = "nix-shell --run 'pip install -r requirements.txt'"
run = "nix-shell --run 'python {entrypoint}'"
test = "nix-shell --run 'pytest'"
shield = "https://img.shields.io/badge/Nix-5277C3.svg?style={badge_style}&logo=nixos&logoColor=white"
website = "https://nixos.org/"

[composer_json]
tool = "Composer"
install = "composer install"
run = "php {entrypoint}"
test = "composer test"
shield = "https://img.shields.io/badge/Composer-885630.svg?style={badge_style}&logo=composer&logoColor=white"
website = "https://getcomposer.org/"

[composer_lock]
tool = "Composer"
install = "composer install"
run = "php {entrypoint}"
test = "composer test"
shield = "https://img.shields.io/badge/Composer-885630.svg?style={badge_style}&logo=composer&logoColor=white"
website = "https://getcomposer.org/"

[rubocop_yml]
tool = "RuboCop"
install = "gem install rubocop"
run = "rubocop"
test = "rubocop"
shield = "https://img.shields.io/badge/RuboCop-000000.svg?style={badge_style}&logo=rubygems&logoColor=white"
website = "https://rubocop.org/"

[eslintrc_js]
tool = "ESLint"
install = "npm install eslint"
run = "eslint ."
test = "eslint ."
shield = "https://img.shields.io/badge/ESLint-4B32C3.svg?style={badge_style}&logo=eslint&logoColor=white"
website = "https://eslint.org/"

[prettierrc_js]
tool = "Prettier"
install = "npm install prettier"
run = "prettier --write ."
test = "prettier --check ."
shield = "https://img.shields.io/badge/Prettier-F7B93E.svg?style={badge_style}&logo=prettier&logoColor=white"
website = "https://prettier.io/"

[angular_json]
tool = "Angular"
install = "npm install"
run = "ng serve"
test = "ng test"
shield = "https://img.shields.io/badge/Angular-0F0F11.svg?style={badge_style}&logo=Angular&logoColor=white"
website = "https://angular.io/"

[vue_config_js]
tool = "Vue.js"
install = "npm install"
run = "npm run serve"
test = "npm test"
shield = "https://img.shields.io/badge/Vue.js-4FC08D.svg?style={badge_style}&logo=vue.js&logoColor=white"
website = "https://vuejs.org/"

[svelte_config_js]
tool = "Svelte"
install = "npm install"
run = "npm run dev"
test = "npm test"
shield = "https://img.shields.io/badge/Svelte-FF3E00.svg?style={badge_style}&logo=Svelte&logoColor=white"
website = "https://svelte.dev/"

[pubspec_yaml]
tool = "Flutter"
install = "flutter pub get"
run = "flutter run"
test = "flutter test"
shield = "https://img.shields.io/badge/Flutter-02569B.svg?style={badge_style}&logo=flutter&logoColor=white"
website = "https://flutter.dev/"

[project_clj]
tool = "Leiningen"
install = "lein deps"
run = "lein run"
test = "lein test"
shield = "https://img.shields.io/badge/Leiningen-2E2E2E.svg?style={badge_style}&logo=clojure&logoColor=white"
website = "https://leiningen.org/"

[cake_build]
tool = "Cake"
install = "dotnet cake"
run = "dotnet cake"
test = "dotnet cake --target=Test"
shield = "https://img.shields.io/badge/Cake-A41D1D.svg?style={badge_style}&logo=cakebuild&logoColor=white"
website = "https://cakebuild.net/"

[project_json]
tool = ".NET CLI"
install = "dotnet restore"
run = "dotnet run --project {entrypoint}"
test = "dotnet test"
shield = "https://img.shields.io/badge/.NET-512BD4.svg?style={badge_style}&logo=dotnet&logoColor=white"
website = "https://dotnet.microsoft.com/"

[swift_package]
tool = "Swift Package Manager"
install = "swift build"
run = "swift run"
test = "swift test"
shield = "https://img.shields.io/badge/Swift-F05138.svg?style={badge_style}&logo=Swift&logoColor=white"
website = "https://swift.org/package-manager/"

[xcodebuild]
tool = "Xcode"
install = "xcodebuild"
run = "xcodebuild -scheme {scheme} build"
test = "xcodebuild test"
shield = "https://img.shields.io/badge/Xcode-147EFB.svg?style={badge_style}&logo=xcode&logoColor=white"
website = "https://developer.apple.com/xcode/"

[build_xml]
tool = "Ant"
install = "ant compile"
run = "ant run"
test = "ant test"
shield = "https://img.shields.io/badge/Ant-A81C7D.svg?style={badge_style}&logo=apache-ant&logoColor=white"
website = "https://ant.apache.org/"

[junit_config]
tool = "JUnit"
install = "javac *.java"
run = "java {entrypoint}"
test = "java org.junit.runner.JUnitCore {entrypoint}"
shield = "https://img.shields.io/badge/JUnit-25A162.svg?style={badge_style}&logo=junit5&logoColor=white"
website = "https://junit.org/junit5/"

[gradle_kts]
tool = "Gradle"
install = "./gradlew build"
run = "./gradlew run"
test = "./gradlew test"
shield = "https://img.shields.io/badge/Gradle-02303A.svg?style={badge_style}&logo=gradle&logoColor=white"
website = "https://gradle.org/"

[gradle_properties]
tool = "Gradle"
install = "./gradlew build"
run = "./gradlew run"
test = "./gradlew test"
shield = "https://img.shields.io/badge/Gradle-02303A.svg?style={badge_style}&logo=gradle&logoColor=white"
website = "https://gradle.org/"

[gradle_kotlin_dsl]
tool = "Gradle"
install = "./gradlew build"
run = "./gradlew run"
test = "./gradlew test"
shield = "https://img.shields.io/badge/Gradle-02303A.svg?style={badge_style}&logo=gradle&logoColor=white"
website = "https://gradle.org/"

[conanfile_txt]
tool = "Conan"
install = "conan install ."
run = "conan build ."
test = "conan test ."
shield = "https://img.shields.io/badge/Conan-3F9FFF.svg?style={badge_style}&logo=conan&logoColor=white"
website = "https://conan.io/"

[bazel]
tool = "Bazel"
install = "bazel build //:dependencies"
run = "bazel run //:app"
test = "bazel test //..."
shield = "https://img.shields.io/badge/Bazel-66B831.svg?style={badge_style}&logo=bazel&logoColor=white"
website = "https://bazel.build/"

[meson_build]
tool = "Meson"
install = "meson setup builddir"
run = "meson compile -C builddir"
test = "meson test -C builddir"
shield = "https://img.shields.io/badge/Meson-2E2E2E.svg?style={badge_style}&logo=meson&logoColor=white"
website = "https://mesonbuild.com/"
