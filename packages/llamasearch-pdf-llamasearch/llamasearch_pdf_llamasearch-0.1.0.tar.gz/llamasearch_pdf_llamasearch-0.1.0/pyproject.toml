[build-system]
requires = ["setuptools>=45", "wheel>=0.36.0", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "llamasearch-pdf-llamasearch"
description = "A comprehensive PDF processing toolkit for document workflows"
authors = [
    {name = "llamasearch-pdf-llamasearch", email = "nikjois@llamasearch.ai"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
keywords = ["pdf", "ocr", "text-extraction", "metadata", "search", "document-processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Office/Business",
    "Topic :: Multimedia :: Graphics :: Capture :: Scanners",
    "Topic :: Utilities",
]
dynamic = ["version"]
dependencies = [
    "pdfminer.six>=20201018",
    "PyPDF2>=2.0.0",
    "python-poppler>=0.3.0",
    "pytesseract>=0.3.8",
    "Pillow>=8.0.0",
    "tqdm>=4.50.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
    "nltk>=3.6.0",
    "click>=8.0.0",
    "rich>=10.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
ocrmypdf = [
    "ocrmypdf>=13.0.0",
]
huggingface = [
    "transformers>=4.15.0",
    "torch>=1.10.0",
]
search = [
    "scikit-learn>=1.0.0",
    "nltk>=3.6.0",
    "scipy>=1.7.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "black>=21.5b2",
    "isort>=5.9.0",
    "flake8>=3.9.0",
    "mypy>=0.812",
    "pre-commit>=2.13.0",
]
docs = [
    "mkdocs>=1.3.0",
    "mkdocs-material>=8.2.0",
    "mkdocstrings[python]>=0.19.0",
    "mkdocs-include-markdown-plugin>=3.6.0",
    "markdown-include>=0.7.0",
]
all = [
    "ocrmypdf>=13.0.0",
    "transformers>=4.15.0",
    "torch>=1.10.0",
    "scikit-learn>=1.0.0",
    "nltk>=3.6.0",
    "scipy>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/llamasearch-ai/llamasearch-pdf"
Documentation = "https://llamasearch-pdf.readthedocs.io"
Repository = "https://github.com/llamasearch-ai/llamasearch-pdf.git"
Issues = "https://github.com/llamasearch-ai/llamasearch-pdf/issues"
Changelog = "https://github.com/llamasearch-ai/llamasearch-pdf/blob/main/CHANGELOG.md"

[project.scripts]
llamasearch-pdf = "llamasearch_pdf.__main__:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/llamasearch_pdf/_version.py"

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=llamasearch_pdf --cov-report=term-missing --cov-report=xml"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
source = ["llamasearch_pdf"]
omit = ["*/tests/*", "*/__init__.py", "*/_version.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 